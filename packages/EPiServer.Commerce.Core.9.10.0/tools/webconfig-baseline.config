<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">

  <system.webServer>
    <handlers>
      <add name="ReportingHttpHandler"
           preCondition="integratedMode"
           path="Reserved.ReportViewerWebControl.axd"
           verb="*"
           type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
           xdt:Locator="Match(name)"
           xdt:Transform="InsertIfMissing"/>
    </handlers>
    <modules xdt:Transform="InsertIfMissing">
      <add name="BusinessFoundationInitializeModule"
           preCondition="managedHandler"
           type="Mediachase.Commerce.Core.Modules.BusinessFoundationInitializeModule, Mediachase.Commerce"
           xdt:Transform="InsertIfMissing"
           xdt:Locator="Match(name)"/>
      <add name="ProfileModule"
           type="EPiServer.Business.Commerce.HttpModules.ProfileModule, EPiServer.Business.Commerce"
           xdt:Transform="InsertIfMissing"
           xdt:Locator="Match(name)"/>
      <add name="CatalogNodeModule"
           type="EPiServer.Business.Commerce.HttpModules.CatalogNodeModule, EPiServer.Business.Commerce"
           xdt:Transform="InsertIfMissing"
           xdt:Locator="Match(name)"/>
    </modules>
  </system.webServer>

  <appSettings xdt:Transform="InsertIfMissing">
    <add key="CommerceManagerLink" value="" xdt:Transform="InsertIfMissing" xdt:Locator="Match(key)" />
    <add key="episerver:SkipCatalogContentModelCheck" value="true" xdt:Transform="InsertIfMissing" xdt:Locator="Match(key)" />
  </appSettings>

  <system.serviceModel xdt:Transform="InsertIfMissing">
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" xdt:Transform="InsertIfMissing"/>
    <extensions xdt:Transform="InsertIfMissing">
      <bindingElementExtensions xdt:Transform="InsertIfMissing">
        <add name="udpTransportCustom" type="Microsoft.ServiceModel.Samples.UdpTransportElement, EPiServer.Events"  xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
      </bindingElementExtensions>
    </extensions>
    <services xdt:Transform="InsertIfMissing">
      <service name="EPiServer.Events.Remote.EventReplication" behaviorConfiguration="DebugServiceBehaviour" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
        <endpoint name="RemoteEventServiceEndPoint" contract="EPiServer.Events.ServiceModel.IEventReplication" binding="customBinding" bindingConfiguration="RemoteEventsBinding" 
                  address="soap.udp://239.255.255.19:5000/RemoteEventService" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
      </service>
    </services>
    <client xdt:Transform="InsertIfMissing">
      <endpoint name="RemoteEventServiceClientEndPoint" address="soap.udp://239.255.255.19:5000/RemoteEventService" binding="customBinding" bindingConfiguration="RemoteEventsBinding" 
                contract="EPiServer.Events.ServiceModel.IEventReplication" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
    </client>
    <behaviors xdt:Transform="InsertIfMissing">
      <serviceBehaviors xdt:Transform="InsertIfMissing">
        <behavior name="DebugServiceBehaviour" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!--TODO: the option should be only in test environment true in the production should be false-->
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings xdt:Transform="InsertIfMissing">
      <customBinding xdt:Transform="InsertIfMissing">
        <binding name="RemoteEventsBinding" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
          <binaryMessageEncoding />
          <udpTransportCustom multicast="True" />
        </binding>
      </customBinding>
    </bindings>
    <!-- Enable remote service -->
  </system.serviceModel>

  <system.web>

    <caching xdt:Transform="InsertIfMissing">
      <sqlCacheDependency enabled = "true" pollTime = "1000" xdt:Transform="InsertIfMissing">
        <databases xdt:Transform="InsertIfMissing">
          <add name="dbCommerceManager"
            connectionStringName="EcfSqlConnection" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
        </databases>
      </sqlCacheDependency>
    </caching>

    <anonymousIdentification enabled="true" xdt:Transform="InsertIfMissing"/>
    
  </system.web>

  <configSections>
    <sectionGroup name="FrameworkProviders" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
      <section name="dataService"
               type="Mediachase.Data.Provider.DataProviderSection, Mediachase.DataProvider"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="imageService"
               type="Mediachase.Commerce.Engine.Images.ImageServiceSection, Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="templateService"
               type="Mediachase.Commerce.Engine.Template.TemplateProviderSection, Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="urlService"
               type="Mediachase.Commerce.Engine.Navigation.UrlProviderSection, Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
    </sectionGroup>
    <sectionGroup name="CommerceFramework"
                   xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
      <section name="Workflow"
               type="Mediachase.Commerce.WorkflowConfiguration,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="Application"
               type="Mediachase.Commerce.Core.CoreConfiguration,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="Catalog"
               type="Mediachase.Commerce.Catalog.CatalogConfiguration,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="Marketing"
               type="Mediachase.Commerce.Marketing.MarketingConfiguration,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="Orders"
               type="Mediachase.Commerce.Orders.OrderConfiguration,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="Security"
               type="Mediachase.Commerce.Security.Configuration.SecurityConfigurationSection,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="Customers"
               type="Mediachase.Commerce.Customers.Configuration.CustomerConfiguration,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="AssetManagement"
               type="Mediachase.Commerce.Assets.AssetConfiguration, Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
      <section name="SSL"
               type="Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler, Mediachase.Commerce.Website"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      <section name="Mediachase.Search"
               type="Mediachase.Search.SearchConfiguration,Mediachase.Search"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
      <section name="Customization"
               type="Mediachase.Commerce.Customization.Configuration.CustomizationConfiguration,Mediachase.Commerce"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
    </sectionGroup>
    <sectionGroup name="mediachase.businessFoundation.data"
                  type="Mediachase.BusinessFoundation.Data.Configuration.MediachaseDataSectionGroup, Mediachase.BusinessFoundation.Data"
                  xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" >
      <section name="metaClassManager"
               type="Mediachase.BusinessFoundation.Data.Meta.Management.Configuration.MetaClassManagerSection, Mediachase.BusinessFoundation.Data"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
      <section name="metaObject"
               type="Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection, Mediachase.BusinessFoundation.Data"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"  />
      <section name="businessManager"
               type="Mediachase.BusinessFoundation.Data.Business.Configuration.BusinessManagerSection, Mediachase.BusinessFoundation.Data"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
    </sectionGroup>
    <sectionGroup name="Mediachase.BusinessFoundation"
                  xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)">
      <section name="BusinessFoundationSettings"
               type="Mediachase.BusinessFoundation.Configuration.BusinessFoundationConfigurationSection, Mediachase.BusinessFoundation"
               xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
    </sectionGroup>
  </configSections>

  <mediachase.businessFoundation.data xdt:Transform="InsertIfMissing">
    <businessManager configSource="Configs\baf.data.manager.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </businessManager>
    <metaObject configSource="Configs\baf.data.metaobject.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </metaObject>
  </mediachase.businessFoundation.data>
  <Mediachase.BusinessFoundation xdt:Transform="InsertIfMissing">
    <BusinessFoundationSettings configSource="Configs\baf.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </BusinessFoundationSettings>
  </Mediachase.BusinessFoundation>
  <CommerceFramework xdt:Transform="InsertIfMissing">
    <Mediachase.Search configSource="Configs\Mediachase.Search.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)"/>
    <AssetManagement configSource="Configs\ecf.asset.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </AssetManagement>
    <Workflow configSource="Configs\ecf.workflow.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Workflow>
    <Application configSource="Configs\ecf.app.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Application>
    <Catalog configSource="Configs\ecf.catalog.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Catalog>
    <Marketing configSource="Configs\ecf.marketing.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Marketing>
    <Orders configSource="Configs\ecf.order.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Orders>
    <Customers configSource="Configs\ecf.customer.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Customers>
    <Security configSource="Configs\ecf.security.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Security>
    <SSL configSource="Configs\ecf.ssl.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </SSL>
    <Customization configSource="Configs\ecf.customization.config" xdt:Transform="InsertIfMissing" xdt:Locator="Match(configSource)">
    </Customization>
  </CommerceFramework>
  <FrameworkProviders xdt:Transform="InsertIfMissing">
    <dataService defaultProvider="SqlDataProvider" xdt:Transform="InsertIfMissing">
      <providers xdt:Transform="InsertIfMissing">
        <add name="SqlDataProvider"
             type="Mediachase.Data.Provider.SqlDataProvider, Mediachase.SqlDataProvider"
             connectionStringName="EcfSqlConnection"
             applicationName="ECApplication" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      </providers>
    </dataService>
    <templateService defaultProvider="XslTemplateProvider" xdt:Transform="InsertIfMissing">
      <providers xdt:Transform="InsertIfMissing">
        <add name="XslTemplateProvider"
             type="Mediachase.Commerce.Engine.Template.Providers.XslTemplateProvider, Mediachase.Commerce"
             applicationName="ECApplication"
             templateSource="..\NotificationTemplates\{0}\{1}.xsl" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      </providers>
    </templateService>
    <imageService defaultProvider="HandlerImageProvider" xdt:Transform="InsertIfMissing">
      <providers xdt:Transform="InsertIfMissing">
        <add name="HandlerImageProvider"
             type="Mediachase.Commerce.Engine.Images.Providers.HandlerImageProvider, Mediachase.Commerce"
             urlFormatString="~/images/t/{0}.image.ashx"
             applicationName="ECApplication" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      </providers>
    </imageService>
  </FrameworkProviders>

  <FrameworkProviders xdt:Transform="InsertIfMissing">
    <urlService defaultProvider="EPiStaticUrlProvider" xdt:Transform="InsertIfMissing">
      <providers xdt:Transform="InsertIfMissing">
        <add name="EPiStaticUrlProvider"
             type="EPiServer.Business.Commerce.Providers.StaticUrlProvider, EPiServer.Business.Commerce" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)"/>
      </providers>
    </urlService>
  </FrameworkProviders>

  <episerver.framework>
    <virtualRoles>
      <providers>
        <add name="CommerceAdmins" type="EPiServer.Security.MappedRole, EPiServer.Framework" roles="WebAdmins, Administrators" mode="Any" xdt:Transform="InsertIfMissing" xdt:Locator="Match(name)" />
      </providers>
    </virtualRoles>
  </episerver.framework>
</configuration>