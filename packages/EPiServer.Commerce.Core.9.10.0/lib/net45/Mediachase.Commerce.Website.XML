<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediachase.Commerce.Website</name>
    </assembly>
    <members>
        <member name="M:Mediachase.Commerce.Website.BaseControls.StaticBasePage.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            We override Render to swap out the default HtmlTextWriter for our own. Our own Writer's sole purpose is to
            change the the action attribute on the form tag to the vanity Url. This way all postbacks occur on the vanity url
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> that receives the page content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.StaticBasePage.FormFixerHtml32TextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.BaseControls.StaticBasePage.FormFixerHtml32TextWriter"/> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.StaticBasePage.FormFixerHtml32TextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
            <summary>
            Writes the attribute.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="encode">if set to <c>true</c> [encode].</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.StaticBasePage.FormFixerHtmlTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.BaseControls.StaticBasePage.FormFixerHtmlTextWriter"/> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.StaticBasePage.FormFixerHtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
            <summary>
            Writes the attribute.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="encode">if set to <c>true</c> [encode].</param>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.Adapters.WizardAdapter">
            <summary>
            The wizard adpater will render the standard wizard control using div's rather than
            tables.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.WizardAdapter.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Handlers.StaticCatalogUriHandler.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
            <summary>
            Returns an instance of a class that implements the <see cref="T:System.Web.IHttpHandler"></see> interface.
            </summary>
            <param name="context">An instance of the <see cref="T:System.Web.HttpContext"></see> class that provides references to intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
            <param name="requestType">The HTTP data transfer method (GET or POST) that the client uses.</param>
            <param name="url">The <see cref="P:System.Web.HttpRequest.RawUrl"></see> of the requested resource.</param>
            <param name="pathTranslated">The <see cref="P:System.Web.HttpRequest.PhysicalApplicationPath"></see> to the requested resource.</param>
            <returns>
            A new <see cref="T:System.Web.IHttpHandler"></see> object that processes the request.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Handlers.StaticCatalogUriHandler.ReleaseHandler(System.Web.IHttpHandler)">
            <summary>
            Enables a factory to reuse an existing handler instance.
            </summary>
            <param name="handler">The <see cref="T:System.Web.IHttpHandler"></see> object to reuse.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Handlers.StaticCatalogUriHandler.BuildUri(System.String,System.Boolean)">
            <summary>
            Builds a Uri that refers to target.  If target is application-relative a relative
            Uri is created.
            </summary>
            <param name="target">Target for uri.</param>
            <param name="secure">Indicates whether Uri should be https or http.</param>
            <returns>Uri for <paramref name="target"/></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Handlers.StaticCatalogUriHandler.RewriteUrl(System.Web.HttpContext,System.String,System.String@,System.String@)">
            <summary>
            Rewrites the URL.
            </summary>
            <param name="context">The context.</param>
            <param name="sendToUrl">The send to URL.</param>
            <param name="sendToUrlLessQString">The send to URL less Q string.</param>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.ChangePasswordAdapter.OnInit(System.EventArgs)">
            ///////////////////////////////////////////////////////////////////////////////
            PROTECTED        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.ChangePasswordAdapter.RegisterScripts">
            ///////////////////////////////////////////////////////////////////////////////
            PRIVATE        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.CreateUserWizardAdapter.OnInit(System.EventArgs)">
            ///////////////////////////////////////////////////////////////////////////////
            PROTECTED        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.CreateUserWizardAdapter.RegisterScripts">
            ///////////////////////////////////////////////////////////////////////////////
            PRIVATE        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.LoginAdapter.OnInit(System.EventArgs)">
            ///////////////////////////////////////////////////////////////////////////////
            PROTECTED        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.LoginAdapter.RenderContents(System.Web.UI.HtmlTextWriter)">
            <remarks>
            Applied CodePlex patch #301 provided by Piquet to support the VisibleWhenLoggedIn property.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.LoginAdapter.RegisterScripts">
            ///////////////////////////////////////////////////////////////////////////////
            PRIVATE        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.LoginStatusAdapter.RegisterScripts">
            ///////////////////////////////////////////////////////////////////////////////
            PRIVATE        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.PasswordRecoveryAdapter.OnInit(System.EventArgs)">
            ///////////////////////////////////////////////////////////////////////////////
            PROTECTED        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.PasswordRecoveryAdapter.RegisterScripts">
            ///////////////////////////////////////////////////////////////////////////////
            PRIVATE        
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.WebControlAdapterExtender.WriteSubmit(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.ButtonType,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="buttonType"></param>
            <param name="className"></param>
            <param name="id"></param>
            <param name="uniqueId"></param>
            <param name="imageUrl"></param>
            <param name="javascript"></param>
            <param name="text"></param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.WebControlAdapterExtender.WriteSubmit(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.ButtonType,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="buttonType"></param>
            <param name="className"></param>
            <param name="id"></param>
            <param name="uniqueId"></param>
            <param name="imageUrl"></param>
            <param name="javascript"></param>
            <param name="text"></param>
            <param name="generateClientId">If true, id will be generated using container id and <paramref name="id"/> parameret. Otherwise, <paramref name="id"/> parameter is already clientid and will be used for id of submit control.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.AntiRobotImage.GenerateImage">
            <summary>
            Generates the image.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.AntiRobotImage.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:AntiRobotImage"/> class.
            </summary>
            <param name="Text">The text.</param>
            <param name="Width">The width.</param>
            <param name="Height">The height.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.AntiRobotImage.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.AntiRobotImage.Width">
            <summary>
            Gets or sets the image width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.AntiRobotImage.Height">
            <summary>
            Gets or sets the image height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.AntiRobotImage.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.AntiRobotImage.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>The font family.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.BaseControls.BaseStoreUserControl">
            <summary>
            Base class for all user controls in the CMS System. Adds additional properties which are common
            for website project but not available for web application projects.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseStoreUserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UserControlBase"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseStoreUserControl.ResolveUrl(System.String)">
            <summary>
            Converts a URL into one that is usable on the requesting client.
            </summary>
            <param name="relativeUrl">The URL associated with the <see cref="P:System.Web.UI.Control.TemplateSourceDirectory"/> property.</param>
            <returns>The converted URL.</returns>
            <exception cref="T:System.ArgumentNullException">
            Occurs if the <paramref name="relativeUrl"/> parameter contains null.
            </exception>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseStoreUserControl.RM">
            <summary>
            Gets the RM.
            </summary>
            <value>The RM.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseStoreUserControl.Profile">
            <summary>
            Gets the profile.
            </summary>
            <value>The profile.</value>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.LoadNewEntry">
            <summary>
            Loads the new entry.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.LoadContext(System.Collections.IDictionary)">
            <summary>
            Loads the context. Implements interface IContextUserControl.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.RenderHeaders">
            <summary>
            Sets the headers.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.CatalogName">
            <summary>
            Gets the name of the catalog.
            </summary>
            <value>The name of the catalog.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.Code">
            <summary>
            Gets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.Entry">
            <summary>
            Gets the entry.
            </summary>
            <value>The entry.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.Currency">
            <summary>
            Gets or sets the currency.
            </summary>
            <value>The currency.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.ShoppingCartUrl">
            <summary>
            Gets or sets the shopping cart URL.
            </summary>
            <value>The shopping cart URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.SiteId">
            <summary>
            Gets or sets the site id.
            </summary>
            <value>The site id.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseEntryTemplate.WishListUrl">
            <summary>
            Gets or sets the wish list URL.
            </summary>
            <value>The wish list URL.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate">
            <summary>
            Base template used to display catalog nodes.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate.LoadNewNode">
            <summary>
            Loads the new node.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate.LoadContext(System.Collections.IDictionary)">
            <summary>
            Loads the context. Implements interface IContextUserControl.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate.RenderHeaders">
            <summary>
            Sets the headers.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate.CatalogName">
            <summary>
            Gets the name of the catalog.
            </summary>
            <value>The name of the catalog.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate.Code">
            <summary>
            Gets the code.
            </summary>
            <value>The code.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.BaseControls.BaseNodeTemplate.Node">
            <summary>
            Gets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="M:Mediachase.Commerce.Website.Handlers.CatalogImageHandler._CachedVersionIsOkay(System.Web.HttpRequest)">
            <summary>
            _s the cached version is okay.
            </summary>
            <param name="Request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Handlers.CatalogImageHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"/> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Handlers.CatalogImageHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"/> instance.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Web.IHttpHandler"/> instance is reusable; otherwise, false.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Website.BaseControls.StoreResourceManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.BaseControls.StoreResourceManager.GetString(System.String)">
            <summary>
            Gets the string.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.PromotionHelper.#ctor(Mediachase.Commerce.Marketing.PromotionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Helpers.PromotionHelper"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.PromotionHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Helpers.PromotionHelper"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.PromotionHelper.Eval(Mediachase.Commerce.Marketing.PromotionFilter)">
            <summary>
            Evals the specified filter.
            </summary>
            <param name="filter">The filter.</param>       
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.PromotionHelper.Eval(Mediachase.Commerce.Marketing.PromotionFilter,System.Boolean)">
            <summary>
            Evals the specified filter with checkEntryLevelLimit
            </summary>
            <param name="filter"> The filter</param>
            <param name="checkEntryLevelLimit"> The check Entry Level Limit</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.PromotionHelper.InitPromotionContext">
            <summary>
            Inits the promotion context.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.PromotionHelper.SetContext(System.String,System.Object)">
            <summary>
            Sets the context.
            </summary>
            <param name="key">The key.</param>
            <param name="val">The val.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Helpers.PromotionHelper.PromotionContext">
            <summary>
            Gets or sets the promotion context.
            </summary>
            <value>The promotion context.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.IPaymentOption">
            <summary>
            Summary description for IPaymentOption
            </summary>
            <summary>
            IPaymentOption Interface that all payment gateways must implement.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.IPaymentOption.ValidateData">
            <summary>
            Validates input data for the control. In case of Credit card pre authentication will be the best way to
            validate. The error message if any should be displayed within a control itself.
            </summary>
            <returns>Returns false if validation is failed.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.IPaymentOption.PreProcess(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            This method is called before the order is completed. This method should check all the parameters
            and validate the credit card or other parameters accepted.
            </summary>
            <param name="form">The form.</param>
            <returns>
            The payment information.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.IPaymentOption.PostProcess(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            This method is called after the order is placed. This method should be used by the gateways that want to
            redirect customer to their site.
            </summary>
            <param name="orderForm">The order form.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Website.Helpers.CartHelper">
            <summary>
            Cart helper class used to simplify cart operations.
            The cart is automatically cached in the current Http Context.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Helpers.CartHelper.WishListName">
            <summary>
            Default name for the cart.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Helpers.CartHelper"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.#ctor(System.String,System.Guid,Mediachase.Commerce.IMarket)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Helpers.CartHelper"/> class.
            </summary>
            <param name="name">The name of cart</param>
            <param name="userId">The User Id.</param>
            <param name="market">The market.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Helpers.CartHelper"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="userId">The user id.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.#ctor(Mediachase.Commerce.Orders.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Helpers.CartHelper"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.FindAddressById(System.String)">
            <summary>
            Finds the address by id.
            </summary>
            <param name="addressId">The address id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.FindAddressByName(System.String)">
            <summary>
            Finds the name of the address by.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.GetTotalItemCount">
            <summary>
            Gets the total number of items in the basket.
            </summary>
            <returns>the total number of items in the basket.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.GetOrderForm">
            <summary>
            Gets the default OrderForm.
            </summary>
            <returns>the default OrderForm</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.GetOrderForm(System.String)">
            <summary>
            Gets the named OrderForm.
            </summary>
            <param name="orderFormName">The name of the OrderForm object to retrieve.</param>
            <returns>The named OrderForm.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.Delete">
            <summary>
            Deletes the current basket instance from the database.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.AddEntry(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Adds the entry. Line item's qty will be increased by 1.
            </summary>
            <param name="entry">The entry.</param>
            <returns>The line item.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.AddEntry(Mediachase.Commerce.Catalog.Objects.Entry,Mediachase.Commerce.Website.Helpers.CartHelper[])">
            <summary>
            Adds the entry. Line item's qty will be increased by 1.
            </summary>
            <param name="entry">The entry.</param>
            <param name="helpersToRemove"></param>
            <returns>The line item.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.AddEntry(Mediachase.Commerce.Catalog.Objects.Entry,System.Boolean)">
            <summary>
            Adds the entry.
            </summary>
            <param name="entry">The entry.</param>
            <param name="fixedQuantity">If true, lineitem's qty will be set to <paramref name="fixedQuantity"/> value. Otherwise, <paramref name="fixedQuantity"/> will be added to the current line item's qty value.</param>
            <returns>The line item.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.AddEntry(Mediachase.Commerce.Catalog.Objects.Entry,System.Boolean,Mediachase.Commerce.Website.Helpers.CartHelper[])">
            <summary>
            Adds the entry.
            </summary>
            <param name="entry">The entry.</param>
            <param name="fixedQuantity">If true, lineitem's qty will be set to <paramref name="fixedQuantity"/> value. Otherwise, <paramref name="fixedQuantity"/> will be added to the current line item's qty value.</param>
            <param name="helpersToRemove"></param>
            <returns>The line item.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.AddEntry(Mediachase.Commerce.Catalog.Objects.Entry,System.Decimal,System.Boolean,Mediachase.Commerce.Website.Helpers.CartHelper[])">
            <summary>
            Adds the entry with default warehouse code
            </summary>
            <param name="entry">The entry.</param>
            <param name="quantity">The quantity.</param>
            <param name="fixedQuantity">If true, lineitem's qty will be set to <paramref name="quantity"/> value. Otherwise, <paramref name="quantity"/> will be added to the current line item's qty value.</param>
            <param name="helpersToRemove">CartHelper(s) from which the item needs to be removed simultaneously with adding it to the current CartHelper.</param>
            <returns>The line item.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.AddEntry(Mediachase.Commerce.Catalog.Objects.Entry,System.Decimal,System.Boolean,System.String,Mediachase.Commerce.Website.Helpers.CartHelper[])">
            <summary>
            Adds the entry.
            </summary>
            <param name="entry">The entry.</param>
            <param name="quantity">The quantity.</param>
            <param name="fixedQuantity">If true, lineitem's qty will be set to <paramref name="quantity"/> value. Otherwise, <paramref name="quantity"/> will be added to the current line item's qty value.</param>
            <param name="warehouseCode">The warehouse code</param>
            <param name="helpersToRemove">CartHelper(s) from which the item needs to be removed simultaneously with adding it to the current CartHelper.</param>
            <returns>The line item.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.CreateLineItem(Mediachase.Commerce.Catalog.Objects.Entry,System.Decimal,System.String)">
            <summary>
            Create the lineitem
            </summary>
            <param name="entry">The entry</param>
            <param name="quantity">The quantity</param>
            <param name="warehouseCode">The warehouse code</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.RunWorkflow(System.String)">
            <summary>
            Runs the workflow and generates the error message for all the warnings.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.RunWorkflow(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Runs the workflow and generates the error message for all the warnings.
            </summary>
            <param name="name">The workflow name.</param>
            <param name="param">The workflow parameters.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.GetCartPromotions">
            <summary>
            Gets all of the cart promotions regardless of promotion type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.GetCartPromotions(System.Nullable{Mediachase.Commerce.Marketing.PromotionGroup.PromotionGroupKey})">
            <summary>
            Gets the cart promotions based on promotion type or All.
            </summary>
            <param name="promoKey">The promotion group key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.Reset">
            <summary>
            Resets this instance. Will clean up line items, remove payments and delete addresses.
            The cart needs to be saved in order for changes to be persisted.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.MergeShipments">
            <summary>
            Merge all shipments of order forms into one for each form.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.MergeShipments(Mediachase.Commerce.Orders.OrderForm)">
            <summary>
            Merge all shipments of an order form into one.
            </summary>
            <param name="form">The order form</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.GetCacheKey(System.String,System.Guid,Mediachase.Commerce.MarketId)">
            <summary>
            Gets the cache key which is used to store current cart in the http context, by a specific market.
            </summary>
            <param name="name">The name.</param>
            <param name="userId">The user id.</param>
            <param name="marketId">The market id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.LoadCart(System.String,System.Guid)">
            <summary>
            Loads the cart. The cart is loaded from current http context if one is present.
            </summary>
            <param name="name">The name.</param>
            <param name="userId">The user id.</param>
            <remarks>Uses the market returned from ICurrentMarket for a market id.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.CartHelper.LoadCart(System.String,System.Guid,Mediachase.Commerce.MarketId)">
            <summary>
            Loads the cart. The cart is loaded from current http context if one is present.
            </summary>
            <param name="name">The name.</param>
            <param name="userId">The user id.</param>
            <param name="marketId">The market id.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Helpers.CartHelper.Cart">
            <summary>
            Gets the cart.
            </summary>
            <value>The cart.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Helpers.CartHelper.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Helpers.CartHelper.LineItems">
            <summary>
            Gets the line items.
            </summary>
            <value>The line items.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Helpers.CartHelper.PrimaryAddress">
            <summary>
            Gets the primary address.
            </summary>
            <value>The primary address.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Helpers.CartHelper.OrderForm">
            <summary>
            Gets the order form.
            </summary>
            <value>The order form.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Helpers.CartHelper.IsAddressRequired">
            <summary>
            Gets a value indicating whether this instance is address required.
            </summary>
            <value>
            	<c>true</c> if this instance is address required; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.Commerce.Website.Helpers.StoreHelper">
            <summary>
            Store helper.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.LoadPaymentPlugin(System.Web.UI.UserControl,System.String)">
            <summary>
            Loads the payment plugin.
            </summary>
            <param name="control">The control.</param>
            <param name="keyword">The keyword.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetAddressString(Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Returns address formatted as a string
            </summary>
            <param name="info">The info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetQuantityAsString(System.Decimal)">
            <summary>
            Gets the quantity as string.
            </summary>
            <param name="quantity">The quantity.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.IsAddressInCollection(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Customers.CustomerAddress},Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Checks if customer address collection already contains the specified address.
            </summary>
            <param name="collection">Customer addresses collection (Profile.Account.Addresses).</param>
            <param name="address">Address to check.</param>
            <returns>True, if address is already in the collection.</returns>
            <remarks>Only address' properties are checked (like first, last name, city, state,...). Address name and addressId are ignored.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.CheckAddressesEquality(Mediachase.Commerce.Customers.CustomerAddress,Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Checks if 2 customer addresses are the same (have same first, last names, city, state,...).
            Address ids and names are ignored.
            </summary>
            <param name="address1"></param>
            <param name="address2"></param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.ConvertToCustomerAddress(Mediachase.Commerce.Orders.OrderAddress)">
            <summary>
            Converts to customer address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.ConvertToOrderAddress(Mediachase.Commerce.Customers.CustomerAddress)">
            <summary>
            Converts to order address.
            </summary>
            <param name="address">The address.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetNodeUrl(Mediachase.Commerce.Catalog.Objects.CatalogNode)">
            <summary>
            Gets the node URL.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetEntryUrl(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Gets the entry URL.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetLanguageSeo(Mediachase.Commerce.Catalog.Objects.Seo[])">
            <summary>
            Gets the language seo.
            </summary>
            <param name="seoInfo">The seo info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetSalePrice(Mediachase.Commerce.Catalog.Objects.Entry,System.Decimal,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the sale price.
            </summary>
            <param name="entry">The entry used to fetch prices.</param>
            <param name="quantity">The quantity.</param>
            <param name="market">The market.</param>
            <param name="currency">The currency.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetSalePrice(Mediachase.Commerce.Catalog.Objects.Entry,System.Decimal,Mediachase.Commerce.IMarket)">
            <summary>
            Gets the sale price. The current culture info currency code will be used.
            </summary>
            <param name="entry">The entry.</param>
            <param name="quantity">The quantity.</param>
            <param name="market">Market for filtering.</param>
            <returns>Price</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetSalePrice(Mediachase.Commerce.Catalog.Objects.Entry,System.Decimal)">
            <summary>
            Gets the sale price. The current culture info currency code will be used.
            </summary>
            <param name="entry">The entry.</param>
            <param name="quantity">The quantity.</param>
            <returns>Price</returns>
            
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountPrice(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Gets the discount price.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountPrice(Mediachase.Commerce.Catalog.Objects.Entry,System.String)">
            <summary>
            Gets the discount price.
            </summary>
            <param name="entry">The entry.</param>
            <param name="catalogName">Name of the catalog.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountPrice(Mediachase.Commerce.Catalog.Objects.Entry,System.String,System.String,Mediachase.Commerce.IMarket)">
            <summary>
            Gets the discounted price of the catalog entry.
            </summary>
            <param name="entry">The catalog entry.</param>
            <param name="catalogName">Name of the catalog to filter the discounts for. If null, all catalogs containing the entry will be used.</param>
            <param name="catalogNodeCode">The catalog node code to filter the discounts for. If null, all catalog nodes containing the entry will be used.</param>
            <param name="market">The market to fetch tiered base pricing for.</param>
            <returns>The discounted price of the catalog entry.</returns>
            <remarks>Uses market.DefaultCurrency for the currency.</remarks>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountPrice(Mediachase.Commerce.Catalog.Objects.Entry,System.String,System.String,Mediachase.Commerce.IMarket,Mediachase.Commerce.Currency)">
            <summary>
            Gets the discounted price of the catalog entry.
            </summary>
            <param name="entry">The catalog entry.</param>
            <param name="catalogName">Name of the catalog to filter the discounts for. If null, all catalogs containing the entry will be used.</param>
            <param name="catalogNodeCode">The catalog node code to filter the discounts for. If null, all catalog nodes containing the entry will be used.</param>
            <param name="market">The market to fetch tiered base pricing for.</param>
            <param name="currency">The currency to fetch prices in.</param>
            <returns>The discounted price of the catalog entry.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountPrice(Mediachase.Commerce.Catalog.Objects.Entry,System.String,System.String)">
            <summary>
            Gets the discount price by evaluating the discount rules and taking into account segments customer belongs to.
            </summary>
            <param name="entry">The entry.</param>
            <param name="catalogName">Name of the catalog to filter the discounts for. If null, all catalogs entry belongs to will be applied.</param>
            <param name="catalogNodeCode">The catalog node code to filter the discounts for. If null, all catalog nodes entry belongs to will be applied.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountPrice(Mediachase.Commerce.Marketing.PromotionFilter,Mediachase.Commerce.Catalog.Objects.Price,Mediachase.Commerce.Marketing.PromotionEntriesSet,Mediachase.Commerce.Marketing.PromotionEntriesSet)">
            <summary>
            Gets the discount price.
            </summary>
            <param name="filter">The filter.</param>
            <param name="salePrice">The sale price.</param>
            <param name="sourceSet">The source set.</param>
            <param name="targetSet">The target set.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountPrice(Mediachase.Commerce.Marketing.Objects.PromotionResult)">
            <summary>
            Gets the discount price.
            </summary>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetDiscountAmount(Mediachase.Commerce.Marketing.Objects.PromotionItemRecord,Mediachase.Commerce.Marketing.Objects.PromotionReward)">
            <summary>
            Gets the discount amount for one entry only.
            </summary>
            <param name="record">The record.</param>
            <param name="reward">The reward.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.IsInStock(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Determines whether entry is in stock.
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            	<c>true</c> if entry is in stock otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetItemsInStock(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Gets the items in stock.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetInventoryStatus(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Gets the inventory status.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.IsAvailableForBackorder(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Determines whether [is available for backorder] [the specified entry].
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            	<c>true</c> if [is available for backorder] [the specified entry]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.IsAvailableForPreorder(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Determines whether [is available for preorder] [the specified entry].
            </summary>
            <param name="entry">The entry.</param>
            <returns>
            	<c>true</c> if [is available for preorder] [the specified entry]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.SumInventories(System.Collections.Generic.IEnumerable{Mediachase.Commerce.Inventory.IWarehouseInventory})">
            <summary>
            Gets all item in stock.
            </summary>
            <param name="inventories"> The WarehouseInventory.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetEntryDisplayName(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Gets the display name of the entry. Returns localized version or the product name if no localized version available.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetNodeDisplayName(Mediachase.Commerce.Catalog.Objects.CatalogNode)">
            <summary>
            Gets the display name of the node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.AddBrowseHistory(System.String,System.String)">
            <summary>
            Adds the browse history.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetBrowseHistory">
            <summary>
            Gets the browse history.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetBasePrice(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Gets the discount price by current market.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.GetBasePrice(Mediachase.Commerce.Catalog.Objects.Entry,System.Int32)">
            <summary>
            Gets the current price by current market with min quantity.
            </summary>
            <param name="entry">The entry.</param>
            <param name="minQuantity">The min quantity.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Helpers.StoreHelper.IsActivePrice(Mediachase.Commerce.Pricing.PriceValue)">
            <summary>
            Determines whether price is active is not.
            </summary>
            <param name="price">The price.</param>
            <returns>
            	<c>true</c> if price is active otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.Commerce.Website.CommonHelper">
            <summary>
            Summary description for CommonHelper.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.SafeSelect(System.Web.UI.WebControls.ListControl,System.String)">
            <summary>
            Safes the select.
            </summary>
            <param name="ddl">The DDL.</param>
            <param name="val">The val.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetUserName(System.Guid)">
            <summary>
            Gets the name of the user.
            </summary>
            <param name="userGuid">The user GUID.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.SelectListItem(System.Web.UI.WebControls.DropDownList,System.Object)">
            <summary>
            Selects item in the drop down list
            </summary>
            <param name="list">The list.</param>
            <param name="val">The val.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.SelectRadioListItem(System.Web.UI.WebControls.RadioButtonList,System.Object)">
            <summary>
            Selects item in the radio list
            </summary>
            <param name="list">The list.</param>
            <param name="val">The val.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.SelectListItem(System.Web.UI.WebControls.ListBox,System.Object,System.Boolean)">
            <summary>
            Selects item in the listbox
            </summary>
            <param name="list">The list.</param>
            <param name="val">The val.</param>
            <param name="clearSelection">if set to <c>true</c> [clear selection].</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.AddLinkedStyleSheet(System.Web.UI.Page,System.String)">
            <summary>
            Adds the linked style sheet.
            </summary>
            <param name="page">The page.</param>
            <param name="styleSheetUrl">The style sheet URL.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.AddLinkedStyleSheet(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            Adds the linked style sheet.
            </summary>
            <param name="page">The page.</param>
            <param name="styleSheetUrl">The style sheet URL.</param>
            <param name="resolveClientUrl">if set to <c>true</c> [resolve client URL].</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetIcon(System.String)">
            <summary>
            Gets the icon.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetFlagIcon(System.Globalization.CultureInfo)">
            <summary>
            Gets the flag icon.
            </summary>
            <param name="culture">The culture.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetImageUrl(System.String,System.Web.UI.Page)">
            <summary>
            Returns absolute url by given relative url
            </summary>
            <param name="relativeUrl">Url, relative to theme folder.</param>
            <param name="page">The web page.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.FormatQueryString(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Formats the query string.
            </summary>
            <param name="url">The URL.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.SetCompareCookie(System.String,System.String)">
            <summary>
            Remembers productId in the cookie
            </summary>
            <param name="productId"></param>
            <param name="mcId"></param>
            <returns>Return value >=0 - success, returns amount of products to compare for the specified metaclass; 
            -100 - product is already added;
            -101 - max number of products reached (=_MaxProductsToCompare)
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.RemoveProductFromCookie(System.String,System.String)">
            <summary>
            Removes product from the cookie.
            </summary>
            <param name="productId"></param>
            <param name="mcId">Id of the product's metaclass.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.ClearCompareCookie">
            <summary>
            Removes all products from the cookie.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.ClearCompareCookie(System.String)">
            <summary>
            Removes all products from the cookie for a specified metaclass.
            </summary>
            <param name="mcId">Id of the metaclass.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareProductsDto(System.String)">
            <summary>
            Returns products to compare.
            </summary>
            <param name="mcId">Id of a metaClass.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareProducts">
            <summary>
            Returns products to compare.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareProducts(System.String)">
            <summary>
            Returns products to compare.
            </summary>
            <param name="mcId">Id of a metaClass.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareGroupedProducts">
            <summary>
            Returns products to compare.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.BuildWhereStatementForSearch(System.Collections.Generic.List{System.Int32})">
            <summary>
            Builds the where statement for search.
            </summary>
            <param name="productIds">The product ids.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareProductsIds(System.String)">
            <summary>
            Returns products to compare.
            </summary>
            <param name="mcId">Id of a metaClass.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareProductsAmount(System.String)">
            <summary>
            Returns amount of products to compare.
            </summary>
            <param name="mcId">Id of a metaClass.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareMetaClasses">
            <summary>
            Returns metaclasses of products added to compare.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCompareCollection">
            <summary>
            Returns a collection of key/value pairs that are contained within a compare cookie
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.MakeCurrentApplicationCookieName(System.String)">
            <summary>
            Creates app-specific cookie name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.CreateAuthenticationCookie(System.String,System.Boolean)">
            <summary>
            Creates the authentication cookie.
            </summary>
            <param name="username">The username.</param>
            <param name="remember">if set to <c>true</c> [remember].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.SetCookie(System.String,System.String,System.DateTime)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="key">The key.</param>
            <param name="val">The val.</param>
            <param name="expires">The expiration time.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.SetCookie(System.String,System.Collections.Specialized.NameValueCollection,System.DateTime)">
            <summary>
            Sets the cookie.
            </summary>
            <param name="key">The key.</param>
            <param name="values">The values.</param>
            <param name="expires">The expires.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCookie(System.String)">
            <summary>
            Gets the cookie.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetCookieValue(System.String)">
            <summary>
            Gets the cookie.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.ClearCookie(System.String,System.String)">
            <summary>
            Clears the cookie.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetUserDateTime(System.DateTime)">
            <summary>
            Returns converted datetime value based on current user's settings.
            </summary>
            <param name="dt">DateTime in UTC.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CommonHelper.GetValueFromQueryString(System.String,System.String)">
            <summary>
            Gets the value from query string.
            </summary>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.HasConfigChanged(System.String)">
            <summary>
            Determines whether [has config changed].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [has config changed]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Search.SearchFilterHelper"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetSuggestions">
            <summary>
            Gets the suggestion keywords related to the current search.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetSuggestions(System.String)">
            <summary>
            Gets the suggestion keywords related to the search keyword passed.
            </summary>
            <param name="keyword">The keyword.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetFacets(System.Boolean,System.TimeSpan)">
            <summary>
            Gets the facets.
            </summary>
            <param name="cacheResults">if set to <c>true</c> [cache results].</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchEntries">
            <summary>
            Searches the entries.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchEntries(System.String,Mediachase.Search.SearchSort,System.Int32,System.Int32,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,System.Boolean,System.TimeSpan)">
            <summary>
            Searches the entries.
            </summary>
            <param name="keywords">The keywords.</param>
            <param name="sort">The sort.</param>
            <param name="startIndex">The start index.</param>
            <param name="recordsToRetrieve">The records to retrieve.</param>
            <param name="count">The count.</param>
            <param name="responseGroup">The response group.</param>
            <param name="cacheResults">If set to <c>true</c> then fetch through cache, otherwise fetch
            fresh from db.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchEntries(Mediachase.Search.Extensions.CatalogEntrySearchCriteria,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,System.Boolean,System.TimeSpan,Mediachase.Commerce.IMarket)">
            <summary>
            Searches the entries.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="count">The count.</param>
            <param name="responseGroup">The response group.</param>
            <param name="cacheResults">If set to <c>true</c> then fetch through cache, otherwise fetch
            fresh from db.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <param name="market">Market for filtering.</param>
            <returns>The search result.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchEntries(Mediachase.Search.Extensions.CatalogEntrySearchCriteria,System.Int32@,Mediachase.Commerce.Catalog.Managers.CatalogEntryResponseGroup,System.Boolean,System.TimeSpan)">
            <summary>
            Searches the entries.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="count">The count.</param>
            <param name="responseGroup">The response group.</param>
            <param name="cacheResults">If set to <c>true</c> then fetch through cache, otherwise fetch
            fresh from db.</param>
            <param name="cacheTimeout">The cache timeout.</param>
            <returns>The search result.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchEntries(System.String,Mediachase.Search.SearchSort)">
            <summary>
            Searches the entries.
            </summary>
            <param name="keywords">The keywords.</param>
            <param name="sort">The sort.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchEntries(Mediachase.Search.Extensions.CatalogEntrySearchCriteria)">
            <summary>
            Searches the entries.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.CreateSearchCriteria(System.String,Mediachase.Search.SearchSort)">
            <summary>
            Creates the search criteria.
            </summary>
            <param name="keywords">The keywords.</param>
            <param name="sort">The sort.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetOutlinesForNode(System.String)">
            <summary>
            Gets the outlines for node.
            </summary>
            <param name="nodeCode">The node code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetOutlinesForNode(Mediachase.Commerce.Catalog.Objects.CatalogNode)">
            <summary>
            Gets the outlines for node.
            </summary>
            <param name="node">The node.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetCleanUrl">
            <summary>
            Gets the clean URL without filters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetQueryStringNavigateUrl(System.String,System.String)">
            <summary>
            Gets the query string navigate URL.
            </summary>
            <param name="field">The field.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetQueryStringNavigateUrl(System.String,System.Boolean)">
            <summary>
            Gets the query string navigate URL.
            </summary>
            <param name="field">The field.</param>
            <param name="remove">if set to <c>true</c> [remove].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetQueryStringNavigateUrl(System.String,System.String,System.Boolean)">
            <summary>
            Gets the query string navigate URL.
            </summary>
            <param name="field">The field.</param>
            <param name="key">The key.</param>
            <param name="remove">if set to <c>true</c> [remove].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SearchFilterHelper.GetQueryStringNavigateUrl(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the query string navigate URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="field">The field.</param>
            <param name="key">The key.</param>
            <param name="remove">if set to <c>true</c> [remove].</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.CurrentUrl">
            <summary>
            Gets the current URL.
            </summary>
            <value>The current URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.Results">
            <summary>
            Gets the results.
            </summary>
            <value>The results.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchConfigPath">
            <summary>
            Gets or sets the search config path.
            </summary>
            <value>The search config path.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.SearchConfig">
            <summary>
            Gets the search config.
            </summary>
            <value>The search config.</value>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.QueryString">
            <summary>
            The query string used for fetching search requests.
            </summary>
            <remarks>
            This will typically be the default value of HttpContext.Current.Request.QueryString.  However,
            if calling code needs to modify the collection, this can be used to inject a modifiable clone.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchFilterHelper.SelectedFilters">
            <summary>
            Gets the selected filters.
            </summary>
            <value>The selected filters.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.Search.SearchConfig">
            <remarks/>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchConfig.SearchFilters">
            <remarks/>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SearchConfig.version">
            <remarks/>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SelectedFilter.#ctor(Mediachase.Search.SearchFilter,Mediachase.Search.SimpleValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Search.SelectedFilter"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SelectedFilter.#ctor(Mediachase.Search.SearchFilter,Mediachase.Search.RangeValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Search.SelectedFilter"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Search.SelectedFilter.#ctor(Mediachase.Search.SearchFilter,Mediachase.Search.PriceRangeValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Search.SelectedFilter"/> class.
            </summary>
            <param name="filter">The filter.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SelectedFilter.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SelectedFilter.RemoveUrl">
            <summary>
            Gets or sets the remove URL.
            </summary>
            <value>The remove URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SelectedFilter.ValueName">
            <summary>
            Gets or sets the name of the value.
            </summary>
            <value>The name of the value.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SelectedFilter.Filter">
            <summary>
            Gets or sets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SelectedFilter.SimpleValue">
            <summary>
            Gets or sets the simple value.
            </summary>
            <value>The simple value.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SelectedFilter.RangeValue">
            <summary>
            Gets or sets the range value.
            </summary>
            <value>The range value.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Search.SelectedFilter.PriceRangeValue">
            <summary>
            Gets or sets the price range value.
            </summary>
            <value>The price range value.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.ButtonDropDownList">
            <summary>
            Summary description for ButtonDropDownList
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonDropDownList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Controls.ButtonDropDownList"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonDropDownList.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonDropDownList.OnCommand(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the <see cref="E:Command"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonDropDownList.RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ButtonDropDownList.CommandArgument">
            <summary>
            Gets or sets the command argument.
            </summary>
            <value>The command argument.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ButtonDropDownList.CommandName">
            <summary>
            Gets or sets the name of the command.
            </summary>
            <value>The name of the command.</value>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonTextBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Controls.ButtonTextBox"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonTextBox.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonTextBox.OnCommand(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the <see cref="E:Command"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ButtonTextBox.RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"/> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ButtonTextBox.CommandArgument">
            <summary>
            Gets or sets the command argument.
            </summary>
            <value>The command argument.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ButtonTextBox.CommandName">
            <summary>
            Gets or sets the name of the command.
            </summary>
            <value>The name of the command.</value>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsHyperLink.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Displays the <see cref="T:System.Web.UI.WebControls.HyperLink"/> control on a page.
            </summary>
            <param name="writer">The output stream to render on the client.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsHyperLink.ResolveImageUrl">
            <summary>
            Gets or sets a value indicating whether [resolve image URL].
            </summary>
            <value><c>true</c> if [resolve image URL]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Controls.CmsPagerField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, creates the user interface (UI) controls for the data pager field object and adds them to the specified container.
            </summary>
            <param name="container">The container that is used to store the controls.</param>
            <param name="startRowIndex">The index of the first record on the page.</param>
            <param name="maximumRows">The maximum number of items on a single page.</param>
            <param name="totalRowCount">The total number of items.</param>
            <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields"/> collection.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateField">
            <summary>
            When overridden in a derived class, creates an empty object that is derived <see cref="T:System.Web.UI.WebControls.DataPagerField"/>.
            </summary>
            <returns>
            An empty object that is derived from <see cref="T:System.Web.UI.WebControls.DataPagerField"/>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            When overridden in a derived class, handles events that occur in the data pager field object.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateDataPagersForCommand(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32)">
            <summary>
            Creates the data pagers for command.
            </summary>
            <param name="container">The container.</param>
            <param name="fieldIndex">Index of the field.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateControl(System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Creates the control.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="buttonText">The button text.</param>
            <param name="fieldIndex">Index of the field.</param>
            <param name="imageUrl">The image URL.</param>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.AddNonBreakingSpace(System.Web.UI.WebControls.DataPagerFieldItem)">
            <summary>
            Adds the non breaking space.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateLabelRecordControl(System.Web.UI.WebControls.DataPagerFieldItem)">
            <summary>
            Creates the label record control.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreatePageSizeControl(System.Web.UI.WebControls.DataPagerFieldItem)">
            <summary>
            Creates the page size control.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateGoToTexBox(System.Web.UI.WebControls.DataPagerFieldItem)">
            <summary>
            Creates the go to tex box.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateDataPagersForQueryString(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32)">
            <summary>
            Creates the data pagers for query string.
            </summary>
            <param name="container">The container.</param>
            <param name="fieldIndex">Index of the field.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.CreateLink(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Creates the link.
            </summary>
            <param name="buttonText">The button text.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="imageUrl">The image URL.</param>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsPagerField.GetQueryStringNavigateUrl2(System.Int32)">
            <summary>
            Gets the query string navigate url2.
            </summary>
            <param name="pageNumber">The page number.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.CurrentUrl">
            <summary>
            Gets the current URL.
            </summary>
            <value>The current URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.NextPageText">
            <summary>
            Gets or sets the next page text.
            </summary>
            <value>The next page text.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.PreviousPageText">
            <summary>
            Gets or sets the previous page text.
            </summary>
            <value>The previous page text.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.NextPageImageUrl">
            <summary>
            Gets or sets the next page image URL.
            </summary>
            <value>The next page image URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.PreviousPageImageUrl">
            <summary>
            Gets or sets the previous page image URL.
            </summary>
            <value>The previous page image URL.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.RenderNonBreakingSpacesBetweenControls">
            <summary>
            Gets or sets a value indicating whether [render non breaking spaces between controls].
            </summary>
            <value>
            	<c>true</c> if [render non breaking spaces between controls]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.ButtonCssClass">
            <summary>
            Gets or sets the button CSS class.
            </summary>
            <value>The button CSS class.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.EnablePreviousPage">
            <summary>
            Gets a value indicating whether [enable previous page].
            </summary>
            <value><c>true</c> if [enable previous page]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsPagerField.EnableNextPage">
            <summary>
            Gets a value indicating whether [enable next page].
            </summary>
            <value><c>true</c> if [enable next page]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory">
            <summary>
            The SecureWebPageDirectory class represents a directory entry in the &lt;secureWebPages&gt;
            configuration section.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem">
            <summary>
            The SecureWebPageItem class is the base class that represents entries in the &lt;secureWebPages&gt;
            configuration section.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem.#ctor">
            <summary>
            Creates an instance of this class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem.#ctor(System.String,Mediachase.Commerce.Website.Ssl.Collections.SecurityType)">
            <summary>
            Creates an instance with initial values.
            </summary>
            <param name="path">The relative path to the directory or file.</param>
            <param name="secure">The secure.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem.#ctor(System.String)">
            <summary>
            Creates an instance with an initial path value.
            </summary>
            <param name="path">The relative path to the directory or file.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem.Secure">
            <summary>
            Gets or sets the type of security for this directory or file.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem.Path">
            <summary>
            Gets or sets the path of this directory or file.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory.#ctor">
            <summary>
            Creates an instance with default values.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory.#ctor(System.String,Mediachase.Commerce.Website.Ssl.Collections.SecurityType,System.Boolean)">
            <summary>
            Creates an instance with initial values.
            </summary>
            <param name="path">The relative path to the directory or file.</param>
            <param name="secure">The security type.</param>
            <param name="recurse">if set to <c>true</c>, recurse thru directories.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory.#ctor(System.String)">
            <summary>
            Creates an instance with an initial path value.
            </summary>
            <param name="path">The relative path to the directory or file.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory.Recurse">
            <summary>
            Gets or sets a flag indicating whether or not to include all files in any sub-directories 
            when evaluating a request.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectoryCollection">
            <summary>
            The SecureWebPageDirectoryCollection class houses a collection of SecureWebPageDirectory instances.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItemCollection">
            <summary>
            The SecureWebPageItemCollection class houses a collection of SecureWebPageItem instances.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItemCollection.#ctor">
            <summary>
            Initialize an instance of this collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItemCollection.IndexOf(Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem)">
            <summary>
            Returns the index of a specified item in the collection.
            </summary>
            <param name="item">The item to find.</param>
            <returns>Returns the index of the item.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItemCollection.IndexOf(System.String)">
            <summary>
            Returns the index of an item with the specified path in the collection.
            </summary>
            <param name="path">The path of the item to find.</param>
            <returns>Returns the index of the item with the path.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectoryCollection.#ctor">
            <summary>
            Initialize an instance of this collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectoryCollection.Add(Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory)">
            <summary>
            Adds the item to the collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectoryCollection.Insert(System.Int32,Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The index to insert the item at.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectoryCollection.Remove(Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectory)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageDirectoryCollection.Item(System.Int32)">
            <summary>
            Indexer for the collection.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFile">
            <summary>
            The SecureWebPageFile class represents an file entry in the &lt;secureWebPages&gt;
            configuration section.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFile.#ctor">
            <summary>
            Creates an instance with default values.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFile.#ctor(System.String,Mediachase.Commerce.Website.Ssl.Collections.SecurityType)">
            <summary>
            Creates an instance with initial values.
            </summary>
            <param name="path">The relative path to the directory or file.</param>
            <param name="secure">The type of security to apply.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFile.#ctor(System.String)">
            <summary>
            Creates an instance with an initial path value.
            </summary>
            <param name="path">The relative path to the directory or file.</param>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFileCollection">
            <summary>
            The SecureWebPageFileCollection class houses a collection of SecureWebPageFile instances.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFileCollection.#ctor">
            <summary>
            Initialize an instance of this collection.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFileCollection.Add(Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFile)">
            <summary>
            Adds the item to the collection.
            </summary>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFileCollection.Insert(System.Int32,Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFile)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The index to insert the item at.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFileCollection.Remove(Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFile)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageFileCollection.Item(System.Int32)">
            <summary>
            Indexer for the collection.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecurityType">
            <summary>
            Indicates the type of security for a SecureWebPageItem.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.Collections.SecurityType.Secure">
            <summary>
            The item should be secure.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.Collections.SecurityType.Insecure">
            <summary>
            The item should be insecure.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.Collections.SecurityType.Ignore">
            <summary>
            The item should be ignored.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItemComparer">
            <summary>
            The SecureWebPageItemComparer class implements the IComparer interface to compare.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItemComparer.#ctor">
            <summary>
            Initialize an instance of this class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItemComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares the two objects as string and SecureWebPageItem or both SecureWebPageItem 
            by the Path property.
            </summary>
            <param name="x">First object to compare.</param>
            <param name="y">Second object to compare.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionException">
            <summary>
            The exception thrown for any errors while reading the secureWebPages 
            section of a configuration file.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionException.#ctor">
            <summary>
            Intializes an instance of this exception.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionException.#ctor(System.String,System.Xml.XmlNode)">
            <summary>
            Initializes an instance of this exception with specified parameters.
            </summary>
            <param name="message">The message to display to the client when the exception is thrown.</param>
            <param name="node">The XmlNode that contains the error.</param>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler">
            <summary>
            SecureWebPageSectionHandler reads any &lt;secureWebPages&gt; section from a configuration file.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler.#ctor">
            <summary>
            Initializes an instance of this class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Parses the XML configuration section and returns the settings.
            </summary>
            <param name="parent">
            	The configuration settings in a corresponding parent 
            	configuration section.
            </param>
            <param name="configContext">
            	An HttpConfigurationContext when Create is called from the ASP.NET 
            	configuration system. Otherwise, this parameter is reserved and is 
            	a null reference (Nothing in Visual Basic).
            </param>
            <param name="section">
            	The XmlNode that contains the configuration information from the 
            	configuration file. Provides direct access to the XML contents of 
            	the configuration section.
            </param>
            <returns>
            	Returns a SecureWebPageSettings instance initialized with the 
            	read configuration settings.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler.ReadGeneralSettings(System.Xml.XmlNode,Mediachase.Commerce.Website.Ssl.SecureWebPageSettings)">
            <summary>
            Reads general settings from the secureWebPages section into the given SecureWebPageSettings instance.
            </summary>
            <param name="section">The XmlNode to read from.</param>
            <param name="settings">The SecureWebPageSettings instance to set.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler.ReadChildItem(System.Xml.XmlNode,Mediachase.Commerce.Website.Ssl.Collections.SecureWebPageItem)">
            <summary>
            Reads the typical attributes for a SecureWebPageItem from the configuration node.
            </summary>
            <param name="node">The XmlNode to read from.</param>
            <param name="item">The SecureWebPageItem to set values for.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler.ReadDirectoryItem(System.Xml.XmlNode)">
            <summary>
            Reads a directory item from the configuration node and returns a new instance of SecureWebPageDirectory.
            </summary>
            <param name="node">The XmlNode to read from.</param>
            <returns>A SecureWebPageDirectory initialized with values read from the node.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSectionHandler.ReadFileItem(System.Xml.XmlNode)">
            <summary>
            Reads a file item from the configuration node and returns a new instance of SecureWebPageFile.
            </summary>
            <param name="node">The XmlNode to read from.</param>
            <returns>A SecureWebPageFile initialized with values read from the node.</returns>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.SecureWebPageMode">
            <summary>
            The different modes supported for the &lt;secureWebPages&gt; configuration section.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.SecureWebPageMode.On">
            <summary>
            Indicates that web page security is on and all requests should be monitored.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.SecureWebPageMode.RemoteOnly">
            <summary>
            Only remote requests are to be monitored.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.SecureWebPageMode.LocalOnly">
            <summary>
            Only local requests are to be monitored.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.SecureWebPageMode.Off">
            <summary>
            Web page security is off and no monitoring should occur.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.SecurityWarningBypassMode">
            <summary>
            The different modes for bypassing security warnings.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.SecurityWarningBypassMode.AlwaysBypass">
            <summary>
            Always bypass security warnings when switching to an unencrypted page.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.SecurityWarningBypassMode.BypassWithQueryParam">
            <summary>
            Only bypass security warnings when switching to an unencrypted page if the proper query parameter is present.
            </summary>
        </member>
        <member name="F:Mediachase.Commerce.Website.Ssl.SecurityWarningBypassMode.NeverBypass">
            <summary>
            Never bypass security warnings when switching to an unencrypted page.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings">
            <summary>
            SecureWebPageSettings contains the settings of a secureWebPages configuration section.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.#ctor">
            <summary>
            The default constructor creates the needed lists.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.ValidateHostPath(System.String)">
            <summary>
            Validates a host path by stripping out any unneeded elements.
            </summary>
            <param name="hostPath">The host path to validate.</param>
            <returns>Returns a string that is stripped as needed.</returns>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.BypassQueryParamName">
            <summary>
            Gets or sets the name of the query parameter that will indicate to the module to bypass
            any security warning if WarningBypassMode = BypassWithQueryParam.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.EncryptedUri">
            <summary>
            Gets or sets the path to a URI for encrypted redirections, if any.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.MaintainPath">
            <summary>
            Gets or sets a flag indicating whether or not to maintain the current path when redirecting
            to a different host.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.Mode">
            <summary>
            Gets or sets the mode indicating how the secure web page settings handled.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.Directories">
            <summary>
            Gets the collection of directories read from the configuration section.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.Files">
            <summary>
            Gets the collection of files read from the configuration section.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.UnencryptedUri">
            <summary>
            Gets or sets the path to a URI for unencrypted redirections, if any.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Ssl.SecureWebPageSettings.WarningBypassMode">
            <summary>
            Gets or sets the bypass mode indicating whether or not to bypass security warnings
            when switching to a unencrypted page.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.SslFilter">
            <summary>
            The SslFilter class hooks the application's BeginRequest event
            in order to request the current page securely if specified in the 
            configuration file.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SslFilter.#ctor">
            <summary>
            Initializes an instance of this class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SslFilter.Dispose">
            <summary>
            Disposes of any resources used.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SslFilter.Init(System.Web.HttpApplication)">
            <summary>
            Initializes the module by hooking the application's BeginRequest event if indicated by the config settings.
            </summary>
            <param name="application">The HttpApplication this module is bound to.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SslFilter.RequestMatchesMode(System.Web.HttpRequest,Mediachase.Commerce.Website.Ssl.SecureWebPageMode)">
            <summary>
            Tests the given request to see if it matches the specified mode.
            </summary>
            <param name="request">A HttpRequest to test.</param>
            <param name="mode">The SecureWebPageMode used in the test.</param>
            <returns>
            	Returns true if the request matches the mode as follows:
            	<list type="disc">
            		<item>If mode is On.</item>
            		<item>If mode is set to RemoteOnly and the request is from a computer other than the server.</item>
            		<item>If mode is set to LocalOnly and the request is from the server.</item>
            	</list>
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SslFilter.Application_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            Handle the application's BeginRequest event by requesting the current
            page securely, if specified.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="e">EventArgs passed in.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SslFilter.CheckDesignMode(System.Web.HttpContext)">
            <summary>
            Checks the design mode.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Website.Ssl.SSLHelper">
            <summary>
            The SSLHelper class provides static methods for ensuring that a page is rendered
            securely via SSL or unsecurely.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SSLHelper.#ctor">
            <summary>
            Intializes an instance of this class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SSLHelper.RequestSecurePage(Mediachase.Commerce.Website.Ssl.SecureWebPageSettings)">
            <summary>
            Requests the current page over a secure connection, if it is not already.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SSLHelper.RequestUnsecurePage(Mediachase.Commerce.Website.Ssl.SecureWebPageSettings)">
            <summary>
            Requests the current page over an insecure connection, if it is not already.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Ssl.SSLHelper.BuildUrl(System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Builds a URL from the given protocol and appropriate host path. The resulting URL 
            will maintain the current path if requested.
            </summary>
            <param name="secure">Is this to be a secure URL?</param>
            <param name="maintainPath">Should the current path be maintained during transfer?</param>
            <param name="encryptedUri">The URI to redirect to for encrypted requests.</param>
            <param name="unencryptedUri">The URI to redirect to for standard requests.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.CmsNumericPagerField">
            <summary>
            Extends standard NumericPagerField with a support for URL Rewritten pages.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Controls.CmsNumericPagerField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.CreateField">
            <summary>
            Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> class.
            </summary>
            <returns>
            A new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> class.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.GetQueryStringNavigateUrl2(System.Int32)">
            <summary>
            Gets the query string navigate url2.
            </summary>
            <param name="pageNumber">The page number.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.CreateNumericButton(System.Int32)">
            <summary>
            Creates the numeric button.
            </summary>
            <param name="pageIndex">Index of the page.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.CreateNextPrevButton(System.String,System.Int32,System.String)">
            <summary>
            Creates the next prev button.
            </summary>
            <param name="buttonText">The button text.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="imageUrl">The image URL.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates the user interface (UI) controls for the pager field object and adds them to the specified container.
            </summary>
            <param name="container">The container that is used to store the controls.</param>
            <param name="startRowIndex">The index of the first record on the page.</param>
            <param name="maximumRows">The maximum number of items on a single page.</param>
            <param name="totalRowCount">The total number of items.</param>
            <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields"/> collection.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Handles events that occur in the <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> object and performs the appropriate action.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> object.
            </summary>
            <param name="o">The object to compare with the current <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> instance.</param>
            <returns>
            true if the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> object; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.GetHashCode">
            <summary>
            Serves as a hash function for the <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> class.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Web.UI.WebControls.NumericPagerField"/> object. For more information, see the <see cref="M:System.Object.GetHashCode"/> class.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.CmsNumericPagerField.CurrentUrl">
            <summary>
            Gets the current URL.
            </summary>
            <value>The current URL.</value>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.CmsSiteMapPathAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.Controls.Adapters.CmsSiteMapPathAdapter"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.CmsSiteMapPathAdapter.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Creates the beginning tag for the Web control in the markup that is transmitted to the target browser.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> containing methods to render the target-specific output.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.Adapters.CmsSiteMapPathAdapter.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Generates the target-specific inner markup for the Web control to which the control adapter is attached.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> containing methods to render the target-specific output.</param>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.GlobalRadioButton">
            <summary>
            This radio button is much like the built in <see cref="T:System.Web.UI.WebControls.RadioButton"/> control, but unlike it, has a <see cref="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.GroupName"/> that can be global, ignoring naming containers.
            </summary>
            <remarks>
            Be <b>very careful</b> when using this control, 
            as it is quite easy to break other controls on the page 
            because of the disrespect for naming containers in the "name" attribute of the rendered html input.
            </remarks>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.#ctor">
            <summary>
            Creates a new instance of the GlobalRadioButton class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.OnCheckedChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Mediachase.Commerce.Website.Controls.GlobalRadioButton.CheckedChanged"/> event.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.OnPreRender(System.EventArgs)">
            <summary>
            Overrides the OnPreRender method.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overrides the Render method.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the control content.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.RenderInputTag(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Renders the input tag portion of the control.
            </summary>
            <param name="writer">The writer.</param>
            <param name="clientID">The client ID.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.RenderLabel(System.Web.UI.HtmlTextWriter,System.String,System.String)">
            <summary>
            Renders the label portion of the control.
            </summary>
            <param name="writer">The writer.</param>
            <param name="text">The text.</param>
            <param name="clientID">The client ID.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            When implemented by a class, processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>
            true if the server control's state changes as a result of the postback; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.GlobalRadioButton.GetHiddenProperty(System.Object,System.Type,System.String)">
            <summary>
            Gets the hidden property.
            </summary>
            <param name="target">The target.</param>
            <param name="targetType">Type of the target.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="E:Mediachase.Commerce.Website.Controls.GlobalRadioButton.CheckedChanged">
            <summary>
            The event that occurs when the checked property has changed.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether the state automatically posts back to the server when clicked.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.Checked">
            <summary>
            Gets or sets a value indicating whether the control is checked.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.Text">
            <summary>
            Gets or sets the text label associated with the control.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.TextAlign">
            <summary>
            Gets or sets the alignment of the text label associated with the control.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.GroupName">
            <summary>
            Gets or sets the name of the group that the radio button belongs to.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.GlobalGroup">
            <summary>
            Gets or sets if the GroupName will span across naming containers on the page.
            </summary>
            <remarks>
            Set this property to true to enable the "global" functionality of the control.
            Set this property to false to make it behave like a normal RadioButton.
            </remarks>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.UniqueGroupName">
            <summary>
            Gets the group name for the control as it will exist in the name attribute of the html.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.GlobalRadioButton.ValueAttribute">
            <summary>
            Gets the content to be put in the html value attribute.
            </summary>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.MetaImage">
            <summary>
            Used to load image from the image meta field
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.MetaImage.OnDataBinding(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.DataBinding"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.MetaImage.BindImage">
            <summary>
            Binds the image.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.MetaImage.OnPreRender(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.MetaImage.IsDimensionSpecified">
            <summary>
            Determines whether [is dimension specified].
            </summary>
            <returns>
            	<c>true</c> if [is dimension specified]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.MetaImage.PropertyName">
            <summary>
            The property name within meta fields, if not specified, the image won't be rendered
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.MetaImage.ShowThumbImage">
            <summary>
            If this property set, the thumbnail image will be displayed.
            </summary>
            <value><c>true</c> if [show full image]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.MetaImage.OpenFullImage">
            <summary>
            If this property set, the clicking will result in opening a full image dialog.
            </summary>
            <value><c>true</c> if [show full image]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.MetaImage.DataSource">
            <summary>
            Image property within ItemAttributes
            </summary>
            <value>The data source.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.ThemedControl">
            <summary>
            Loads the control template using the theme specified.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ThemedControl.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> object that contains the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ThemedControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ThemedControl.CreateChildControlsTree">
            <summary>
            Creates child controls before viewstate is initialized.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ThemedControl.ThemePath">
            <summary>
            Gets or sets the theme path.
            </summary>
            <value>The theme path.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ThemedControl.SiteTheme">
            <summary>
            Gets or sets the site theme.
            </summary>
            <value>The site theme.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ThemedControl.DefaultSiteTheme">
            <summary>
            Gets or sets the default site theme.
            </summary>
            <value>The site theme.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.Controls.ThemedControl.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.ThemedHyperLink">
            <summary>
            Used to load image from the theme directory.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ThemedHyperLink.OnPreRender(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.ThemedImage">
            <summary>
            Used to load image from the theme directory.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ThemedImage.OnPreRender(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Mediachase.Commerce.Website.Controls.ThemedImageButton">
            <summary>
            Used to load image from the theme directory.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.Controls.ThemedImageButton.OnPreRender(System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.ErrorEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ErrorEventArgs"/> class.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="P:Mediachase.Commerce.Website.ErrorEventArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.ErrorManager">
            <summary>
            Summary description for ErrorManager.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.ErrorManager.OnError(Mediachase.Commerce.Website.ErrorEventArgs)">
            <summary>
            Raises the <see cref="E:Error"/> event.
            </summary>
            <param name="e">The <see cref="T:Mediachase.Commerce.Website.ErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.ErrorManager.GenerateError(System.String)">
            <summary>
            Generates the error.
            </summary>
            <param name="msg">The MSG.</param>
        </member>
        <member name="M:Mediachase.Commerce.Website.ErrorManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Commerce.Website.ErrorManager"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.Commerce.Website.ErrorManager.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>The instance.</value>
        </member>
        <member name="T:Mediachase.Commerce.Website.CatalogSiteMapProvider">
            <summary>
            StoreSiteMapProvider implements SiteMapProvider class and communicates with backend web services to 
            return catalog structure.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StoreSiteMapProvider"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.FindSiteMapNode(System.String)">
            <summary>
            When overridden in a derived class, retrieves a <see cref="T:System.Web.SiteMapNode"></see> object that represents the page at the specified URL.
            </summary>
            <param name="rawUrl">A URL that identifies the page for which to retrieve a <see cref="T:System.Web.SiteMapNode"></see>.</param>
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the page identified by rawURL; otherwise, null, if no corresponding <see cref="T:System.Web.SiteMapNode"></see> is found or if security trimming is enabled and the <see cref="T:System.Web.SiteMapNode"></see> cannot be returned for the current user.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.GetChildNodes(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the child nodes of a specific <see cref="T:System.Web.SiteMapNode"></see>.
            </summary>
            <param name="node">The <see cref="T:System.Web.SiteMapNode"></see> for which to retrieve all child nodes.</param>
            <returns>
            A read-only <see cref="T:System.Web.SiteMapNodeCollection"></see> that contains the immediate child nodes of the specified <see cref="T:System.Web.SiteMapNode"></see>; otherwise, null or an empty collection, if no child nodes exist.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.GetParentNode(System.Web.SiteMapNode)">
            <summary>
            When overridden in a derived class, retrieves the parent node of a specific <see cref="T:System.Web.SiteMapNode"></see> object.
            </summary>
            <param name="catalogNode">The <see cref="T:System.Web.SiteMapNode"></see> for which to retrieve the parent node.</param>
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the parent of node; otherwise, null, if the <see cref="T:System.Web.SiteMapNode"></see> has no parent or security trimming is enabled and the parent node is not accessible to the current user.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.GetRootNodeCore">
            <summary>
            When overidden in a derived class, retrieves the root node of all the nodes that are currently managed by the current provider.
            </summary>
            <returns>
            A <see cref="T:System.Web.SiteMapNode"></see> that represents the root node of the set of nodes that the current provider manages.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.CreateSiteMapNode(Mediachase.Commerce.Catalog.Objects.CatalogNode)">
            <summary>
            Creates the site map node.
            </summary>
            <param name="node">The catalog node.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.CreateSiteMapNode(Mediachase.Commerce.Catalog.Objects.Entry)">
            <summary>
            Creates the site map node.
            </summary>
            <param name="entry">The entry.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.MakeUrlAbsolute(System.String)">
            <summary>
            Makes the URL absolute.
            </summary>
            <param name="oldUrl">The old URL.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.IsRelativeUrl(System.String)">
            <summary>
            Determines whether [is relative URL] [the specified virtual path].
            </summary>
            <param name="virtualPath">The virtual path.</param>
            <returns>
            	<c>true</c> if [is relative URL] [the specified virtual path]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.IsRooted(System.String)">
            <summary>
            Determines whether the specified basepath is rooted.
            </summary>
            <param name="basepath">The basepath.</param>
            <returns>
            	<c>true</c> if the specified basepath is rooted; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.GetAndRemoveStringAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.String@)">
            <summary>
            Gets the and remove string attribute internal.
            </summary>
            <param name="node">The node.</param>
            <param name="attrib">The attrib.</param>
            <param name="fRequired">if set to <c>true</c> [f required].</param>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.GetAndRemoveAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            Gets the and remove attribute.
            </summary>
            <param name="node">The node.</param>
            <param name="attrib">The attrib.</param>
            <param name="fRequired">if set to <c>true</c> [f required].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.CatalogSiteMapProvider.GetAndRemoveStringAttribute(System.Xml.XmlNode,System.String,System.String@)">
            <summary>
            Gets the and remove string attribute.
            </summary>
            <param name="node">The node.</param>
            <param name="attrib">The attrib.</param>
            <param name="val">The val.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Commerce.Website.CatalogSiteMapProvider.CatalogName">
            <summary>
            Gets or sets the name of the catalog.
            </summary>
            <value>The name of the catalog.</value>
        </member>
        <member name="P:Mediachase.Commerce.Website.CatalogSiteMapProvider.RootNode">
            <summary>
            Gets the root <see cref="T:System.Web.SiteMapNode"></see> object of the site map data that the current provider represents.
            </summary>
            <value></value>
            <returns>The root <see cref="T:System.Web.SiteMapNode"></see> of the current site map data provider. The default implementation performs security trimming on the returned node.</returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.StaticUrlProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">
            The name of the provider is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The name of the provider has a length of zero.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"/> on a provider after the provider has already been initialized.
            </exception>
        </member>
        <member name="M:Mediachase.Commerce.Website.StaticUrlProvider.GetUrl(System.String,System.Object[])">
            <summary>
            Gets the URL.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="commandParams">The command params.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Commerce.Website.StaticUrlProvider.GetUrl(System.String)">
            <summary>
            Gets the URL.
            </summary>
            <param name="commandName">Name of the command.</param>
            <returns></returns>
        </member>
    </members>
</doc>
