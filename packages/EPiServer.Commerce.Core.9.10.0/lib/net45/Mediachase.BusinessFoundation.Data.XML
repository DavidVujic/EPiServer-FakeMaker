<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediachase.BusinessFoundation.Data</name>
    </assembly>
    <members>
        <member name="T:Mediachase.BusinessFoundation.Data.AbstractFilterElement">
            <summary>
            Represents base class for custom filter elements.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.FilterElement">
            <summary>
            Represents simple filter element.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElement.PrimaryKeyFieldName">
            <summary>
            Represents name of primary key field
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElement.Empty">
            <summary>
            Empty FilterElement
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.FilterElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.FilterElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.#ctor(System.String,Mediachase.BusinessFoundation.Data.FilterElementType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FilterElement"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.#ctor(System.String,Mediachase.BusinessFoundation.Data.FilterElementType,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.FilterElement"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <param name="valueIsTemplate">if set to <c>true</c> [value is template].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.op_Equality(Mediachase.BusinessFoundation.Data.FilterElement,Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Operator ==s the specified field1.
            </summary>
            <param name="field1">The field1.</param>
            <param name="field2">The field2.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.op_Inequality(Mediachase.BusinessFoundation.Data.FilterElement,Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Operator !=s the specified field1.
            </summary>
            <param name="field1">The field1.</param>
            <param name="field2">The field2.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.Find(System.Guid)">
            <summary>
            Finds the specified uid.
            </summary>
            <param name="filterElementUid">The filter element uid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.EqualElement(System.String,System.Object)">
            <summary>
            Equals the element.
            </summary>
            <param name="source">The source.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.NotEqualElement(System.String,System.Object)">
            <summary>
            Nots the equal element.
            </summary>
            <param name="source">The source.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.IsNullElement(System.String)">
            <summary>
            Determines whether [is null element] [the specified source].
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElement.IsNotNullElement(System.String)">
            <summary>
            Determines whether [is not null element] [the specified source].
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FilterElement.Uid">
            <summary>
            Gets or sets the uid.
            </summary>
            <value>The uid.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FilterElement.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FilterElement.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FilterElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FilterElement.ValueIsTemplate">
            <summary>
            Gets or sets a value indicating whether [value is template].
            </summary>
            <value><c>true</c> if [value is template]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FilterElement.ChildElements">
            <summary>
            Gets the child elements.
            </summary>
            <value>The child elements.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FilterElement.HasChildElements">
            <summary>
            Gets a value indicating whether this instance has child elements.
            </summary>
            <value>
            	<c>true</c> if this instance has child elements; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AbstractFilterElement.#ctor(Mediachase.BusinessFoundation.Data.FilterElementType,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:FilterOrBlock"/> class.
            </summary>
            <param name="type">The type of the filter element.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.AbstractFilterElement.ChildElements">
            <summary>
            Gets the child elements.
            </summary>
            <value>The child elements.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.AssemblyUtil">
            <summary>
            Provides methods to load types from assemblies.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.SplitTypeAndAssembly(System.String)">
            <summary>
            Splits the type and assembly.
            </summary>
            <param name="typeString">The type string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.LoadObject``1(System.String)">
            <summary>
            Loads the object.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.LoadObject(System.String,System.Type)">
            <summary>
            Loads the object.
            </summary>
            <param name="type">The type.</param>
            <param name="interfaceType">Type of the interface.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.LoadObject(System.String)">
            <summary>
            Loads the object.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.LoadObject(System.String,System.String)">
            <summary>
            Loads the object.
            </summary>
            <param name="type">The type.</param>
            <param name="interfaceName">Name of the interface.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.LoadType(System.String)">
            <summary>
            Loads the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.LoadRecursive(System.String,System.Type)">
            <summary>
            Loads the recursive.
            </summary>
            <param name="path">The path.</param>
            <param name="interfaceType">Type of the interface.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.LoadRecursive(System.String,System.Type,System.Boolean)">
            <summary>
            Loads the recursive.
            </summary>
            <param name="path">The path.</param>
            <param name="interfaceType">Type of the interface.</param>
            <param name="deep">if set to <c>true</c> to a deep load.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.GetValueFromString(System.Type,System.String)">
            <summary>
            Gets the value from string.
            </summary>
            <param name="fieldType">Type of the field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.GetTypeString(System.Type)">
            <summary>
            Gets the type string.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AssemblyUtil.GetTypeString(System.String,System.String)">
            <summary>
            Gets the type string.
            </summary>
            <param name="typeFullName">Full name of the type.</param>
            <param name="typeAssemblyName">Name of the type assembly.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.AssemblyUtil.AssembliesPath">
            <summary>
            Gets the assemblies path.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.BiasReader">
            <summary>
            Provides the UTC offset specification.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.BiasReader._data">
            <summary>
            The time zone specification data.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BiasReader.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.BiasReader"/> class.
            </summary>
            <param name="rawData">The data to use for initialization.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BiasReader.#ctor(Mediachase.BusinessFoundation.Data.TimeZoneInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.BiasReader"/> class.
            </summary>
            <param name="timeZoneInfo">The time zone info.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BiasReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.BiasReader"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BiasReader.GetDaylightChanges(System.Int32)">
            <summary>
            Returns the daylight saving time period for a particular year.
            </summary>
            <param name="year">The year to which
            the daylight saving time period applies.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BiasReader.GetParticularDay(System.Int32,Mediachase.BusinessFoundation.Data.DaylightLimit)">
            <summary>
            Returns the particular date in the specified year
            on which the daylight saving time period applies.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BiasReader.TimeZoneInfo">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BiasReader.ZoneBias">
            <summary>
            Gets the basic bias of the time zone.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BiasReader.DaylightBias">
            <summary>
            Gets the Daylight Saving Time bias.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.BooleanFieldValidator">
            <summary>
            Represents boolean field validator.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.BaseFieldValidator">
            <summary>
            Represents base class for custom field validators.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.IFieldValidator">
            <summary>
            Allows access to the field validator
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.IValidator">
            <summary>
            Defines the properties and methods that objects that participate in validation must implement. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IValidator.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IValidator.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IValidator.IsValid">
            <summary>
            Gets or sets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IFieldValidator.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IFieldValidator.ObjectToValidate">
            <summary>
            Gets or sets the object to validate.
            </summary>
            <value>The object to validate.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BaseFieldValidator.Validate">
            <summary>
            Validates this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BaseFieldValidator.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BaseFieldValidator.GetObjectProperty">
            <summary>
            Gets the object property.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BaseFieldValidator.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BaseFieldValidator.ObjectToValidate">
            <summary>
            Gets or sets the field value.
            </summary>
            <value>The field value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BaseFieldValidator.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BaseFieldValidator.IsValid">
            <summary>
            Gets or sets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BooleanFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.BooleanFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.BooleanFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.BooleanFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler">
            <summary>
            Implements IRequestHandler.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.IRequestHandler.PreExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.IRequestHandler.PreExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.IRequestHandler.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.IRequestHandler.PostExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.IRequestHandler.PostExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.PreExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.PreExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.PostExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.PostExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.Mediachase#BusinessFoundation#Data#Business#IRequestHandler#PreExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.Mediachase#BusinessFoundation#Data#Business#IRequestHandler#PreExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.Mediachase#BusinessFoundation#Data#Business#IRequestHandler#Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.Mediachase#BusinessFoundation#Data#Business#IRequestHandler#PostExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BaseRequestHandler.Mediachase#BusinessFoundation#Data#Business#IRequestHandler#PostExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.BusinessContext">
            <summary>
            Represents Business Context.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessContext.#ctor(Mediachase.BusinessFoundation.Data.Business.Request,Mediachase.BusinessFoundation.Data.Business.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.BusinessContext"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessContext.SetResponse(Mediachase.BusinessFoundation.Data.Business.Response)">
            <summary>
            Sets the response.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessContext.GetMethod">
            <summary>
            Gets the method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessContext.GetTargetMetaClassName">
            <summary>
            Gets the name of the target meta class.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessContext.GetTargetPrimaryKeyId">
            <summary>
            Gets the target primary key id.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessContext.Current">
            <summary>
            Gets or sets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessContext.Request">
            <summary>
            Gets or sets the request.
            </summary>
            <value>The request.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessContext.Response">
            <summary>
            Gets or sets the response.
            </summary>
            <value>The response.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessContext.PluginStage">
            <summary>
            Gets the current plugin event pipe line stage.
            </summary>
            <value>The event pipe line stage.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessContext.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessContext.ParentContext">
            <summary>
            Gets or sets the parent context.
            </summary>
            <value>The parent context.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.BusinessManager">
            <summary>
            Represents Business Manager.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.Execute``2(``0)">
            <summary>
            Executes the specified request.
            </summary>
            <typeparam name="TRequest">The type of the request.</typeparam>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.Execute(Mediachase.BusinessFoundation.Data.Business.Request)">
            <summary>
            Executes the specified request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.Create(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Creates the specified request.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.Update(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Creates the specified request.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.Delete(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the specified request.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.Delete(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Deletes the specified entity object.
            </summary>
            <param name="entityObject">The entity object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.Load(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the specified request.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.InitializeEntity(System.String)">
            <summary>
            Initializes the entity.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.InitializeEntity``1(System.String)">
            <summary>
            Initializes the entity.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.FindHandlerByRequest(Mediachase.BusinessFoundation.Data.Business.Request)">
            <summary>
            Finds the handler by request.
            </summary>
            <param name="request">The request.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.FindPluginsByRequest(Mediachase.BusinessFoundation.Data.Business.Request,Mediachase.BusinessFoundation.Data.Business.EventPipeLineStage)">
            <summary>
            Finds the plugins by request.
            </summary>
            <param name="request">The request.</param>
            <param name="eventStage">The event stage.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManager.ExecutePlugins(Mediachase.BusinessFoundation.Data.Business.EventPipeLineStage)">
            <summary>
            Executes the plugins.
            </summary>
            <param name="eventPipeLineStage">The event pipe line stage.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManagerConfig.GetSupportedMethods(System.String)">
            <summary>
            Gets the supported methods.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.BusinessManagerConfig.GetSupportedMethods(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the supported methods.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessManagerConfig.Methods">
            <summary>
            Gets the registered methods.
            </summary>
            <value>The methods.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessManagerConfig.Plugins">
            <summary>
            Gets the registred plugins.
            </summary>
            <value>The plugins.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.BusinessManagerConfig.Handlers">
            <summary>
            Gets custom method handlers.
            </summary>
            <value>The handlers.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Configuration.BusinessManagerSection">
            <summary>
            Represents Business Manager Section.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.BusinessManagerSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.BusinessManagerSection"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.BusinessManagerSection.Handlers">
            <summary>
            Gets the handlers.
            </summary>
            <value>The handlers.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.BusinessManagerSection.Plugins">
            <summary>
            Gets the plugins.
            </summary>
            <value>The plugins.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement">
            <summary>
            Represents entity object instance configuration element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="typeName">Name of the type.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement.MetaClass">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement.TypeName">
            <summary>
            Gets or sets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection.Add(Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection.FindTypeName(System.String)">
            <summary>
            Finds the name of the type.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.EntityObjectInstanceElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement">
            <summary>
            Represents Request Handler Element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="method">The method.</param>
            <param name="typeName">Name of the type.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement.MetaClass">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement.TypeName">
            <summary>
            Gets or sets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection.Add(Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection.FindTypeName(System.String,System.String)">
            <summary>
            Finds the name of the type.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestHandlerElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement">
            <summary>
            Represents Request Plugin Element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement.#ctor(System.String,System.String,Mediachase.BusinessFoundation.Data.Business.EventPipeLineStage,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="method">The method.</param>
            <param name="eventPipeLineStage">The event pipe line stage.</param>
            <param name="typeName">Name of the type.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement.MetaClass">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement.EventStage">
            <summary>
            Gets or sets the event pipe line stage.
            </summary>
            <value>The event pipe line stage.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement.TypeName">
            <summary>
            Gets or sets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.Add(Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.FindTypeNames(System.String,System.String,Mediachase.BusinessFoundation.Data.Business.EventPipeLineStage)">
            <summary>
            Finds the type names.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="method">The method.</param>
            <param name="eventStage">The event stage.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.PatternMatchClass(System.String,System.String)">
            <summary>
            Patterns the match class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="metaClassNameMask">The meta class name mask.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.PatternMatchMethods(System.String,System.String)">
            <summary>
            Patterns the match methods.
            </summary>
            <param name="method">The method.</param>
            <param name="methodMask">The method mask.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Configuration.RequestPluginElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfoCollection">
            <summary>
            Represents method handler info collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfoCollection"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfo">
            <summary>
            Represents method handler info.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfo"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfo.MetaClassMask">
            <summary>
            Gets or sets the meta class mask.
            </summary>
            <value>The meta class mask.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfo.MethodMask">
            <summary>
            Gets or sets the method mask.
            </summary>
            <value>The method mask.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfo.PluginType">
            <summary>
            Gets or sets the type of the plugin.
            </summary>
            <value>The type of the plugin.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodHandlerInfo.PluginTypeName">
            <summary>
            Gets or sets the name of the plugin type.
            </summary>
            <value>The name of the plugin type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.PluginInfoCollection">
            <summary>
            Represents plugin info collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PluginInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.PluginInfoCollection"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.MethodInfo">
            <summary>
            Represents method info.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.MethodInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.MethodInfo"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.MethodInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.MethodInfo"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="description">The description.</param>
            <param name="requestType">Type of the request.</param>
            <param name="responseType">Type of the response.</param>
            <param name="defaultRequestHandlerType">Default type of the request handler.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.MethodInfo.#ctor(System.String,System.String,System.String,System.String,System.Type,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.MethodInfo"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="description">The description.</param>
            <param name="requestType">Type of the request.</param>
            <param name="responseType">Type of the response.</param>
            <param name="defaultRequestHandlerType">Default type of the request handler.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
            <remarks>Owner can be system or module.</remarks>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.MetaClassMask">
            <summary>
            Gets or sets the meta class mask.
            </summary>
            <value>The meta class mask.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.RequestType">
            <summary>
            Gets or sets the type of the request.
            </summary>
            <value>The type of the request.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.RequestTypeName">
            <summary>
            Gets or sets the name of the request type.
            </summary>
            <value>The name of the request type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.ResponseType">
            <summary>
            Gets or sets the type of the response.
            </summary>
            <value>The type of the response.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.ResponseTypeName">
            <summary>
            Gets or sets the name of the response type.
            </summary>
            <value>The name of the response type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.DefaultRequestHandlerType">
            <summary>
            Gets or sets the default type of the request handler.
            </summary>
            <value>The default type of the request handler.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.MethodInfo.DefaultRequestHandleTypeName">
            <summary>
            Gets or sets the default name of the request handle type.
            </summary>
            <value>The default name of the request handle type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.MethodInfoCollection">
            <summary>
            Represents method info collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.MethodInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.MethodInfoCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PluginInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.PluginInfo"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.PluginInfo.MetaClassMask">
            <summary>
            Gets or sets the meta class mask.
            </summary>
            <value>The meta class mask.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.PluginInfo.MethodMask">
            <summary>
            Gets or sets the method mask.
            </summary>
            <value>The method mask.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.PluginInfo.EventStage">
            <summary>
            Gets or sets the event stage.
            </summary>
            <value>The event stage.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.PluginInfo.PluginType">
            <summary>
            Gets or sets the type of the plugin.
            </summary>
            <value>The type of the plugin.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.RequestParameter"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElement.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.RequestParameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.PropertyElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.PropertyElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.CreateRequest">
            <summary>
            Represents create object request.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Request">
            <summary>
            Represents business method request message.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Request.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Request"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Request.#ctor(System.String,Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Request"/> class.
            </summary>
            <param name="method">The method.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Request.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Request.Method">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Request.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.CreateRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.CreateRequest"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.CreateRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.CreateRequest"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.CreateResponse">
            <summary>
            Represents Create Object Response.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Response">
            <summary>
            Represents nusiness method response message.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Response.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Response"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.CreateResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.CreateResponse"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.CreateResponse.#ctor(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.CreateResponse"/> class.
            </summary>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.CreateResponse.PrimaryKeyId">
            <summary>
            Gets or sets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory">
            <summary>
            Represents default entity object factory.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.IEntityObjectFactory">
            <summary>
            Represent entity object factory interface.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.IEntityObjectFactory.CanCreate(System.String)">
            <summary>
            Determines whether this instance can create the specified meta class.
            </summary>
            <param name="metaClassName">The meta class.</param>
            <returns>
            	<c>true</c> if this instance can create the specified meta class; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.IEntityObjectFactory.CreateInstance(System.String)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">The name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.AddInstance(System.String,System.String)">
            <summary>
            Adds the instance.
            </summary>
            <param name="name">The name.</param>
            <param name="typeName">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.AddInstance(System.String,System.Type)">
            <summary>
            Adds the instance.
            </summary>
            <param name="name">The name.</param>
            <param name="instanceType">Type of the instance.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.RemoveInstance(System.String)">
            <summary>
            Removes the instance.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.ClearInstances">
            <summary>
            Clears the instances.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.Mediachase#BusinessFoundation#Data#Business#IEntityObjectFactory#CanCreate(System.String)">
            <summary>
            Determines whether this instance can create the specified meta class names.
            </summary>
            <param name="metaClassNames">The meta class names.</param>
            <returns>
            	<c>true</c> if this instance can create the specified meta class names; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.Mediachase#BusinessFoundation#Data#Business#IEntityObjectFactory#CreateInstance(System.String)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.DefaultEntityObjectFactory.Instances">
            <summary>
            Gets or sets the instances.
            </summary>
            <value>The instances.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.DeleteRequest">
            <summary>
            Represents delete object request.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DeleteRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.DeleteRequest"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DeleteRequest.#ctor(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.DeleteRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.DeleteRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.DeleteRequest"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.EntityObject">
            <summary>
            Represents Entity Object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObject"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObject"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObject.#ctor(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObject"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObject.MetaClassName">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObject.PrimaryKeyId">
            <summary>
            Gets or sets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObject.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty">
            <summary>
            Represents entity object property.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.AddRange(Mediachase.BusinessFoundation.Data.Business.EntityObjectProperty[])">
            <summary>
            Adds the range.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.GetValue``1(System.String)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObjectPropertyCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.GlobalResource.GetString(System.String)">
            <summary>
            Gets the resource string.
            </summary>
            <param name="template">The template.</param>
            <returns>
            The string from global resources if template is "{classKey:resourceKey}", otherwise template.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.GlobalResource.GetString(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the resource string.
            </summary>
            <param name="template">The template.</param>
            <param name="culture">The culture.</param>
            <returns>
            The string from global resources if template is "{classKey:resourceKey}", otherwise template.
            </returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.ImportRequest">
            <summary>
            Represents Import Request.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ImportRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ImportRequest"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ImportRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ImportRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ImportRequest.#ctor(System.String,System.Data.DataSet,Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ImportRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="externalData">The external data.</param>
            <param name="mappingDocument">The mapping document.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ImportRequest.MappingDocument">
            <summary>
            Gets or sets the mapping document.
            </summary>
            <value>The mapping document.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ImportRequest.Data">
            <summary>
            Gets or sets the external data.
            </summary>
            <value>The external data.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.ImportResponse">
            <summary>
            Represents .
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ImportResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ImportResponse"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ImportResponse.Errors">
            <summary>
            Gets or sets the errors.
            </summary>
            <value>The errors.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ImportResponse.PrimaryKeyIds">
            <summary>
            Gets or sets the created objects.
            </summary>
            <value>The created objects.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.InitializeEntityRequest">
            <summary>
            Represents initialize entity request.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeEntityRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.InitializeEntityRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeEntityRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.InitializeEntityRequest"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.InitializeEntityResponse">
            <summary>
            Represent an initialize entity response.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeEntityResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.LoadResponse"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeEntityResponse.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.LoadResponse"/> class.
            </summary>
            <param name="entityObject">The entity object.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.InitializeEntityResponse.EntityObject">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest">
            <summary>
            Represents initialize mapping documentrequest.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest.#ctor(System.String,System.Data.DataSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="externalData">The external data.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest.#ctor(System.String,System.Data.DataSet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ImportRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="externalData">The external data.</param>
            <param name="tableIndex">Index of the table.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest.Data">
            <summary>
            Gets or sets the external data.
            </summary>
            <value>The external data.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentRequest.TableIndex">
            <summary>
            Gets or sets the index of the table.
            </summary>
            <value>The index of the table.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentResponse">
            <summary>
            Represents initialize mapping document response.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.InitializeMappingDocumentResponse"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.IPlugin">
            <summary>
            Represent custom business logic that you can integrate with IBN to modify or augment the standard behavior of the platform.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.ListRequest">
            <summary>
            Represents list request.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(System.String,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(System.String,Mediachase.BusinessFoundation.Data.FilterElement[],Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(System.String,Mediachase.BusinessFoundation.Data.FilterElement[],Mediachase.BusinessFoundation.Data.SortingElement[],System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The index of first item to return.</param>
            <param name="count">The maximum count of items to return.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.BusinessFoundation.Data.FilterElement[],Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.BusinessFoundation.Data.FilterElement[],Mediachase.BusinessFoundation.Data.SortingElement[],System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The index of first item to return.</param>
            <param name="count">The maximum count of items to return.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(System.String,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="sorting">The sorting.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListRequest"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="sorting">The sorting.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ListRequest.Filters">
            <summary>
            Gets or sets the filters.
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ListRequest.Sorting">
            <summary>
            Gets or sets the sorting.
            </summary>
            <value>The sorting.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ListRequest.Start">
            <summary>
            Gets or sets the index of first item to return.
            </summary>
            <value>New value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ListRequest.Count">
            <summary>
            Gets or sets the maximum count of items to return.
            </summary>
            <value>New value.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.ListResponse">
            <summary>
            Represents List Response.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListResponse"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.ListResponse.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.ListResponse"/> class.
            </summary>
            <param name="entityObjects">The entity objects.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.ListResponse.EntityObjects">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.LoadRequest">
            <summary>
            Represents load object request.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.LoadRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.LoadRequest"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.LoadRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.LoadRequest"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.LoadResponse">
            <summary>
            Represents Load Response.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.LoadResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.LoadResponse"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.LoadResponse.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.LoadResponse"/> class.
            </summary>
            <param name="entityObject">The entity object.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.LoadResponse.EntityObject">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.BaseSourceValue.CreateValueSourceInstance(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule)">
            <summary>
            Creates the generator.
            </summary>
            <param name="rule">The mapping rule.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.CopySourceValue.Initialize(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified param.
            </summary>
            <param name="param">The param.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.CopySourceValue.GetValue(System.Data.DataRow,System.Data.DataColumn,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject})">
            <summary>
            Gets the value.
            </summary>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <param name="mappedObjectList">The mapped object list.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.DefaultSourceValue.Initialize(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified param.
            </summary>
            <param name="param">The param.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.DefaultSourceValue.GetValue(System.Data.DataRow,System.Data.DataColumn,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject})">
            <summary>
            Gets the value.
            </summary>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <param name="mappedObjectList">The mapped object list.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject.#ctor(System.String,Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject"/> class.
            </summary>
            <param name="className">Name of the class.</param>
            <param name="mapElColl">The map el coll.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject.ClassName">
            <summary>
            Gets the name of the class.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject.MappingElements">
            <summary>
            Gets the map el coll.
            </summary>
            <value>The map el coll.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject.MetaObjects">
            <summary>
            Gets the meta objets.
            </summary>
            <value>The meta objets.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Collection`1">
            <summary>
            Represents collection with change tracking.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.IChangeTracking">
            <summary>
            Defines the mechanism for querying the object for changes and resetting of the changed status.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IChangeTracking.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IChangeTracking.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Collection`1"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the range.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.ToArray">
            <summary>
            Toes the array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.RaiseChangedEvent(Mediachase.BusinessFoundation.Data.CollectionChangeType,`0,`0)">
            <summary>
            Raises the changed event.
            </summary>
            <param name="change">The change.</param>
            <param name="item">The item.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.OnChanged(Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs{`0})">
            <summary>
            Called when [changed].
            </summary>
            <param name="argument">The argument.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.RaiseChangingEvent(Mediachase.BusinessFoundation.Data.CollectionChangeType,`0,`0)">
            <summary>
            Raises the changing event.
            </summary>
            <param name="change">The change.</param>
            <param name="item">The item.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.OnChanging(Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs{`0})">
            <summary>
            Called when [changing].
            </summary>
            <param name="argument">The argument.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.-or-index is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"></see>.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.SetItem(System.Int32,`0)">
            <summary>
            Sets the item.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.-or-index is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"></see>.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"></see>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.-or-index is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"></see>.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"></see>.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Collection`1.Mediachase#BusinessFoundation#Data#IChangeTracking#AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Collection`1.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Collection`1.Mediachase#BusinessFoundation#Data#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument.LoadFromXml(System.String)">
            <summary>
            Loads from XML.
            </summary>
            <param name="srcXml">The SRC XML.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument.GetXml(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument)">
            <summary>
            Saves to XML.
            </summary>
            <param name="mapDoc">The map doc.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument.LoadFromFile(System.String)">
            <summary>
            Loads from file.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument.SaveToFile(System.String,Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument)">
            <summary>
            Saves to file.
            </summary>
            <param name="path">The path.</param>
            <param name="mapDoc">The map doc.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="w">The w.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="r">The r.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Gets the schema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="w">The w.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="r">The r.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Gets the schema.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement.ClassName">
            <summary>
            Gets or sets the name of the class.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement.TableName">
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>The name of the table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement.PrimaryKeyName">
            <summary>
            Gets or sets the name of the PK col.
            </summary>
            <value>The name of the PK col.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder">
            <summary>
            Represents MappingDocument Builder.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.#ctor(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder"/> class.
            </summary>
            <param name="mappingDocument">The mapping document.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.GetRuleByColumn(System.String)">
            <summary>
            Gets the name of the mapping element by column.
            </summary>
            <param name="sourceColumnName">Name of the source column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.GetRuleByMetaField(System.String)">
            <summary>
            Gets the mapping element by meta field.
            </summary>
            <param name="metaFieldName">Name of the meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.AssignCopyValueRule(System.String,System.String)">
            <summary>
            Assigns the copy value rule.
            </summary>
            <param name="sourceColumnName">Name of the source column.</param>
            <param name="targetMetaFieldName">Name of the target meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.GetMappingElement">
            <summary>
            Gets the mapping element.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.AssignDefaultValueRule(System.String,System.String)">
            <summary>
            Assigns the default value rule.
            </summary>
            <param name="metaFieldName">Name of the meta field.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.RemoveRuleByColumn(System.String)">
            <summary>
            Removes the rule by column.
            </summary>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.RemoveRuleByMetaField(System.String)">
            <summary>
            Removes the rule by meta field.
            </summary>
            <param name="metaFieldName">Name of the meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.GetFieldName(System.Data.DataColumn)">
            <summary>
            Gets the name of the field.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElementBuilder.MappingDocument">
            <summary>
            Gets or sets the mapping document.
            </summary>
            <value>The mapping document.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingErrorEventHandler">
            <summary>
            Defines mapping error event handler.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine">
            <summary>
            Represents mapping engine.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine.RaiseErrorEvent(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngineErrorEventArgs)">
            <summary>
            Raises the error event.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine.ProcessMapping(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingDocument,System.Data.DataSet)">
            <summary>
            Processes the mapping.
            </summary>
            <param name="mappingDoc">The XML map rules.</param>
            <param name="dataSet">The map data set.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine.PrepareMappingSet(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement,System.Data.DataSet,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject})">
            <summary>
            Prepares the mapping set.
            </summary>
            <param name="mapElColl">The map el coll.</param>
            <param name="dataSet">The data set.</param>
            <param name="mappedObjectList">The mapped object list.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine.PrepareMappingSet(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingElement,System.Data.DataTable,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject})">
            <summary>
            Prepares the mapping set.
            </summary>
            <param name="mappingElement">The mapping element.</param>
            <param name="dataTable">The data table.</param>
            <param name="mappedObjectList">The mapped object list.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine.Value2MetaPropertyType(System.Object,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Value2s the type of the meta property.
            </summary>
            <param name="value">The value.</param>
            <param name="mf">The mf.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine.Errors">
            <summary>
            Gets the get last error.
            </summary>
            <value>The get last error.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingEngine.PrimaryKeyIds">
            <summary>
            Gets the primary key ids.
            </summary>
            <value>The primary key ids.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError">
            <summary>
            Represents mapping error.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.#ctor(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingErrorType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="descr">The descr.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.#ctor(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingErrorType,System.String,System.Data.DataRow)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="descr">The descr.</param>
            <param name="row">The row.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.AppendTag(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Appends the tag.
            </summary>
            <param name="output">The output.</param>
            <param name="tag">The tag.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.AppendTag(System.Text.StringBuilder,System.String,System.String,System.String)">
            <summary>
            Appends the tag.
            </summary>
            <param name="output">The output.</param>
            <param name="tag">The tag.</param>
            <param name="attribute">The attribute.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.AppendTag(System.Text.StringBuilder,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the tag.
            </summary>
            <param name="output">The output.</param>
            <param name="tag">The tag.</param>
            <param name="attribute">The attribute.</param>
            <param name="value">The value.</param>
            <param name="xmlConvertion">if set to <c>true</c> [XML convertion].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.GetErrorLog(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError[])">
            <summary>
            Gets the error log.
            </summary>
            <param name="errors">The errors.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.ErrorType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.ErrorDescr">
            <summary>
            Gets or sets the error descr.
            </summary>
            <value>The error descr.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.Row">
            <summary>
            Gets or sets the row.
            </summary>
            <value>The row.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.Table">
            <summary>
            Gets or sets the table.
            </summary>
            <value>The table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingError.Exception">
            <summary>
            Gets or sets the exception.
            </summary>
            <value>The exception.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingErrorCollection">
            <summary>
            Represents mapping error collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingErrorCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingErrorCollection"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule">
            <summary>
            
            </summary>
            
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.CreateCopyValue(System.String,System.String)">
            <summary>
            Creates the copy value.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.CreateDefaultValue(System.String,System.String)">
            <summary>
            Creates the default value.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.CreateReference(System.String,System.String,System.String)">
            <summary>
            Creates the reference.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="relationTo">The relation to.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule"/> class.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.#ctor(Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRuleType,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="columnName">Name of the column.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <param name="relationTo">The relation to.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.RelationTo">
            <summary>
            Gets or sets the relation to.
            </summary>
            <value>The relation to.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MappingRule.RuleType">
            <summary>
            Gets the type of the rule.
            </summary>
            <value>The type of the rule.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MetaObjectData">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.MetaObjectData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.MetaObjectData"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MetaObjectData.PrimaryKey">
            <summary>
            Gets or sets the primary key.
            </summary>
            <value>The primary key.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MetaObjectData.ColumnData">
            <summary>
            Gets the map column data.
            </summary>
            <value>The map column data.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.Mapping.MetaObjectData.MetaFieldData">
            <summary>
            Gets the map meta field data.
            </summary>
            <value>The map meta field data.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.PrimaryKeyCollection">
            <summary>
            Represents primary key collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.PrimaryKeyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.PrimaryKeyCollection"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.RelationSourceValue">
            <summary>
            Represents relation source value.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.RelationSourceValue.Initialize(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified param.
            </summary>
            <param name="param">The param.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.RelationSourceValue.GetValue(System.Data.DataRow,System.Data.DataColumn,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Business.Mapping.MappedObject})">
            <summary>
            Gets the value.
            </summary>
            <param name="row">The row.</param>
            <param name="column">The column.</param>
            <param name="mappedObjectList">The mapped object list.</param>
            <returns></returns>
            <remarks> mappedObjectList is already created object</remarks>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.Mapping.Type2McDataType">
            <summary>
            Represents Clr type to Meta Field Data type convertor.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.Type2McDataType.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.Business.Mapping.Type2McDataType"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.Mapping.Type2McDataType.ConvertType2McDataType(Mediachase.BusinessFoundation.Data.Meta.Management.McDataType,System.Object)">
            <summary>
            Converts the type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler">
            <summary>
            Represents entity object default request handler.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostExecuteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostExecute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreInitializeEntity(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreInitializeEntityInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InitializeEntity(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostInitializeEntityInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostInitializeEntity(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreCreate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreCreateInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.Create(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostCreateInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostCreate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreUpdate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreUpdateInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.Update(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostUpdateInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostUpdate(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreDelete(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreDeleteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.Delete(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostDeleteInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostDelete(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreLoad(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreLoadInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.Load(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostLoadInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostLoad(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreList(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreListInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.List(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostListInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostList(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreImport(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreImportInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.Import(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostImportInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostImport(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreInitializeMappingDocument(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreInitializeMappingDocumentInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InitializeMappingDocument(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostInitializeMappingDocumentInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostInitializeMappingDocument(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreCustomMethod(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes before the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PreCustomMethodInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and before the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.CustomMethod(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostCustomMethodInsideTransaction(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes inside transaction and after the main system operation.
            </summary>
            <param name="context">The context.</param>
            <remarks>For internal use only.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.PostCustomMethod(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes after the main system operation.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.CreateEntityObject(System.String,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId})">
            <summary>
            Creates the entity object.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.CopyMetaObjectToEntityObject(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Copies the meta object properties to entity object properties.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="entityObject">The entity object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.CopyEntityObjectToMetaObject(Mediachase.BusinessFoundation.Data.Business.EntityObject,Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Copies the entity to meta object.
            </summary>
            <param name="target">The target.</param>
            <param name="metaObject">The meta object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InnerFindCopyValueRuleItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InnerFindCopyValueRuleItem"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InnerFindCopyValueRuleItem.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InnerFindCopyValueRuleItem"/> class.
            </summary>
            <param name="metaFieldName">Name of the meta field.</param>
            <param name="weight">The weight.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InnerFindCopyValueRuleItem.MetaFieldName">
            <summary>
            Gets or sets the name of the meta field.
            </summary>
            <value>The name of the meta field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.EntityObjectDefaultRequestHandler.InnerFindCopyValueRuleItem.Weight">
            <summary>
            Gets or sets the weight.
            </summary>
            <value>The weight.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection">
            <summary>
            Represents property element collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.AddRange(Mediachase.BusinessFoundation.Data.Business.PropertyElement[])">
            <summary>
            Adds the range.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.GetValue``1(System.String)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.PropertyElementCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.RequestParameter">
            <summary>
            Represents request parameter.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.RequestParameter"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.RequestParameter"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.RequestParameter.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.RequestParameter.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.AddRange(Mediachase.BusinessFoundation.Data.Business.RequestParameter[])">
            <summary>
            Adds the range.
            </summary>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.GetValue``1(System.String)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Business.RequestParameterCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Business.UpdateRequest">
            <summary>
            Represents update object request.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.UpdateRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.UpdateRequest"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Business.UpdateRequest.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Business.UpdateRequest"/> class.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.CardFieldValidator">
            <summary>
            Represents card field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.CardFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.CardFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.CardFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.CardFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.AndBlockFilterElement">
            <summary>
            Represents and block filter element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AndBlockFilterElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FilterOrBlock"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.AndBlockFilterElement.#ctor(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:FilterOrBlock"/> class.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.AndBlockFilterElement.ChildElements">
            <summary>
            Gets the child elements.
            </summary>
            <value>The child elements.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GroupItemCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement)">
            <summary>
            Adds the internal.
            </summary>
            <param name="Item">The Item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.AddRange(Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection)">
            <summary>
            Adds the range.
            </summary>
            <param name="Items">The items.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="Item">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement)">
            <summary>
            Indexes the of.
            </summary>
            <param name="Item">The Item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement)">
            <summary>
            Determines whether [contains] [the specified Item].
            </summary>
            <param name="Item">The Item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified Item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.GetByFieldName(System.String)">
            <summary>
            Gets the name of the by field.
            </summary>
            <param name="FieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:GroupItem"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElementCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection">
            <summary>
            Represents collection of meta class data source condition.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassDataSourceConditionCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.Insert(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="condition">The condition.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition)">
            <summary>
            Adds the internal.
            </summary>
            <param name="condition">The condition.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection)">
            <summary>
            Adds the specified conditions.
            </summary>
            <param name="conditions">The conditions.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="condition">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition)">
            <summary>
            Indexes the of.
            </summary>
            <param name="condition">The condition.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition)">
            <summary>
            Determines whether [contains] [the specified condition].
            </summary>
            <param name="condition">The condition.</param>
            <returns>
            	<c>true</c> if [contains] [the specified condition]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceConditionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaClassDataSourceCondition"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassExtensions">
            <summary>
            Extensions for meta classes
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassExtensions.AddPermissions(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Adds list, view, delete, create, and edit permissions to class for administrators role.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException">
            <summary>
            The exception that is thrown when the field name has a dot in it.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaException">
            <summary>
            Represents errors that occur during Mediachase Ibn Data execution.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldNameWithNonAlphanumericException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection">
            <summary>
            Represents collection of meta field type views.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TypeViewCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView)">
            <summary>
            Adds the internal.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection)">
            <summary>
            Adds the specified views.
            </summary>
            <param name="views">The views.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="view">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView)">
            <summary>
            Indexes the of.
            </summary>
            <param name="view">The view.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView)">
            <summary>
            Determines whether [contains] [the specified view].
            </summary>
            <param name="view">The view.</param>
            <returns>
            	<c>true</c> if [contains] [the specified view]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:TypeView"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeViewCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:TypeView"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileRow">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil">
            <summary>
            Represents property value util.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.ConvertToString(System.String,System.String,System.Object)">
            <summary>
            Converts to string.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="objValue">The obj value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.ConvertToString(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.Object)">
            <summary>
            Converts to string.
            </summary>
            <param name="field">The field.</param>
            <param name="objValue">The obj value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.ConvertToObject(System.String,System.String,System.String)">
            <summary>
            Converts to object.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="fieldName">Name of the field.</param>
            <param name="strValue">The STR value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.ConvertToObject(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Converts to object.
            </summary>
            <param name="field">The field.</param>
            <param name="strValue">The STR value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.GetXmlQualifiedName(System.String,System.String)">
            <summary>
            Gets the name of the XML qualified.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.GetXmlQualifiedName(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Gets the name of the XML qualified.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.GetClrType(System.String,System.String)">
            <summary>
            Gets the name of the XML qualified.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.PropertyValueUtil.GetClrType(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Gets the name of the XML qualified.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection">
            <summary>
            Represents schema element collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection.#ctor(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection.ClearItems">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection.InsertItem(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"/>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is equal to or greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection.SetItem(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension">
            <summary>
            Represens base class for meta object extension.
            </summary>
            <remarks>
            The BaseMetaObjectExtension class implements IMetaObjectExtension and provides utility methods.
            </remarks>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectExtension">
            <summary>
            Allows access to the meta object extension
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectExtension.Init(Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo,Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Inits the service.
            </summary>
            <param name="extensionInfo">The extension info.</param>
            <param name="owner">The owner object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectExtension.PreSave">
            <summary>
            Informs service before save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectExtension.Save">
            <summary>
            Informs service after save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectExtension.Delete">
            <summary>
            Informs service after delete object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectExtension.Clone(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Clones the specified dest object.
            </summary>
            <param name="destObject">The destination object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Init(Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo,Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Inits services.
            </summary>
            <param name="info">The meta object information.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.PreSave">
            <summary>
            Informs service before save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Save">
            <summary>
            Informs service after save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Delete">
            <summary>
            Informs service after delete object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Clone(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Clones the specified dest object.
            </summary>
            <param name="destObject">The destination object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Dispose(System.Boolean)">
            <summary>
            Disposes the specified free managed resources.
            </summary>
            <param name="freeManagedResources">if set to <c>true</c> [free managed resources].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectExtension#Init(Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo,Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Inits services.
            </summary>
            <param name="info">The meta object information.</param>
            <param name="owner">The owner meta object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectExtension#PreSave">
            <summary>
            Informs service before save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectExtension#Save">
            <summary>
            Informs service after save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectExtension#Delete">
            <summary>
            Informs service after delete object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectExtension#Clone(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Clones the specified dest object.
            </summary>
            <param name="destObject">The destination object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Mediachase#BusinessFoundation#Data#IChangeTracking#AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.ExtensionInfo">
            <summary>
            Gets or sets the extension info.
            </summary>
            <value>The extension info.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.BaseMetaObjectExtension.Mediachase#BusinessFoundation#Data#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.HistoryExtension"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryExtension.Delete">
            <summary>
            Informs service after delete object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryExtension.PreSave">
            <summary>
            Informs service before save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryExtension.CheckModiedField">
            <summary>
            Checks the modied field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryExtension.OnCopyObjectToHistory">
            <summary>
            Copies the object to history.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryExtension.CopyObjectToHistory">
            <summary>
            Saves the version.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.HistoryManager">
            <summary>
            Represents history module.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.CreateModuleManifest">
            <summary>
            Creates the module manifest.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.GetHistoryMetaClassName(System.String)">
            <summary>
            Gets the name of the history meta class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.GetHistoryMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the history meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.MetaClassIsHistory(System.String)">
            <summary>
            Metas the class is history.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.MetaClassIsHistory(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Metas the class is history.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.GetOriginalMetaClassName(System.String)">
            <summary>
            Gets the name of the history meta class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.GetOriginalMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the history meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.IsSupportedField(System.String,System.String)">
            <summary>
            Determines whether [is supported field] [the specified meta class name].
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="metaFieldName">Name of the meta field.</param>
            <returns>
            	<c>true</c> if [is supported field] [the specified meta class name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.IsSupportedField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Supports the history.
            </summary>
            <param name="srcMetaField">The SRC meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.GetSelectedFields(System.String)">
            <summary>
            Gets the selected fields.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.GetSelectedFields(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the selected fields.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.SetSelectedFields(System.String,System.String[])">
            <summary>
            Sets the selected fields.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="selectedFieldNames">The selected field names.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryManager.SetSelectedFields(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String[])">
            <summary>
            Sets the selected fields.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="selectedFieldNames">The selected field names.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator">
            <summary>
            Allows access to the module manager
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.Install(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Installs this instance.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.Uninstall">
            <summary>
            Uninstalls this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.Activate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Activates the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.Deactivate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Deactivates the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.GetSupportedMethods">
            <summary>
            Gets the supported methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleConfigurator.GetSchemaElementHandler">
            <summary>
            Gets the schema element handler.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler">
            <summary>
            Defines the contract that Mediachase.BusinessFoundation.Data implements to work with Schema elements.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.GetAvailableElements(System.String[],System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AccessLevel)">
            <summary>
            Gets the available items for specific container.
            </summary>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
            <param name="outputLevel">The output level.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.BeforeWriteElements(System.Xml.XmlWriter,System.String[],System.String)">
            <summary>
            Befores the write elements.
            </summary>
            <param name="writer">The writer.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.WriteStartElement(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the start element.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.WriteElementProperties(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the element properties.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.WriteEndElement(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the end element.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.AfterWriteElements(System.Xml.XmlWriter,System.String[],System.String)">
            <summary>
            Befores the write elements.
            </summary>
            <param name="writer">The writer.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.ExecuteCommand(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Applies the add command.
            </summary>
            <param name="cmd">The sync command.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.ISchemaElementHandler.GetSyncCommandOrderId(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Gets the sync command order id.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleSchemaElementHandler.InitializeGlobalStorage(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Initializes the global storage.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.IModuleSchemaElementHandler.InitializeMetaClassStorage(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Initializes the meta class storage.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.MetaClassManager_MetaFieldCreated(System.Object,Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs)">
            <summary>
            Handles the MetaFieldCreated event of the MetaClassManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.MetaClassManager_MetaFieldDeleting(System.Object,Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs)">
            <summary>
            Handles the MetaFieldDeleting event of the MetaClassManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.Install(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Installs this instance.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.Uninstall">
            <summary>
            Uninstalls this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.Activate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Activates the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.Deactivate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Deactivates the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.GetSupportedMethods">
            <summary>
            Gets the supported methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.HistoryModuleConfigurator.GetSchemaElementHandler">
            <summary>
            Gets the schema element handler.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.CreateModuleManifest">
            <summary>
            Creates the module manifest.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetInstalledLanguages">
            <summary>
            Gets the installed languages.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetLanguageCultureInfo(System.String)">
            <summary>
            Gets the language culture info.
            </summary>
            <param name="cultureInfoName">Name of the culture info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetInstalledLanguageCultureInfos">
            <summary>
            Gets the array of installed language culture information.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.CheckLanguageName(System.String)">
            <summary>
            Checks the name of the language.
            </summary>
            <param name="languageName">Name of the language.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.InstallLanguage(System.String)">
            <summary>
            Installs the language.
            </summary>
            <param name="cultureInfoName">Name of the culture info.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.UninstallLanguage(System.String)">
            <summary>
            Uninstalls the language.
            </summary>
            <param name="cultureInfoName">Name of the culture info.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetLocalizableFields(System.String)">
            <summary>
            Gets the localizable fields.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetLocalizableFields(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the localizable fields.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.IsFieldLocalizable(System.String,System.String)">
            <summary>
            Determines whether [is field localizable] [the specified meta class].
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="metaField">The meta field.</param>
            <returns>
            	<c>true</c> if [is field localizable] [the specified meta class]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.IsFieldLocalizable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Determines whether [is field localizable] [the specified meta field].
            </summary>
            <param name="metaField">The meta field.</param>
            <returns>
            	<c>true</c> if [is field localizable] [the specified meta field]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.ActivateFieldLocalization(System.String,System.String)">
            <summary>
            Activates the field localization.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="metaField">The meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.ActivateFieldLocalization(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Activates the field localization.
            </summary>
            <param name="metaField">The meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.DeactivateFieldLocalization(System.String,System.String)">
            <summary>
            Deactivates the field localization.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="metaField">The meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.DeactivateFieldLocalization(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Deactivates the field localization.
            </summary>
            <param name="metaField">The meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.InnerActivateLanguageByMetaField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Inners the activate language by meta field.
            </summary>
            <param name="field">The field.</param>
            <param name="cultureInfoName">Name of the culture info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.InnerDeactivateLanguageByMetaField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Inners the deactivate language by meta field.
            </summary>
            <param name="field">The field.</param>
            <param name="cultureInfoName">Name of the culture info.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetLanguageFieldName(System.String,System.String)">
            <summary>
            Gets the name of the language field.
            </summary>
            <param name="cultureInfoName">Name of the culture info.</param>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetLanguageFieldName(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the name of the language field.
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetLanguageSuffix(System.String)">
            <summary>
            Gets the language suffix.
            </summary>
            <param name="cultureInfoName">Name of the culture info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.GetLanguageSuffix(System.Globalization.CultureInfo)">
            <summary>
            Gets the language suffix.
            </summary>
            <param name="cultureInfo">The culture info.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.CopyLocalizableToNeutral(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Copies propertie value from the localizable to neutral.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.CopyNeutralToLocalizable(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Copies propertie value from the neutral to localizable.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.LocalizationManager.CurrentCulture">
            <summary>
            Gets or sets the current culture.
            </summary>
            <value>The current culture.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.LocalizationModuleConfigurator">
            <summary>
            Represents localization module configurator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationModuleConfigurator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.LocalizationModuleConfigurator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationModuleConfigurator.GetSupportedMethods">
            <summary>
            Gets the supported methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleSchemaElementHandler#InitializeGlobalStorage(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Initializes the global storage.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleSchemaElementHandler#InitializeMetaClassStorage(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Initializes the meta class storage.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.LocalizationPlugin">
            <summary>
            Represents localization plugin.
            </summary>
            <remarks>
            Should be added in PostMainOperationInsideTranasaction Stage for Load and List methods.
            Should be added in PreMainOperationInsideTranasaction Stage for Updatemethod.
            
            <b>Note:</b> Reference title field not localizable yet (ToDo).
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationPlugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.LocalizationPlugin"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationPlugin.Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.LocalizationPlugin.Mediachase#BusinessFoundation#Data#Business#IPlugin#Execute(Mediachase.BusinessFoundation.Data.Business.BusinessContext)">
            <summary>
            Executes the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.PrimaryKeyIdValueType">
            <summary>
            Represents primary key id value type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.PrimaryKeyIdValueType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.PrimaryKeyIdValueType.Integer">
            <summary>
            Defines Primary key id value is Integer
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.PrimaryKeyIdValueType.Guid">
            <summary>
            Defines Primary key id value is Guid
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.ModuleDataStorageId">
            <summary>
            Provides functionality for receiving Module Data Storage name by id and id by name.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.ModuleDataStorageId.GetName(System.Int32)">
            <summary>
            Gets the name of the class.
            </summary>
            <param name="Id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.ModuleDataStorageId.GetId(System.String)">
            <summary>
            Gets the id.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.ModuleDataStorageId.GetIds">
            <summary>
            Gets the meta class ids.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.ModuleDataStorageId.GetNames">
            <summary>
            Gets the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectExtensionEventArgs">
            <summary>
            Provides data for the  meta object extension event args event.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectExtensionEventArgs.#ctor(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectExtensionEventArgs"/> class.
            </summary>
            <param name="ownerObject">The owner object.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectExtensionEventArgs.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>The object.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension">
            <summary>
            Represents change detection extension.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.PreSave">
            <summary>
            Informs service before save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.Save">
            <summary>
            Informs service after save object.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.RaiseObjectModifying">
            <summary>
            Raises the object modifying.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.RaiseObjectModified">
            <summary>
            Raises the object modified.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.ModificationDetected">
            <summary>
            Gets or sets a value indicating whether [modification detected].
            </summary>
            <value><c>true</c> if [modification detected]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.Created">
            <summary>
            Gets or sets the created.
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.Modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>The modified.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.CreatorId">
            <summary>
            Gets or sets the creator.
            </summary>
            <value>The creator.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingExtension.ModifierId">
            <summary>
            Gets or sets the modifier.
            </summary>
            <value>The modifier.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingManager">
            <summary>
            Represents change tracking manager.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingManager.CreateModuleManifest">
            <summary>
            Creates the module manifest.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator">
            <summary>
            Represents change detection module configurator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#Install(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Installs this instance.
            </summary>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#Uninstall">
            <summary>
            Uninstalls this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#Activate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Activates the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetUserType">
            <summary>
            Gets the type of the user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetCreatorFriendlyName">
            <summary>
            Gets the name of the creator friendly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetModifierFriendlyName">
            <summary>
            Gets the name of the modifier friendly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetCreatedFriendlyName">
            <summary>
            Gets the name of the created friendly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetModifiedFriendlyName">
            <summary>
            Gets the name of the modified friendly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#Deactivate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Deactivates the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetSupportedMethods">
            <summary>
            Gets the supported methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.Mediachase#BusinessFoundation#Data#Modules#IModuleConfigurator#GetSchemaElementHandler">
            <summary>
            Gets the schema element handler.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.InitializeGlobalStorage(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Initializes the global storage.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.InitializeMetaClassStorage(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Initializes the meta class storage.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetAvailableElements(System.String[],System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AccessLevel)">
            <summary>
            Gets the available items for specific container.
            </summary>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
            <param name="outputLevel">The output level.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.BeforeWriteElements(System.Xml.XmlWriter,System.String[],System.String)">
            <summary>
            Befores the write elements.
            </summary>
            <param name="writer">The writer.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.WriteStartElement(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the start element.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.WriteElementProperties(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the element properties.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.WriteEndElement(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the end element.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.AfterWriteElements(System.Xml.XmlWriter,System.String[],System.String)">
            <summary>
            Befores the write elements.
            </summary>
            <param name="writer">The writer.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.ExecuteCommand(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Applies the add command.
            </summary>
            <param name="cmd">The sync command.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ChangeTrackingModuleConfigurator.GetSyncCommandOrderId(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Gets the sync command order id.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ModuleManifestCollection">
            <summary>
            Represents module data storage collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManifestCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ModuleManifestCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManifestCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManifestCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifestCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependencyCollection">
            <summary>
            Represents manifest module dependencies.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependencyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependencyCollection"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependency">
            <summary>
            Represents manifest module dependency.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependency"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependency.ModuleName">
            <summary>
            Gets or sets the name of the module.
            </summary>
            <value>The name of the module.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ManifestModuleDependency.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ManifestVersionDescription">
            <summary>
            Represents manifest framework description.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ManifestVersionDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ManifestVersionDescription"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DecimalFieldValidator">
            <summary>
            Represents decimal field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DecimalFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DecimalFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DecimalFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DecimalFieldValidator.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DecimalFieldValidator.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DecimalFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DaylightLimit">
            <summary>
            Represents the standard Windows SYSTEMTIME structure which
            is used when defining limits of daylight saving time periods.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DaylightLimit.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DaylightLimit"/> struct.
            </summary>
            <param name="month">The month.</param>
            <param name="dayOfWeek">The day of week.</param>
            <param name="day">The day.</param>
            <param name="hour">The hour.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DaylightLimit.Enabled">
            <summary>
            Indicates whether the daylight time limit
            represents an applicable DST change. Returns True if Month is greater than Zero.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.MetaModelLoadEventArgs">
            <summary>
            Provides data for the Meta model load event.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.MetaModelLoadEventArgs.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.MetaModelLoadEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.MetaModelLoadEventArgs.MetaModel">
            <summary>
            Gets the meta model.
            </summary>
            <value>The meta model.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.CollectionChangeType">
            <summary>
            Specifies collection change type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.CollectionChangeType.Added">
            <summary>
            Added
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.CollectionChangeType.Removed">
            <summary>
            Removed
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.CollectionChangeType.Replaced">
            <summary>
            Replaced
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.CollectionChangeType.Cleared">
            <summary>
            Cleared
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs`1">
            <summary>
            Represents collection with change tracking event arguments.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs`1.#ctor(Mediachase.BusinessFoundation.Data.CollectionChangeType,`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs`1"/> class.
            </summary>
            <param name="change">The change.</param>
            <param name="item">The item.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs`1.ChangeType">
            <summary>
            Gets or sets the type of the change.
            </summary>
            <value>The type of the change.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs`1.ChangedItem">
            <summary>
            Gets or sets the changed item.
            </summary>
            <value>The changed item.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.CollectionChangedEventArgs`1.ReplacedWith">
            <summary>
            Gets or sets the replaced with.
            </summary>
            <value>The replaced with.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Configuration.MediachaseDataSectionGroup">
            <summary>
            Represents a grouping of related medichase.ibn.data component settings sections within a configuration file. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Configuration.MediachaseDataSectionGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Configuration.MediachaseDataSectionGroup"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Configuration.MediachaseDataSectionGroup.MetaClassManager">
            <summary>
            Gets the meta class manager.
            </summary>
            <value>The meta class manager.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Configuration.MediachaseDataSectionGroup.MetaObject">
            <summary>
            Gets the meta object activator.
            </summary>
            <value>The meta object activator.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DataContextCache">
            <summary>
            Represents Data Context Cache.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DataContextCache"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.RemoveExpired">
            <summary>
            Removes the expired.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.Get(System.String)">
            <summary>
            Gets the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.Insert(System.String,System.Object)">
            <summary>
            Inserts the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.Insert(System.String,System.Object,System.DateTime)">
            <summary>
            Inserts the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.Add(System.String,System.Object,System.DateTime)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCache.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextCache.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextCache.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DataContextCacheItem">
            <summary>
            Represents Data Context Cache Item.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCacheItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DataContextCacheItem"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCacheItem.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DataContextCacheItem"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextCacheItem.#ctor(System.Object,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DataContextCacheItem"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextCacheItem.Created">
            <summary>
            Gets the created.
            </summary>
            <value>The created.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextCacheItem.Object">
            <summary>
            Gets or sets the object.
            </summary>
            <value>The object.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextCacheItem.AbsoluteExpiration">
            <summary>
            Gets or sets the absolute expiration.
            </summary>
            <value>The absolute expiration.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextCacheItem.IsExpired">
            <summary>
            Gets a value indicating whether this instance is expired.
            </summary>
            <value>
            	<c>true</c> if this instance is expired; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DataContextSwitcher">
            <summary>
            Represents data context switcher.
            </summary>
            <remarks>
            DataContextSwitcher allows to return to previous data context automatically.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextSwitcher.#ctor(Mediachase.BusinessFoundation.Data.DataContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DataContextSwitcher"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextSwitcher.RestoreContext">
            <summary>
            Restores the context.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextSwitcher.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContextSwitcher.Dispose(System.Boolean)">
            <summary>
            Disposes the specified disposing.
            </summary>
            <param name="disposing">if set to <c>true</c> [disposing].</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextSwitcher.PreviousContext">
            <summary>
            Gets the previous context.
            </summary>
            <value>The previous context.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContextSwitcher.CurrentContext">
            <summary>
            Gets the current context.
            </summary>
            <value>The current context.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.CurrencyFieldValidator">
            <summary>
            Represents currency field validator.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DataContextMode">
            <summary>
            Specifies data context mode.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.DataContextMode.Sql">
            <summary>
            Sql
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.DataContextMode.DataSet">
            <summary>
            Dataset (Not implemented yet)
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DataContext">
            <summary>
            Provides meta data entry point.
            </summary>
            <remarks>
            You should initialize <see cref="P:Mediachase.BusinessFoundation.Data.DataContext.Current"/> in current thread to start Mediachase Ibn Data.
            </remarks>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.DataContext.SystemUser">
            <summary>
            Defines system user constant.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.RaiseMetaModelLoaded(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager)">
            <summary>
            Raises the meta model loaded.
            </summary>
            <param name="metaModel">The meta model.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.DataContext"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DataContext"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.InitMetaModel">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.RegisterResetMetaModelCallback(Mediachase.BusinessFoundation.Data.TransactionScope)">
            <summary>
            Registers the reset meta model callback.
            </summary>
            <param name="scope">The scope.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.SaveMetaModel">
            <summary>
            Saves the meta class manager.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.FromConfig">
            <summary>
            Froms the config.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.Switch(Mediachase.BusinessFoundation.Data.DataContext)">
            <summary>
            Switches the specified new context.
            </summary>
            <param name="newContext">The new context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.GetMetaClass(System.String)">
            <summary>
            Gets the meta class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.GetMetaView(System.String)">
            <summary>
            Gets the meta view.
            </summary>
            <param name="metaViewName">Name of the meta view.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.GetMetaFieldType(System.String)">
            <summary>
            Gets the type of the meta field.
            </summary>
            <param name="metaFieldTypeName">Name of the meta field type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataContext.GetModuleDataStorage(System.String)">
            <summary>
            Gets the module data storage.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <returns></returns>
        </member>
        <member name="E:Mediachase.BusinessFoundation.Data.DataContext.MetaModelLoad">
            <summary>
            Occurs when meta model is loaded.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.Current">
            <summary>
            Gets or sets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.MetaModel">
            <summary>
            Gets the meta class manager.
            </summary>
            <value>The meta class manager.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.SqlContext">
            <summary>
            Gets the SQL context.
            </summary>
            <value>The SQL context.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.Cache">
            <summary>
            Gets or sets the cache.
            </summary>
            <value>The cache.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified attribute key.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.CurrentUserId">
            <summary>
            Gets or sets the current user id.
            </summary>
            <value>The current user id.</value>
            <remarks>DataContext.SystemUser is default value.</remarks>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataContext.CurrentUserTimeZone">
            <summary>
            Gets or sets the current user time zone.
            </summary>
            <value>The current user time zone.</value>
            <remarks> System.TimeZone.CurrentTimeZone is default value. 
            You can use Mediachase.BusinessFoundation.Data.UserTimeZone to create custom time zone.
            </remarks>
            
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DataHelper">
            <summary>
            Provides access to database data.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.FindParam(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Finds the param.
            </summary>
            <param name="paramName">Name of the param.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String,System.Int32,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="maxCount">The max count.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,System.Int32,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="maxCount">The max count.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String,System.Int32)">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="maxCount">The max count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String)">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,System.Int32)">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="maxCount">The max count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String,System.Int32,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="maxCount">The max count.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,System.Int32,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="maxCount">The max count.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String,System.Int32,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="maxCount">The max count.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(System.String,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,System.Int32,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="maxCount">The max count.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified table config.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetDataTable(System.String)">
            <summary>
            Gets the data table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetDataTable(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Gets the data table.
            </summary>
            <param name="tableConfig">The table config.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetDataTable(System.String,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the data table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetDataTable(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the data table.
            </summary>
            <param name="tableConfig">The table config.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.Select(System.String,System.String,System.Int32)">
            <summary>
            Selects the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="keyName">Name of the key.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.Select(System.String,System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Selects the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="keyName">Name of the key.</param>
            <param name="dbType">Type of the db.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.Update(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Updates the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.Insert(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Inserts the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="keyName">Name of the key.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.Insert(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Inserts the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.Delete(System.String,System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Deletes the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="keyName">Name of the key.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.Delete(System.String,System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Deletes the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="keyName">Name of the key.</param>
            <param name="dbType">Type of the db.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetTotalCount(System.String,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the total count.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetTempSPExpirationDate">
            <summary>
            Gets the sp item expiration date.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetTempSPInsertName(Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder)">
            <summary>
            Gets the name of the temp sp insert.
            </summary>
            <param name="sb">The sb.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetTempSPUpdateName(Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder)">
            <summary>
            Gets the name of the temp sp update.
            </summary>
            <param name="sb">The sb.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetTempSPDeleteName(Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder)">
            <summary>
            Gets the name of the temp stporage procedure delete.
            </summary>
            <param name="sb">The sb.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetTempSPListName(Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder)">
            <summary>
            Gets the name of the temp sp list.
            </summary>
            <param name="sb">The sb.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.GetTempSPListName(System.String,System.Int32)">
            <summary>
            Gets the name of the temp sp list.
            </summary>
            <param name="primaryTableName">Name of the primary table.</param>
            <param name="scriptHashCode">The script hash code.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.CheckTempSP(System.String,System.String)">
            <summary>
            Checks the temp sp.
            </summary>
            <param name="tempSPName">Name of the temp sp.</param>
            <param name="tempSPCreateScript">The temp sp create script.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.RemoveTempSP(System.String)">
            <summary>
            Removes the temp sp.
            </summary>
            <param name="tempSPName">Name of the temp sp.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.CleanUpTempSP">
            <summary>
            Cleans up temp sp.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.CleanUpTempSP(System.DateTime)">
            <summary>
            Cleans up temp sp.
            </summary>
            <param name="expirationDate">The expiration date.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DataHelper.OnTransactionCompleted(System.Boolean,System.Object)">
            <summary>
            Called when [transaction completed].
            </summary>
            <param name="isSuccessful">if set to <c>true</c> [is successful].</param>
            <param name="tempSPName">Name of the temp sp.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataHelper.UseSPOptimization">
            <summary>
            Gets or sets a value indicating whether [use sp mode].
            </summary>
            <value><c>true</c> if [use sp mode]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DataHelper.TempSPExpiration">
            <summary>
            Gets or sets the sp item expiration.
            </summary>
            <value>The sp item expiration.</value>
            <remarks>Default value is 20160 minutes (14 days).</remarks>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DateTimeFieldValidator">
            <summary>
            Represents date time field validator.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DoubleFieldValidator">
            <summary>
            Represents double field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DoubleFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DoubleFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DoubleFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DoubleFieldValidator.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DoubleFieldValidator.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.DoubleFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.EnumFieldValidator">
            <summary>
            Represents enum field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.EnumFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.EnumFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.EnumFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.EnumFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.EnumFieldValidator.EnumTypeName">
            <summary>
            Gets or sets the name of the enum type.
            </summary>
            <value>The name of the enum type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.EnumFieldValidator.IsMultivalue">
            <summary>
            Gets or sets a value indicating whether this instance is multivalue.
            </summary>
            <value>
            	<c>true</c> if this instance is multivalue; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.FileFieldValidator">
            <summary>
            Represent file field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FileFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.FileFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FileFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FileFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.FileFieldValidator.ValidationExpression">
            <summary>
            Gets or sets the validation expression.
            </summary>
            <value>The validation expression.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.FilterElementCollection">
            <summary>
            Represents collection of filter elements.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FilterElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.Add(Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.#ctor(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:FilterElementCollection"/> class.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.AddRange(Mediachase.BusinessFoundation.Data.FilterElementCollection)">
            <summary>
            Adds the range.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.Remove(System.Guid)">
            <summary>
            Removes the specified uid.
            </summary>
            <param name="Uid">The uid.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.Remove(System.Guid,System.Boolean)">
            <summary>
            Removes the specified uid.
            </summary>
            <param name="filrerElementUid">The filrer element uid.</param>
            <param name="deep">if set to <c>true</c> [deep].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.AddRange(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Adds the range.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.ToArray">
            <summary>
            Copies the FilterElement objects from the collection to a new array. 
            </summary>
            <returns>A new array containing the FilterElement objects copied from the FilterElementCollection.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.Find(System.Guid)">
            <summary>
            Finds the specified uid.
            </summary>
            <param name="filterElementUid">The filter element uid.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.GetBySource(System.String)">
            <summary>
            Gets the by source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.GetListBySource(System.String)">
            <summary>
            Gets the list by source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.FilterElementCollection.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.FilterElementType">
            <summary>
            Specifies filter element type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Abstract">
            <summary>
            Abstract
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Equal">
            <summary>
            Equal
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.NotEqual">
            <summary>
            NotEqual
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Less">
            <summary>
            Less
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.LessOrEqual">
            <summary>
            LessOrEqual
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Greater">
            <summary>
            Greater
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.GreaterOrEqual">
            <summary>
            GreaterOrEqual
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.IsNull">
            <summary>
            IsNull
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.IsNotNull">
            <summary>
            IsNotNull
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.In">
            <summary>
            In
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.NotIn">
            <summary>
            NotIn
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Like">
            <summary>
            Like
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.NotLike">
            <summary>
            NotLike
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Between">
            <summary>
            Between
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Exists">
            <summary>
            Exists
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.NotExists">
            <summary>
            NotExists
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.OrBlock">
            <summary>
            OrBlock
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.AndBlock">
            <summary>
            AndBlock
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.Contains">
            <summary>
            Contains
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.NotContains">
            <summary>
            NotContains
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.StartsWith">
            <summary>
            StartsWith
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.NotStartsWith">
            <summary>
            NotStartsWith
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.EndsWith">
            <summary>
            EndsWith
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.FilterElementType.NotEndsWith">
            <summary>
            NotEndsWith
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.GuidFieldValidator">
            <summary>
            Represents GUID field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.GuidFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.GuidFieldValidator"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.GuidFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.IDataSetLoader">
            <summary>
            Allows access to the data set loader.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IDataSetLoader.Load(System.Data.DataSet)">
            <summary>
            Loads the specified data set.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.IdentifierFieldValidator">
            <summary>
            Represents identifier field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IdentifierFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdentifierFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IdentifierFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IdentifierFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.McXmlSerializer">
            <summary>
            Provides XML serializer utility methods.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObject(System.String,System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObject(System.Type,System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObject(System.Type,System.String,System.Type[])">
            <summary>
            Gets the object.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <param name="extraTypes">The extra types.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObject``1(System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObject``2(System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObject``1(System.String,System.Type[])">
            <summary>
            Gets the object.
            </summary>
            <param name="value">The value.</param>
            <param name="extraTypes">The extra types.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObjectFromFile``1(System.String)">
            <summary>
            Gets the object from file.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetObjectFromFile``1(System.String,System.Type[])">
            <summary>
            Gets the object from file.
            </summary>
            <param name="path">The path.</param>
            <param name="extraTypes">The extra types.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetString(System.Type,System.Object)">
            <summary>
            Gets the string.
            </summary>
            <param name="type">The type.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetString``1(``0)">
            <summary>
            Gets the string.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetString``1(``0,System.Type[])">
            <summary>
            Gets the string.
            </summary>
            <param name="value">The value.</param>
            <param name="extraTypes">The extra types.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.GetString``2(``1)">
            <summary>
            Gets the string.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.SaveObjectToFile``1(System.String,``0)">
            <summary>
            Gets the file.
            </summary>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.McXmlSerializer.SaveObjectToFile``1(System.String,``0,System.Type[])">
            <summary>
            Saves the object to file.
            </summary>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <param name="extraTypes">The extra types.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.BatchActivator">
            <summary>
            Represents <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObject"/> batch activator information.
            </summary>
            <remarks>
            The BatchActivator class contains information about meta objects (meta class and primary key).
            Optimizes multi meta object load.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.BatchActivator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.#ctor(System.String,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.BatchActivator"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.BatchActivator"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.AddItem(System.String,System.Int32)">
            <summary>
            Adds the item.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.AddItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Int32)">
            <summary>
            Adds the item.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.AddItems(System.String,System.Int32[])">
            <summary>
            Adds the items.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.AddItems(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Int32[])">
            <summary>
            Adds the items.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.RemoveItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.RemoveAllItems">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.RemoveItems(System.String)">
            <summary>
            Removes the items.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.RemoveItems(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Clears the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.Build">
            <summary>
            Creates the SQL query.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.BatchActivator.Script">
            <summary>
            Gets or sets the script.
            </summary>
            <value>The script.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfoCollection">
            <summary>
            Represents meta object extension info collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfoCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfoCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfoCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo">
            <summary>
            Represents information about business object service.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.#ctor(System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionActivationType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="extensionType">Type of the service.</param>
            <param name="activationType">Type of the installer.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.GetExtension">
            <summary>
            Gets the service.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.GetExtensionType">
            <summary>
            Gets the type of the extension.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.ExtensionType">
            <summary>
            Gets the type of the service.
            </summary>
            <value>The type of the service.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.ActivationType">
            <summary>
            Gets or sets the type of the activation.
            </summary>
            <value>The type of the activation.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionInfo.Attributes">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement">
            <summary>
            Represents registration of custom type installer and binder.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.FilterElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="installer">The installer.</param>
            <param name="binder">The binder.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement.Installer">
            <summary>
            Gets or sets the installer.
            </summary>
            <value>The installer.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement.Binder">
            <summary>
            Gets or sets the binder.
            </summary>
            <value>The binder.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection">
            <summary>
            Represents collection of custom type elements.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="Item">The item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement)">
            <summary>
            Indexes the of.
            </summary>
            <param name="Item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.Remove(System.String)">
            <summary>
            Removes the specified extension.
            </summary>
            <param name="MetaClassName">Name of the meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="Item">The item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.TypeElementCollection.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> of properties for the element.</returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection">
            <summary>
            Represents section of related meta object settings elements within a configuration file. 
            </summary>
            <remarks>
            Contains definition of max returned elements, cache and storage procedure optimization.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> of properties for the element.</returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.Instances">
            <summary>
            Gets the business object services.
            </summary>
            <value>The business object services.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.MaxListObject">
            <summary>
            Gets or sets the max list object.
            </summary>
            <value>The max list object.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.UseCache">
            <summary>
            Gets or sets a value indicating whether [use cache].
            </summary>
            <value><c>true</c> if [use cache]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.CacheItemExpiration">
            <summary>
            Gets or sets the cache item expiration.
            </summary>
            <value>The cache item expiration.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.UseSPOptimization">
            <summary>
            Gets or sets a value indicating whether [use sp optimization].
            </summary>
            <value><c>true</c> if [use sp optimization]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectSection.SPItemExpiration">
            <summary>
            Gets or sets the sp item expiration.
            </summary>
            <value>The sp item expiration.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement">
            <summary>
            Represents registration of typed meta object for specific meta class in configuration file.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.FilterElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement"/> class.
            </summary>
            <param name="MetaClass">The meta class.</param>
            <param name="Type">The type.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement.MetaClass">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection">
            <summary>
            Represents collection of meta object instance elements in configuration file.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="Item">The item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"></see> to return the key for.</param>
            <returns>
            An <see cref="T:System.Object"></see> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement)">
            <summary>
            Indexes the of.
            </summary>
            <param name="Item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.Remove(System.String)">
            <summary>
            Removes the specified extension.
            </summary>
            <param name="MetaClassName">Name of the meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="Item">The item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Configuration.MetaObjectInstanceElementCollection.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> of properties for the element.</returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.DateTimeTemplateSource">
            <summary>
            Represents date time template source.
            </summary>
            <remarks>
            The DateTimeTemplateSource can convert template value strings to real date time. 
            You should register DateTimeTemplateSource class in TemplateResolver.
            Supported constant: Today, TodayStart, Yesterday, YesterdayStart, ThisWeek, ThisWeekStart,
            ThisMonth, ThisMonthStart, LastMonth, LastMonthStart, ThisYear, ThisYearStart, LastYear, LastYearStart,
            TodayEnd, YesterdayEnd, ThisWeekEnd, LastWeekEnd, ThisMonthEnd, ThisYearEnd, LastMonthEnd, ThisYearEnd, LastYearEnd.
            </remarks>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.ITemplateSource">
            <summary>
            Allows access to the value by template key.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ITemplateSource.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DateTimeTemplateSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.DateTimeTemplateSource"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.DateTimeTemplateSource.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory">
            <summary>
            Represents default meta object factory. Realises IMetaObjectFactory interface.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectFactory">
            <summary>
            Defines the mechanism for meta object factory.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectFactory.CanCreate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether this instance can create the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns>
            	<c>true</c> if this instance can create the specified meta class; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectFactory.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectFactory.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectFactory.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.AddInstance(System.String,System.String)">
            <summary>
            Adds the instance.
            </summary>
            <param name="name">The name.</param>
            <param name="typeName">The type name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.AddInstance(System.String,System.Type)">
            <summary>
            Adds the instance.
            </summary>
            <param name="name">The name.</param>
            <param name="instanceType">Type of the instance.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.RemoveInstance(System.String)">
            <summary>
            Removes the instance.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.ClearInstances">
            <summary>
            Clears the instances.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.CanCreate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether this instance can create the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns>
            	<c>true</c> if this instance can create the specified meta class; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectFactory.Instances">
            <summary>
            Gets or sets the instances.
            </summary>
            <value>The instances.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder">
            <summary>
            Represents default meta object property binder.  Realises IMetaObjectPropertyBinder interface.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectPropertyBinder">
            <summary>
            Defines the mechanism for meta object property binder.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectPropertyBinder.PreLoad(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Calls from Pre-load event.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="property">The property.</param>
            <param name="rowSource">The row source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectPropertyBinder.PostLoad(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Calls from Post-load event.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectPropertyBinder.PreSave(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Saves the specified property.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="property">The property.</param>
            <param name="rowSource">The row source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectPropertyBinder.PostSave(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Saves the specified property.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectPropertyBinder.Delete(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Deletes the specified field.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="property">The property.</param>
            <param name="rowSource">The row source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectPropertyBinder.InitTableConfig(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Inits the table config.
            </summary>
            <param name="config">The configuration to use.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DefaultMetaObjectPropertyBinder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.PreLoad(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads the specified meta type.
            </summary>
            <param name="metaObject"></param>
            <param name="property">The property.</param>
            <param name="rowSource">The row source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.LoadIdentifier(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads the identifier.
            </summary>
            <param name="field">The meta field.</param>
            <param name="rowSource">The row source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.LoadFile(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads the file.
            </summary>
            <param name="field">The meta field.</param>
            <param name="rowSource">The row source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.LoadEnum(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads the enum.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.DefaultLoad(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads the string.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.LoadDateTime(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads the date time.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.PreSave(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Saves the specified meta type.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="property">The property.</param>
            <param name="rowSource">The row source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.SaveDateTime(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Saves the date time.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.DeleteCard(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId,System.String)">
            <summary>
            Deletes the card.
            </summary>
            <param name="metaTypeName">Name of the meta type.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <param name="cardMetaTypeName">Name of the card meta type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.SaveLink(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Saves the link.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.SaveCard(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Saves the card.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.SaveIdentifier(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Saves the identifier.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.SaveFile(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Saves the file.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.SaveEnum(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Saves the enum.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.SaveAggregation(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Saves the aggregation.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultMetaObjectPropertyBinder.DefaultSave(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,System.Object)">
            <summary>
            Defaults the save.
            </summary>
            <param name="field">The field.</param>
            <param name="rowSource">The row source.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.DefaultValue">
            <summary>
            Provides evaluating of devault value for system types.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.Evaluate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the default value by Meta Field.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.EvaluateEnum(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the enum.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.EvaluateString(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the string.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.EvaluateInteger(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the integer.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.EvaluateGuid(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the GUID.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.EvaluateDouble(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the double.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.EvaluateDateTime(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the date time.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.DefaultValue.EvaluateCurrency(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Evaluates the currency.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.IAggregatedValue">
            <summary>
            Defines methods to aggregated value modifications.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IAggregatedValue.GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IAggregatedValue.SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectChangeTracking">
            <summary>
            Defines the mechanism for querying the meta object for changes and resetting of the changed status.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectChangeTracking.GetChangedFields">
            <summary>
            Gets the changed fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectChangeTracking.IsFieldChanged(System.String)">
            <summary>
            Determines whether [is field changed] [the specified field name].
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>
            	<c>true</c> if [is field changed] [the specified field name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectChangeTracking.GetOriginalValue(System.String)">
            <summary>
            Gets the original value.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectChangeTracking.PrimaryKeyId">
            <summary>
            Gets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException">
            <summary>
            The exception that is thrown when not one of the named values defined for the meta enumeration.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException.FieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <value>The type of the field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.InvalidEnumValueException.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil">
            <summary>
            Provides functionality for calculating agregation references.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetIsDefaultElementFieldName(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the name of the is default element field.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetContainerReferenceFieldName(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the name of the container reference field.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetContainerReferenceIdFieldName(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the name of the container reference id field.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetElementMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Gets the element meta class.
            </summary>
            <param name="aggregation">The aggregation.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetElements(System.String,System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Gets the elements.
            </summary>
            <param name="containerMetaClassName">Name of the container meta class.</param>
            <param name="aggregationMetaFieldName">Name of the aggregation meta field.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetElements(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Gets the elements.
            </summary>
            <param name="aggregation">The aggregation.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetDefaultElement(System.String,System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Gets the default element.
            </summary>
            <param name="containerMetaClassName">Name of the container meta class.</param>
            <param name="aggregationMetaFieldName">Name of the aggregation meta field.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.GetDefaultElement(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Gets the default element.
            </summary>
            <param name="aggregation">The aggregation.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.ResetAllDefaultElement(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Resets all default element.
            </summary>
            <param name="aggregation">The aggregation.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.ResetAllDefaultElement(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Resets all default element.
            </summary>
            <param name="aggregation">The aggregation.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <param name="excludeElementId">The element id to exclude.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AggregationUtil.DeleteAllElements(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Deletes all elements.
            </summary>
            <param name="aggregation">The aggregation.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.Configuration.MetaClassManagerSection">
            <summary>
            Represents section of related meta class settings elements within a configuration file. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Configuration.MetaClassManagerSection.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.Configuration.MetaClassManagerSection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Configuration.MetaClassManagerSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.Configuration.MetaClassManagerSection"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Configuration.MetaClassManagerSection.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.Configuration.ConfigurationPropertyCollection"></see> of properties for the element.</returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement">
            <summary>
            Represents defenition of group by element.
            </summary>
            <remarks>
            A group by element defines information that can be used to reorder object list by group.
            The class stores information about field name, pre(post) group object fields and pre(post) group visibility.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.DefaultSorting">
            <summary>
            Gets or sets the default sorting.
            </summary>
            <value>The default sorting.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.IsPreGroupObjectVisible">
            <summary>
            Gets or sets a value indicating whether this instance is pre group object visible.
            </summary>
            <value>
            	<c>true</c> if this instance is pre group object visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.PreGroupObjectFields">
            <summary>
            Gets or sets the pre group object fields.
            </summary>
            <value>The pre group object fields.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.IsPostGroupObjectVisible">
            <summary>
            Gets or sets a value indicating whether this instance is post group object visible.
            </summary>
            <value>
            	<c>true</c> if this instance is post group object visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByElement.PostGroupObjectFields">
            <summary>
            Gets or sets the post group object fields.
            </summary>
            <value>The post group object fields.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval">
            <summary>
            Evaluates MIN, MAX, SUM, AVG, COUNT aggregate functions.
            </summary>
            <remarks>
            The GroupByFunctionEval class evaluates aggregate functions:s for custom group. 
            Use <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.#ctor(System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField})"/> to assign available GroupByObjectFields.
            Use <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.RegisterMetaObject(Mediachase.BusinessFoundation.Data.Meta.MetaObject)"/> to add object from the group.
            Use <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.SaveValues(Mediachase.BusinessFoundation.Data.Meta.MetaObject)"/> to save aggregate functions result to object.
            Use <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.Reset"/> to reset aggregate functions result.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.RegisterMetaObject(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Registers the meta object.
            </summary>
            <param name="metaObject">The meta object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.SumFunction(System.String,System.Object)">
            <summary>
            Sums the function.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="curValue">The cur value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.InnerSumFunction(System.Object,System.Object)">
            <summary>
            Inners the sum function.
            </summary>
            <param name="arg1">The arg1.</param>
            <param name="arg2">The arg2.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.MinFunction(System.String,System.Object)">
            <summary>
            Mins the function.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="curValue">The cur value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.MaxFunction(System.String,System.Object)">
            <summary>
            Maxes the function.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="curValue">The cur value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.CountFunction(System.String,System.Object)">
            <summary>
            Counts the function.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="curValue">The cur value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.AvgFunction(System.String,System.Object)">
            <summary>
            Avgs the function.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="curValue">The cur value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.SaveValues(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Saves the values.
            </summary>
            <param name="metaObject">The meta object.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.FieldFunctions">
            <summary>
            Gets the owner element.
            </summary>
            <value>The owner element.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByFunctionEval.InnerValues">
            <summary>
            Gets the inner values.
            </summary>
            <value>The inner values.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField">
            <summary>
            Represents field of group by element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.ValueSourceType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="valueSourceType">Type of the value source.</param>
            <param name="valueSource">The value source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.ValueSourceType,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField"/> class.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="valueSourceType">Type of the value source.</param>
            <param name="valueSource">The value source.</param>
            <param name="hideChildValues">if set to <c>true</c> [hide child values].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.ValueParameterIsFunction(System.String)">
            <summary>
            Values the parameter is function.
            </summary>
            <param name="valueParameter">The value parameter.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.ValueSource">
            <summary>
            Gets or sets the value parameter.
            </summary>
            <value>The value parameter.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.ValueSourceType">
            <summary>
            Gets or sets the type of the value source.
            </summary>
            <value>The type of the value source.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField.HideChildValues">
            <summary>
            Gets or sets a value indicating whether [hide child values].
            </summary>
            <value><c>true</c> if [hide child values]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement"/> class.
            </summary>
            <param name="Name">The name.</param>
            <param name="FieldName">Name of the field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement"/> class.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="FieldName">Name of the field.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.GroupElement.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>The name of the field.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaFieldInstaller">
            <summary>
            Allows a custom type to implement a meta field installer.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaFieldInstaller.AssignDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Assigns the data source.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaFieldInstaller.AssignValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Assigns the validators.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaFieldInstaller.UpdateDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Updates the data source.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaFieldInstaller.UpdateValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Updates the validators.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaFieldInstaller.RemoveDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Removes the data source.
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaFieldInstaller.RemoveValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Removes the validators.
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference">
            <summary>
            Allows an object to implement meta view preference storage. (Obsolete)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference.GetFilters">
            <summary>
            Gets the filters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference.GetSorting">
            <summary>
            Gets the sorting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference.GetVisibleMetaField">
            <summary>
            Gets the visible meta field.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder">
            <summary>
            Represents meta field builder.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder"/> class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.SaveChanges">
            <summary>
            Saves the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateGuid(System.String,System.String,System.Boolean)">
            <summary>
            Creates the GUID meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDateTime(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates the date time meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="useUserTimeZone">if set to <c>true</c> [use user time zone].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDate(System.String,System.String,System.Boolean)">
            <summary>
            Creates the date meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateInteger(System.String,System.String,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Creates the integer meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateFloat(System.String,System.String,System.Boolean,System.Nullable{System.Double})">
            <summary>
            Creates the float meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateCurrency(System.String,System.String,System.Boolean,System.Nullable{System.Decimal},System.Boolean)">
            <summary>
            Creates the currency meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <param name="allowNegative">if set to <c>true</c> [allow negative].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateCheckBoxBoolean(System.String,System.String,System.Boolean,System.Nullable{System.Boolean},System.String)">
            <summary>
            Creates the checkbox boolean meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="isChecked">if set to <c>true</c> [is checked].</param>
            <param name="label">The label.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDropDownBoolean(System.String,System.String,System.Boolean,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Creates the drop down boolean meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="isChecked">if set to <c>true</c> [is checked].</param>
            <param name="trueLabelText">The true label text.</param>
            <param name="falseLabelText">The false label text.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateText(System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Creates the text meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="maxLength">Length of the max.</param>
            <param name="isUnique">if set to <c>true</c> [is unique].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateEmail(System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Creates the E mail meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="maxLength">Length of the max.</param>
            <param name="isUnique">if set to <c>true</c> [is unique].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateUrl(System.String,System.String,System.Boolean,System.Int32,System.Boolean,System.String)">
            <summary>
            Creates the URL meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="maxLength">Length of the max.</param>
            <param name="isUnique">if set to <c>true</c> [is unique].</param>
            <param name="target">The URL target.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateLongText(System.String,System.String,System.Boolean)">
            <summary>
            Creates the long text meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateHtml(System.String,System.String,System.Boolean)">
            <summary>
            Creates the HTML meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateFile(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Creates the file meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="fileNameRegexPattern">The file name regex pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateImage(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            Creates the image meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="imageWidth">Width of the image.</param>
            <param name="imageHeight">Height of the image.</param>
            <param name="showBorder">if set to <c>true</c> [show border].</param>
            <param name="fileNameRegexPattern">The file name regex pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateReference(System.String,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Creates the reference meta field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="parentMetaClassName">Name of the reference meta class.</param>
            <param name="cascadeDelete">if set to <c>true</c> [cascade delete].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateReferencedField(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the referenced field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="referenceFieldName">Name of the reference field.</param>
            <param name="referencedFieldName">Name of the referenced field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateBackReference(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the back reference.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">The friendly name of the reference.</param>
            <param name="referenceClass">Name of the reference class.</param>
            <param name="referenceFieldName">Name of the reference field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateCardField(System.String,System.String,System.Boolean)">
            <summary>
            Creates the card field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateEnumField(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Creates the enum field.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="enumName">Name of the enum.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <param name="enumEditable">if set to <c>true</c> [enum editable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateAggregation(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the aggregation.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="childMetaClassName">Name of the child meta class.</param>
            <param name="elementContainerRefFieldFriendlyName">Friendly name of the element container reference field.</param>
            <param name="defaultElementFieldFriendlyName">Friendly name of the default element field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateIntegerPercent(System.String,System.String,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Creates the integer percent.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateFloatPercent(System.String,System.String,System.Boolean,System.Nullable{System.Double})">
            <summary>
            Creates the float percent.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDecimalPercent(System.String,System.String,System.Boolean,System.Nullable{System.Decimal})">
            <summary>
            Creates the decimal percent.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
            <remarks>
            Precision equals 18. Scale equals 4.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDecimalPercent(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Nullable{System.Decimal})">
            <summary>
            Creates the decimal percent.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="precision">The precision.</param>
            <param name="scale">The scale.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDecimal(System.String,System.String,System.Boolean,System.Nullable{System.Decimal})">
            <summary>
            Creates the decimal.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
            <remarks>
            Precision equals 18. Scale equals 4.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDecimal(System.String,System.String,System.Boolean,System.Int32,System.Int32,System.Nullable{System.Decimal})">
            <summary>
            Creates the decimal.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="precision">The precision.</param>
            <param name="scale">The scale.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.CreateDuration(System.String,System.String,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Creates the duration.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.SetSkipSchema(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Sets SchemaAttribute.IsCreatable and SchemaAttribute.IsDeletable are equal to false.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.Dispose(System.Boolean)">
            <summary>
            Disposes the specified free managed resources.
            </summary>
            <param name="freeManagedResources">if set to <c>true</c> [free managed resources].</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldBuilder.MetaClass">
            <summary>
            Gets the meta class.
            </summary>
            <value>The meta class.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs">
            <summary>
            Provides data for the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager"/> events.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassEventArgs"/> class.
            </summary>
            <param name="mc">The mc.</param>
            <param name="mf">The mf.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs.MetaClass">
            <summary>
            Gets the meta class.
            </summary>
            <value>The meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldEventArgs.MetaField">
            <summary>
            Gets the meta field.
            </summary>
            <value>The meta field.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap">
            <summary>
            Represents meta field global mapping. (<b>Not implemented</b>).
            </summary>
            <remarks>
            The meta field map defines how to copy properties source meta class to destination meta class.
            Supports multi-references.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.CreateElement(System.String,System.String)">
            <summary>
            Creates the element.
            </summary>
            <param name="srcMetaFieldName">Name of the SRC meta field.</param>
            <param name="destMetaFieldName">Name of the dest meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.CreateElement(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Creates the element.
            </summary>
            <param name="srcMetaField">The SRC meta field.</param>
            <param name="destMetaField">The dest meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.DeleteElemet(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElement)">
            <summary>
            Deletes the elemet.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.DeleteElemet(System.Int32)">
            <summary>
            Deletes the elemet.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.FindAllAvailableReferences(System.String,System.String)">
            <summary>
            Finds all available references.
            </summary>
            <param name="srcMetaClassName">Name of the SRC meta class.</param>
            <param name="destMetaClassName">Name of the dest meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.FindAllAvailableReferences(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Finds all available references.
            </summary>
            <param name="srcMetaClass">The SRC meta class.</param>
            <param name="destMetaClass">The dest meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.InnerFindAllAvailableReferencesTo(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Meta.Management.MetaField},System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[]})">
            <summary>
            Inners the find all available references to.
            </summary>
            <param name="srcMetaClass">The SRC meta class.</param>
            <param name="destMetaClass">The dest meta class.</param>
            <param name="path">The path.</param>
            <param name="foundItems">The found items.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.DetectRecursion(System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Meta.Management.MetaField},Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Detects the recursion.
            </summary>
            <param name="path">The path.</param>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.SourceMetaClass">
            <summary>
            Gets or sets the source meta class.
            </summary>
            <value>The source meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.DestinationMetaClass">
            <summary>
            Gets or sets the destination meta class.
            </summary>
            <value>The destination meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.References">
            <summary>
            Gets or sets the references.
            </summary>
            <value>The references.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap.Elements">
            <summary>
            Gets or sets the elements.
            </summary>
            <value>The elements.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException">
            <summary>
            The exception that is thrown when meta field map already exists in meta model.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapAlreadyExistsException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection">
            <summary>
            Represents collection of meta field map.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldMapCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap)">
            <summary>
            Adds the internal.
            </summary>
            <param name="metaFieldMap">The metaFieldMap.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="metaFieldMap">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap)">
            <summary>
            Indexes the of.
            </summary>
            <param name="metaFieldMap">The metaFieldMap.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap)">
            <summary>
            Determines whether [contains] [the specified metaFieldMap].
            </summary>
            <param name="metaFieldMap">The metaFieldMap.</param>
            <returns>
            	<c>true</c> if [contains] [the specified metaFieldMap]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaFieldMap"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:MetaFieldMap"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElement">
            <summary>
            Represents meta field map element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElement.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElement"/> class.
            </summary>
            <param name="srcMetaField">The SRC meta field.</param>
            <param name="destMetaField">The dest meta field.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElementCollection">
            <summary>
            Represents collection of meta field map element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapElementCollection"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModel">
            <summary>
            Represents next version of meta model. (Not implemented yet)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModel"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider">
            <summary>
            Provides abstract methods for meta model storage provider. (Not implemented yet)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.GetMetaFieldTypes">
            <summary>
            Gets the meta field types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.GetMetaClassNames">
            <summary>
            Gets the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.GetMetaClass(System.String)">
            <summary>
            Gets the meta class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.GetMetaViews(System.String)">
            <summary>
            Gets the meta views.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.Lock">
            <summary>
            Locks this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.Unlock(System.Object[])">
            <summary>
            Unlocks the specified updated objects.
            </summary>
            <param name="updatedObjects">The updated objects.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelStorageProvider.ResetLock">
            <summary>
            Resets the lock.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdateType">
            <summary>
            Specifies meta model update type. (Not implemented yet)
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdateType.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdateType.Insert">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdateType.Update">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdateType.Delete">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate">
            <summary>
            Represents meta model update command. (Not implemented yet)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdateType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate.RegisterCreate``1(``0)">
            <summary>
            Registers the create.
            </summary>
            <param name="metaModelObject">The meta model object.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate.RegisterUpdate``1(``0)">
            <summary>
            Registers the update.
            </summary>
            <param name="metaModelObject">The meta model object.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate.RegisterDelete``1(``0)">
            <summary>
            Registers the delete.
            </summary>
            <param name="metaModelObject">The meta model object.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelUpdate.MetaModelObject">
            <summary>
            Gets or sets the meta model object.
            </summary>
            <value>The meta model object.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection">
            <summary>
            Represents collection of meta view. (Obsolete)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaViewCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaView)">
            <summary>
            Adds the internal.
            </summary>
            <param name="Item">The Item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaView)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="Item">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.MetaView)">
            <summary>
            Indexes the of.
            </summary>
            <param name="Item">The Item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.MetaView)">
            <summary>
            Determines whether [contains] [the specified Item].
            </summary>
            <param name="Item">The Item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified Item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.GetByMetaClass(System.String)">
            <summary>
            Gets the by meta class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.GetByMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the by meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaView"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:MetaView"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException">
            <summary>
            The exception that is thrown when meta class already exists in meta model.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassAlreadyExistsException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassEventArgs">
            <summary>
            Provides data for the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager"/> events.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassEventArgs.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassEventArgs"/> class.
            </summary>
            <param name="mc">The mc.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassEventArgs.MetaClass">
            <summary>
            Gets the meta class.
            </summary>
            <value>The meta class.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope">
            <summary>
            Defines meta class manager edit scope.
            </summary>
            <remarks>
            The class <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope"/> activates transaction, allows to modify meta model 
            and saves modifications by <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.SaveChanges"/> method.
            All meta model modifications should be executed in active MetaClassManagerEditScope.
            Call <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.SaveChanges"/> method to commit modifications.
            Open and commit child meta class manager edit scope, it's attaching to root scope automatically.
            By default, CreateXXX and DeleteXXX methods activates meta class manager edit scope automatically.
            <see cref="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.Current"/> returns root edit scope.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AccessLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassManagerEditScope"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.Dispose(System.Boolean)">
            <summary>
            Disposes the specified disposing.
            </summary>
            <param name="disposing">if set to <c>true</c> [disposing].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.SaveChanges">
            <summary>
            Saves the changes.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.PrevOwner">
            <summary>
            Gets or sets the prev owner.
            </summary>
            <value>The prev owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.PrevAccessLevel">
            <summary>
            Gets or sets the prev access level.
            </summary>
            <value>The prev access level.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManagerEditScope.Transaction">
            <summary>
            Gets the transaction.
            </summary>
            <value>The transaction.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException">
            <summary>
            The exception that is thrown when you try to modify already updated meta model.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaModelModifiedException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException">
            <summary>
             The exception that is thrown when meta field already exists in meta model.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldAlreadyExistsException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException">
            <summary>
            The exception that is thrown when delete field with active reference.
            </summary>
            <remarks>
            Delete referenced field and try delete field again.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException"/> class.
            </summary>
            <param name="mc">The mc.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldReferencedException.MetaClassName">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType">
            <summary>
            Specifies identifier value unique time scope.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType.None">
            <summary>
            Global
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType.Year">
            <summary>
            Year
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType.Quarter">
            <summary>
            Quarter
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierType">
            <summary>
            Specifies identifier type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierType.Global">
            <summary>
            Global - identifier should be unique within application.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierType.Class">
            <summary>
            Class - identifier should be unique within meta class.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierType.Field">
            <summary>
            Field - identifier should be unique within meta field.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldMapping"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapping.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldMapping"/> class.
            </summary>
            <param name="SrcMetaClassName">Name of the SRC meta class.</param>
            <param name="SrcMetaFieldName">Name of the SRC meta field.</param>
            <param name="DestMetaClassName">Name of the dest meta class.</param>
            <param name="DestMetaFieldName">Name of the dest meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapping.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldMapping"/> class.
            </summary>
            <param name="SrcMetaField">The SRC meta field.</param>
            <param name="DestMetaField">The dest meta field.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapping.SrcMetaClassName">
            <summary>
            Gets or sets the name of the SRC meta class.
            </summary>
            <value>The name of the SRC meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapping.SrcMetaFieldName">
            <summary>
            Gets or sets the name of the SRC meta field.
            </summary>
            <value>The name of the SRC meta field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapping.DestMetaClassName">
            <summary>
            Gets or sets the name of the dest meta class.
            </summary>
            <value>The name of the dest meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMapping.DestMetaFieldName">
            <summary>
            Gets or sets the name of the dest meta field.
            </summary>
            <value>The name of the dest meta field.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation">
            <summary>
            Represent weak link meta information.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaLinkInformation"/> class.
            </summary>
            <param name="Owner">The owner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.CleanUpInfo">
            <summary>
            Cleans the up info.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.FindMapping(System.String,System.String,System.String)">
            <summary>
            Finds the mapping.
            </summary>
            <param name="srcMetaClass">The source meta class.</param>
            <param name="destMetaClass">The destination meta class.</param>
            <param name="destFieldName">Name of the destination field.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.TitleIndex">
            <summary>
            Gets or sets the index of the title.
            </summary>
            <value>The index of the title.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.TitleField">
            <summary>
            Gets or sets the index of the title.
            </summary>
            <value>The index of the title.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.LinkedFieldReadonly">
            <summary>
            Gets or sets a value indicating whether [linked field readonly].
            </summary>
            <value><c>true</c> if [linked field readonly]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.LinkedFieldList">
            <summary>
            Gets the linked field list.
            </summary>
            <value>The linked field list.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.AssignedMetaClassList">
            <summary>
            Gets the assigned meta class list.
            </summary>
            <value>The assigned meta class list.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaLinkInformation.MappingList">
            <summary>
            Gets the mapping list.
            </summary>
            <value>The mapping list.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewGroupByScope">
            <summary>
            Specifies meta view group by scope. (Obsolete)
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewGroupByScope.Begin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewGroupByScope.End">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewGroupByType">
            <summary>
            Specifies meta view groupby type. (Obsolete)
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewGroupByType.Primary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewGroupByType.Secondary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewGroupByType.Total">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference">
            <summary>
            Implements <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference"/>. (Obsolete)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.GetVisibleMetaField">
            <summary>
            Gets the visible meta field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.GetAttribute``1(System.String,System.String,``0)">
            <summary>
            Gets the attribute.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="defaultValue">The default.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.GetAttribute``1(System.String,System.String)">
            <summary>
            Gets the attribute.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="attributeName">Name of the attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.GetAttribute(System.String,System.String,System.Object)">
            <summary>
            Gets the attribute.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="defaultValue">The default.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.GetAttribute(System.String,System.String)">
            <summary>
            Gets the attribute.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="attributeName">Name of the attribute.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.SetAttribute``1(System.String,System.String,``0)">
            <summary>
            Sets the attribute.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="NewValue">The new value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.HideMetaField(System.Int32)">
            <summary>
            Hides the meta field.
            </summary>
            <param name="Index">The index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.HideMetaField(System.String)">
            <summary>
            Hides the meta field.
            </summary>
            <param name="MetafieldName">Name of the meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.ShowMetaField(System.String)">
            <summary>
            Shows the meta field.
            </summary>
            <param name="MetafieldName">Name of the meta field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.ShowAllMetaField">
            <summary>
            Shows all meta field.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaViewPreference#GetFilters">
            <summary>
            Gets the filters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.GetFilters">
            <summary>
            Gets the filters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaViewPreference#GetSorting">
            <summary>
            Gets the sorting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.GetSorting">
            <summary>
            Gets the sorting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaViewPreference#GetVisibleMetaField">
            <summary>
            Gets the visible meta field.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.MetaView">
            <summary>
            Gets or sets the meta view.
            </summary>
            <value>The meta view.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.HidenFields">
            <summary>
            Gets the hiden fields.
            </summary>
            <value>The hiden fields.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.Filters">
            <summary>
            Gets the filters.
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaViewPreference.Sorting">
            <summary>
            Gets the sorting.
            </summary>
            <value>The sorting.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem">
            <summary>
            Represents multi reference item meta information.
            </summary>
            <remarks>
            The MultiReferenceItem describes reference meta class, reference name and friendly name.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem"/> class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="referenceName">Name of the reference.</param>
            <param name="referenceFriendlyName">Name of the reference friendly.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem.MetaClassName">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem.ReferenceName">
            <summary>
            Gets or sets the name of the reference.
            </summary>
            <value>The name of the reference.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem.ReferenceFriendlyName">
            <summary>
            Gets or sets the name of the reference friendly.
            </summary>
            <value>The name of the reference friendly.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldMapId">
            <summary>
            Provides functionality for receiving meta field map name by id and id by name. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldMapId.GetName(System.Int32)">
            <summary>
            Gets the name.
            </summary>
            <param name="Id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldMapId.GetId(System.String)">
            <summary>
            Gets the id.
            </summary>
            <param name="metaFieldMapName">Name of the meta field map.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldMapId.GetIds">
            <summary>
            Gets the meta class ids.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldMapId.GetNames">
            <summary>
            Gets the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException">
            <summary>
            The exception that is thrown when validators are invalid.
            </summary>
            <remarks>
            Use <see cref="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException.InvalidValidator"/> property to enum invalid validators.
            </remarks>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException">
            <summary>
            Represents errors that occur during Meta Object execution.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException.#ctor(Mediachase.BusinessFoundation.Data.IValidator[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException"/> class.
            </summary>
            <param name="invalidValidators">The invalid validators.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException.InvalidValidator">
            <summary>
            Gets the invalid validator.
            </summary>
            <value>The invalid validator.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectValidationException.Message">
            <summary>
            Gets a message that describes the current exception.
            </summary>
            <value></value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceMetaObjectPropertyBinder">
            <summary>
            Represents multi reference meta object propertybinder.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceMetaObjectPropertyBinder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceMetaObjectPropertyBinder"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceTypeAttribute">
            <summary>
            Defines multi reference attribute name constants.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType">
            <summary>
            Represents manage method for multi reference fields.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.Create(System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem[])">
            <summary>
            Creates the specified type name.
            </summary>
            <param name="typeName">Name of the type.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="items">The items.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.IsMultiReferenceField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Determines whether [is multi reference field] [the specified meta field].
            </summary>
            <param name="metaField">The meta field.</param>
            <returns>
            	<c>true</c> if [is multi reference field] [the specified meta field]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Removes the specified type.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.GetMultiReferenceItems(System.String)">
            <summary>
            Gets the multi reference items.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.GetMultiReferenceItems(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Gets the multi reference items.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.GetReference(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem)">
            <summary>
            Gets the reference.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="multiReferenceFieldName">Name of the multi reference field.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.GetReference(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem)">
            <summary>
            Gets the reference.
            </summary>
            <param name="multiReferenceField">The multi reference field.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.GetReferenceTitle(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem)">
            <summary>
            Gets the reference title.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="multiReferenceFieldName">Name of the multi reference field.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceType.GetReferenceTitle(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceItem)">
            <summary>
            Gets the reference title.
            </summary>
            <param name="multiReferenceField">The multi reference field.</param>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldId">
            <summary>
            Provides functionality for reading dictionary meta field name by id. 
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaViewId">
            <summary>
            Provides functionality for receiving meta view name by id and id by name. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaViewId.GetName(System.Int32)">
            <summary>
            Gets the name of the class.
            </summary>
            <param name="Id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaViewId.GetId(System.String)">
            <summary>
            Gets the id.
            </summary>
            <param name="MetaViewName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaViewId.GetIds">
            <summary>
            Gets the meta class ids.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaViewId.GetNames">
            <summary>
            Gets the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider">
            <summary>
            Represents sql meta model storage provider.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.GetCacheItem">
            <summary>
            Gets the cache item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.GetVersionId">
            <summary>
            Gets the version id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.CheckVersionId">
            <summary>
            Checks the version id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.UpdateVersionId">
            <summary>
            Updates the version id.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.ResetCacheItem">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.GetMetaFieldTypes">
            <summary>
            Gets the meta field types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.GetMetaClassNames">
            <summary>
            Gets the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.GetMetaClass(System.String)">
            <summary>
            Gets the meta class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.GetMetaViews(System.String)">
            <summary>
            Gets the meta views.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.Lock">
            <summary>
            Locks this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.Unlock(System.Object[])">
            <summary>
            Unlocks the specified updated objects.
            </summary>
            <param name="updatedObjects">The updated objects.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.ResetLock">
            <summary>
            Resets the lock.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.ResetCache">
            <summary>
            Resets the cache.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.DeserializeMetaFieldType(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaFieldTypeRow)">
            <summary>
            Deserializes the type of the meta field.
            </summary>
            <param name="typeRow">The type row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.DeserializeMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaClassRow)">
            <summary>
            Deserializes the meta class.
            </summary>
            <param name="classRow">The class row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.DeserializeMetaClassDataSource(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSource)">
            <summary>
            Deserializes the meta class data source.
            </summary>
            <param name="metaClassId">The meta class id.</param>
            <param name="ds">The ds.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.DeserializeMetaField(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaFieldRow)">
            <summary>
            Deserializes the meta field.
            </summary>
            <param name="fieldRow">The field row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.DeserializeEnumItems(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Deserializes the enum items.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.DeserializeMetaView(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaViewRow)">
            <summary>
            Deserializes the meta view.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="viewRow">The view row.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.CacheItem">
            <summary>
            Represents inner cache item.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.CacheItem.#ctor(System.Guid,Mediachase.BusinessFoundation.Data.Sql.Management.Database)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlMetaModelStorageProvider.CacheItem"/> class.
            </summary>
            <param name="versionId">The version id.</param>
            <param name="database">The database.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerActionAttribute">
            <summary>
            Represents trigger action attribute.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerActionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerActionAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerActionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerActionAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerActionAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerActionAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerConditionAttribute">
            <summary>
            Represents trigger condition attribute.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerConditionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerConditionAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerConditionAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerConditionAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerConditionAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerConditionAttribute.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext">
            <summary>
            Represent trigger context.
            </summary>
            <remarks>
            The TriggerContext.Current method allows to get information about trigger execution context.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext"/> class.
            </summary>
            <param name="transactionUid">The transaction uid.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext.Current">
            <summary>
            Gets or sets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext.Trigger">
            <summary>
            Gets or sets the current job.
            </summary>
            <value>The current job.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext.Parameter">
            <summary>
            Gets or sets the parameter.
            </summary>
            <value>The parameter.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext.TransactionId">
            <summary>
            Gets or sets the transaction uid.
            </summary>
            <value>The transaction uid.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerContext.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo">
            <summary>
            Represents trigger method information.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.#ctor(System.Reflection.MethodInfo,Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo"/> class.
            </summary>
            <param name="methodInfo">The method info.</param>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.MethodInfo">
            <summary>
            Gets or sets the method info.
            </summary>
            <value>The method info.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.InParameters">
            <summary>
            Gets or sets the in parameters.
            </summary>
            <value>The in parameters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo.MethodType">
            <summary>
            Gets or sets the type of the method.
            </summary>
            <value>The type of the method.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodType">
            <summary>
            Specifies trigger method type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodType.Condition">
            <summary>
            Condition
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodType.Action">
            <summary>
            Action
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.ValueSourceType">
            <summary>
            Specifies group by value source type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.ValueSourceType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.ValueSourceType.Field">
            <summary>
            Field
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.ValueSourceType.Function">
            <summary>
            Function
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.ValueSourceType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem">
            <summary>
            Represent meta enum item information.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaEnumRow)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaEnumItem"/> class.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem.Handle">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem.OrderId">
            <summary>
            Gets or sets the order id.
            </summary>
            <value>The order id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException">
            <summary>
            The exception that is thrown when file not exists.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.FileNotExistsException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier">
            <summary>
            Represent access and manage methods for identifiers.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.Create(System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierType,Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType,System.String,System.Boolean)">
            <summary>
            Creates the specified name.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="Type">The type.</param>
            <param name="PeriodType">Type of the period.</param>
            <param name="IdentifierMask">The identifier mask.</param>
            <param name="ReadOnly">if set to <c>true</c> [read only].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.Create(System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierType,Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType,System.String,System.Int32,System.Boolean)">
            <summary>
            Creates the specified name.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="Type">The type.</param>
            <param name="PeriodType">Type of the period.</param>
            <param name="IdentifierMask">The identifier mask.</param>
            <param name="MaskDigitLength">Length of the mask digit.</param>
            <param name="ReadOnly">if set to <c>true</c> [read only].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.IsUsed(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Determines whether the specified type is used.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if the specified type is used; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Removes the specified type.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.CreateItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Creates the item.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.CreateItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Creates the item.
            </summary>
            <param name="field">The field.</param>
            <param name="userValue">The user value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.GetPeriodKey(Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifierPeriodType)">
            <summary>
            Gets the period key.
            </summary>
            <param name="periodType">Type of the period.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.UpdateItem(Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue)">
            <summary>
            Updates the item.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.GetItem(System.Int32)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaIdentifier.DeleteItem(System.Int32)">
            <summary>
            Deletes the item.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierUniqueConstraintException">
            <summary>
            The exception that is thrown when meta identifier unique constraint fired.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierUniqueConstraintException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaIdentifierUniqueConstraintException"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierUniqueConstraintException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaIdentifierUniqueConstraintException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierUniqueConstraintException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaIdentifierUniqueConstraintException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierUniqueConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaIdentifierUniqueConstraintException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue">
            <summary>
            Represents property value for identifier type.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaIdentifierValue"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue.Mediachase#BusinessFoundation#Data#Meta#IAggregatedValue#GetValue">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue.Mediachase#BusinessFoundation#Data#Meta#IAggregatedValue#SetValue(System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue.Handle">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaIdentifierValue.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaLink.#ctor(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaLink"/> class.
            </summary>
            <param name="Owner">The owner object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaLink.#ctor(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaLink"/> class.
            </summary>
            <param name="Owner">The metaobject that owns the link.</param>
            <param name="LinkId">The link id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaLink.TryLoadTarget">
            <summary>
            Tries the load target.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaLink.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaLink.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaLink.ReloadLinkedMetaField">
            <summary>
            Reloads the linked meta field.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.Uid">
            <summary>
            Gets or sets the uid.
            </summary>
            <value>The uid.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.MetaClassName">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.MetaObjectId">
            <summary>
            Gets or sets the meta object id.
            </summary>
            <value>The meta object id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.IsTargetLoaded">
            <summary>
            Gets a value indicating whether this instance is loaded.
            </summary>
            <value><c>true</c> if this instance is loaded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.HasTarget">
            <summary>
            Gets a value indicating whether this instance has target.
            </summary>
            <value>
            	<c>true</c> if this instance has target; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaLink.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CanCreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether this instance [can create instance] the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns>
            	<c>true</c> if this instance [can create instance] the specified meta class; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstanceFromFactory(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Creates the instance from factory.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstanceFromFactory(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the instance from factory.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstanceFromFactory(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Creates the instance from factory.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance(System.String)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance(System.String,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstances(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId[])">
            <summary>
            Creates the instances.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstances(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId[])">
            <summary>
            Creates the instances.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstances(Mediachase.BusinessFoundation.Data.Meta.BatchActivator)">
            <summary>
            Creates the multi meta object instances by BatchActivator.
            </summary>
            <param name="batch">The batch.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance``1(System.String)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance``1(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance``1(System.String,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstance``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Creates the instance.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstances``1(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId[])">
            <summary>
            Creates the instances.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.CreateInstances``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId[])">
            <summary>
            Creates the instances.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyIds">The primary key ids.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.AddToCache(Mediachase.BusinessFoundation.Data.Meta.MetaObject,System.DateTime)">
            <summary>
            Adds to cache.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.InsertToCache(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Inserts to cache.
            </summary>
            <param name="metaObject">The meta object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.InsertToCache(Mediachase.BusinessFoundation.Data.Meta.MetaObject,System.DateTime)">
            <summary>
            Inserts to cache.
            </summary>
            <param name="metaObject">The meta object.</param>
            <param name="absoluteExpiration">The absolute expiration.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectActivator.RemoveFromCache(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Removes from cache.
            </summary>
            <param name="metaObject">The meta object.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectOptions">
            <summary>
            Specifies meta object options.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.MetaObjectOptions.Default">
            <summary>
            Default = MetaObjectOptions.LoadCardProperties
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.MetaObjectOptions.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.MetaObjectOptions.LoadCardProperties">
            <summary>
            LoadCardProperties
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectState">
            <summary>
            Specifies meta object state.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.MetaObjectState.Unchanged">
            <summary>
            The object has not changed since Save() was last called.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.MetaObjectState.Created">
            <summary>
            A new object has been created, and Save() has not been called.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.MetaObjectState.Deleted">
            <summary>
            The object was deleted.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.MetaObjectState.Modified">
            <summary>
            The object has been modified, and Save() has not been called.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.FileInfo">
            <summary>
            Represent a meta file information.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileInfo"/> class.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileInfo.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FileInfo"/> class.
            </summary>
            <param name="Handle">The handle.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileInfo.#ctor(System.Int32,System.Guid,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.FileInfo"/> class.
            </summary>
            <param name="handle">The handle.</param>
            <param name="uid">The uid.</param>
            <param name="fileName">Name of the file.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileInfo.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:FileInfo"/> class.
            </summary>
            <param name="FileUID">The file UID.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileInfo.OpenRead">
            <summary>
            Opens the read.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileInfo.OpenWrite">
            <summary>
            Opens the write.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileInfo.OpenReadWrite">
            <summary>
            Opens the read write.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FileInfo.FileUID">
            <summary>
            Gets the file UID.
            </summary>
            <value>The file UID.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FileInfo.Handle">
            <summary>
            Gets the handle.
            </summary>
            <value>The handle.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FileInfo.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FileInfo.Length">
            <summary>
            Gets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FileInfo.ContentType">
            <summary>
            Gets the content type string.
            </summary>
            <value>The content type string.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.McDataTypeAttribute">
            <summary>
            Storages attribute name constants of default data type.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller">
            <summary>
            Implements meta field installler for default types.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:McDataTypeInstaller"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CalculateColumnLength(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Calculates the length of the column.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CalculateTableRowLength(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Calculates the length of the table row.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CanAddColumn(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Determines whether this instance [can add column] the specified table.
            </summary>
            <param name="table">The table.</param>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if this instance [can add column] the specified table; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.AssignDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Assigns the data source.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateSqlColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Creates the SQL column.
            </summary>
            <param name="field">The field.</param>
            <param name="newColumnName">New name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateCardColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Creates the card column.
            </summary>
            <param name="field">The field.</param>
            <param name="newColumnName">New name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateBackReferenceColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Creates the back reference column.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateReferencedFieldColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Creates the referenced field column.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateReferenceColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Creates the reference column.
            </summary>
            <param name="reference">The reference.</param>
            <param name="newColumnName">New name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateEnumColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Creates the enum column.
            </summary>
            <param name="field">The field.</param>
            <param name="newColumnName">New name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateStringColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Creates the string column.
            </summary>
            <param name="field">The field.</param>
            <param name="newColumnName">New name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateLinkColumn(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String)">
            <summary>
            Creates the link column.
            </summary>
            <param name="field">The field.</param>
            <param name="newColumnName">New name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateSqlRelation(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Creates the SQL relation.
            </summary>
            <param name="field">The field.</param>
            <param name="srcTable">The SRC table.</param>
            <param name="newColumn">The new column.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CreateNewExtendedTable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Sql.Management.Table,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Sql.Management.Table})">
            <summary>
            Creates the new extended table.
            </summary>
            <param name="field">The field.</param>
            <param name="primaryTable">The primary table.</param>
            <param name="exTables">The ex tables.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.AssignValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Assigns the validators.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.RemoveDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Removes the data source.
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CleanUpData(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String,System.String)">
            <summary>
            Cleans up data.
            </summary>
            <param name="field">The field.</param>
            <param name="tableSourceName">Name of the table source.</param>
            <param name="columnSourceName">Name of the column source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CleanUpLinkTable(System.String,System.String)">
            <summary>
            Cleans up link table.
            </summary>
            <param name="tableSourceName">Name of the table source.</param>
            <param name="columnSourceName">Name of the column source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CleanUpIdentifierTable(System.String,System.String)">
            <summary>
            Cleans up identifier table.
            </summary>
            <param name="tableSourceName">Name of the table source.</param>
            <param name="columnSourceName">Name of the column source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CleanUpSelectedMultiEnumTable(System.String,System.String)">
            <summary>
            Cleans up selected multi enum table.
            </summary>
            <param name="tableSourceName">Name of the table source.</param>
            <param name="columnSourceName">Name of the column source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.CleanUpFileTable(System.String,System.String)">
            <summary>
            Cleans up file table.
            </summary>
            <param name="tableSourceName">Name of the table source.</param>
            <param name="columnSourceName">Name of the column source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.RemoveValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Removes the validators.
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.UpdateDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Updates the data source.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.DefaultMetaFieldInstaller.UpdateValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Updates the validators.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.ChangedObjectStack">
            <summary>
            Represents changed object stack. (Not implemented yet)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.ChangedObjectStack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ChangedObjectStack"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.ChangedObjectStack.Add(System.Object)">
            <summary>
            Adds the specified obj.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.IntegerFieldValidator">
            <summary>
            Represents integer field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IntegerFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IntegerRangeFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IntegerFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IntegerFieldValidator.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IntegerFieldValidator.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.IntervalFilterElement">
            <summary>
            Represents interval filter element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IntervalFilterElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.IntervalFilterElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IntervalFilterElement.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:IntervalFilterElement"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="startOfInterval">The start of interval.</param>
            <param name="endOfInterval">The end of interval.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IntervalFilterElement.#ctor(System.String,System.Object,System.Boolean,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:IntervalFilterElement"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="startOfInterval">The start of interval.</param>
            <param name="isLeftOpenInterval">if set to <c>true</c> [is left open interval].</param>
            <param name="endOfInterval">The end of interval.</param>
            <param name="isRightOpenInterval">if set to <c>true</c> [is right open interval].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.IntervalFilterElement.#ctor(Mediachase.BusinessFoundation.Data.FilterElement,Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.IntervalFilterElement"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IntervalFilterElement.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IntervalFilterElement.IsLeftOpenInterval">
            <summary>
            Gets or sets a value indicating whether this instance is left open interval.
            </summary>
            <value>
            	<c>true</c> if this instance is left open interval; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IntervalFilterElement.IsRightOpenInterval">
            <summary>
            Gets or sets a value indicating whether this instance is right open interval.
            </summary>
            <value>
            	<c>true</c> if this instance is right open interval; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IntervalFilterElement.StartOfInterval">
            <summary>
            Gets the start of interval.
            </summary>
            <value>The start of interval.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.IntervalFilterElement.EndOfInterval">
            <summary>
            Gets the end of interval.
            </summary>
            <value>The end of interval.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectDeleteTracking">
            <summary>
            Defines the mechanism for querying the meta object deleting status.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectDeleteTracking.PrimaryKeyId">
            <summary>
            Gets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.IMetaObjectDeleteTracking.IsDeleted">
            <summary>
            Gets a value indicating whether this instance is deleted.
            </summary>
            <value>
            	<c>true</c> if this instance is deleted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType">
            <summary>
            Specifies Mediachase Ibn Data component default data type of a field.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Integer">
            <summary>
            A 32-bit signed integer
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.DateTime">
            <summary>
            Date and time data ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Guid">
            <summary>
            A globally unique identifier (or GUID).
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Double">
            <summary>
            A floating point number within the range of -1.79E +308 through 1.79E +308.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Currency">
            <summary>
            A currency value ranging from -2 63 (or -9,223,372,036,854,775,808) to 2 63 -1 (or +9,223,372,036,854,775,807) with an accuracy to a ten-thousandth of a currency unit.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Boolean">
            <summary>
            A logical value. Either true or false.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.String">
            <summary>
            A variable-length stream of Unicode characters.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.File">
            <summary>
            A file.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Enum">
            <summary>
            An either multi-value or single-value enum.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Reference">
            <summary>
            A reference to meta class.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.ReferencedField">
            <summary>
            A read-only rereference field from reference.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.BackReference">
            <summary>
            A back reference to array of rereferenced objects.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Card">
            <summary>
            A card extenstion.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Identifier">
            <summary>
            An string unique identifier.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Link">
            <summary>
            A weak leank to meta class.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Aggregation">
            <summary>
            An aggregation of meta class.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Complex">
            <summary>
            An custom external type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.MultiReference">
            <summary>
            An multi reference.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.McDataType.Decimal">
            <summary>
            A fixed precision and scale numeric value between -10 38 -1 and 10 38 -1.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition">
            <summary>
            Represents meta class data source condition.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassDataSourceCondition"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassDataSourceCondition"/> class.
            </summary>
            <param name="table">The table.</param>
            <param name="column">The column.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition.Table">
            <summary>
            Gets or sets the table.
            </summary>
            <value>The table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSourceCondition.FilterValue">
            <summary>
            Gets or sets the filter value.
            </summary>
            <value>The filter value.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection">
            <summary>
            Represents serializable by demand  collection of associated System.String
            keys and System.Object values that can be accessed either with the key or
            with the index.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.#ctor(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection"/> class.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" qualify="true"/> XmppElementType that contains the information required to serialize the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" qualify="true"/> XmppElementType that contains the source and destination of the serialized stream associated with the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.AddRange(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Adds the range.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire AttributeCollection to a compatible one-dimensional Array, starting at the specified index of the target array.
            </summary>
            <param name="dest">The dest.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.GetValue``1(System.String)">
            <summary>
            Gets the string value.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.GetValue``1(System.Int32)">
            <summary>
            Gets the string value.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.GetKey(System.Int32)">
            <summary>
            Gets the key.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.GetValue(System.Int32)">
            <summary>
            Gets the value.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.SetValue(System.String,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.GetAllKeys">
            <summary>
            Gets all keys.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the specified name contains key.
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if the specified name contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.SetChanged">
            <summary>
            Sets the changed.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.Mediachase#BusinessFoundation#Data#IChangeTracking#AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.Mediachase#BusinessFoundation#Data#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.XmlSerializedItem">
            <summary>
            Represents internal data element
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.XmlSerializedItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.XmlSerializedItem"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.XmlSerializedItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.XmlSerializedItem"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.XmlSerializedItem.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection.XmlSerializedItem.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum">
            <summary>
            Represents access and manage methods for enumerations.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.Create(System.String,System.String,System.Boolean)">
            <summary>
            Creates the specified type name.
            </summary>
            <param name="TypeName">Name of the type.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="MultyValue">Indicates if it is a multivalue enumeration.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.IsUsed(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Determines whether the specified type is used.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if the specified type is used; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Removes the specified type.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.AddItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.String,System.Int32)">
            <summary>
            Adds the item.
            </summary>
            <param name="type">The type.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="orderId">The order id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.AddItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.Int32,System.String,System.Int32)">
            <summary>
            Adds the item.
            </summary>
            <param name="type">The type.</param>
            <param name="id">The id.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="orderId">The order id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.RenameItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.Int32,System.String)">
            <summary>
            Renames the item.
            </summary>
            <param name="type">The type.</param>
            <param name="Id">The id.</param>
            <param name="friendlyName">Name of the friendly.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.UpdateItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.Int32,System.String,System.Int32)">
            <summary>
            Updates the item.
            </summary>
            <param name="type">The type.</param>
            <param name="Id">The id.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="orderId">The order id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.RemoveItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.Int32)">
            <summary>
            Removes the item.
            </summary>
            <param name="type">The type.</param>
            <param name="Id">The id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.ChangeOrder(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.Int32,System.Int32)">
            <summary>
            Changes the order.
            </summary>
            <param name="type">The type.</param>
            <param name="Id">The id.</param>
            <param name="order">The order.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.GetFriendlyName(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.Int32)">
            <summary>
            Gets the name of the friendly.
            </summary>
            <param name="type">The type.</param>
            <param name="Id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.GetFriendlyNames(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Gets the friendly names.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.GetFriendlyNames(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,System.Int32[])">
            <summary>
            Gets the friendly names.
            </summary>
            <param name="type">The type.</param>
            <param name="values">The values.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.GetValues(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Gets the values.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaEnum.GetItems(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Gets the items.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSourceType">
            <summary>
             Specifies available meta field data source types.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSourceType.NotSet">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSourceType.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSourceType.Reference">
            <summary>
            Reference
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSourceType.DataProvider">
            <summary>
            Custom data provider
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSourceType.BackReference">
            <summary>
            Back reference
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSourceType.Expression">
            <summary>
            Expression
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection">
            <summary>
            Represents collection of meta field types.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TypeCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Adds the internal.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="type">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Indexes the of.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Determines whether [contains] [the specified type].
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if [contains] [the specified type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Type"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Type"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView">
            <summary>
            Represent meta field type view meta information.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldTypeView"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldTypeView"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="controlPath">The path to the control.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldTypeView.ControlPath">
            <summary>
            Gets or sets the control path.
            </summary>
            <value>The control path.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaClassId">
            <summary>
            Provides functionality for receiving meta class name by id and id by name.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaClassId.GetName(System.Int32)">
            <summary>
            Gets the name of the class.
            </summary>
            <param name="Id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaClassId.GetId(System.String)">
            <summary>
            Gets the id.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaClassId.GetIds">
            <summary>
            Gets the meta class ids.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaClassId.GetNames">
            <summary>
            Gets the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldTypeId">
            <summary>
            Provides functionality for receiving meta type name by id and id by name. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldTypeId.GetName(System.Int32)">
            <summary>
            Gets the name of the class.
            </summary>
            <param name="Id">The id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldTypeId.GetId(System.String)">
            <summary>
            Gets the id.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldTypeId.GetIds">
            <summary>
            Gets the meta class ids.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.MetaFieldTypeId.GetNames">
            <summary>
            Gets the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer">
            <summary>
            Provides functionality for serializing meta model in SQL.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.GetVersionId">
            <summary>
            Gets the version id.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.UpdateVersionId(System.Guid)">
            <summary>
            Updates the version id.
            </summary>
            <param name="newVersionId">The new version id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.Serialize(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager)">
            <summary>
            Serializes the specified MCM.
            </summary>
            <param name="mcm">The MCM.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.SerializeMetaFieldMap(System.Collections.Generic.Dictionary{System.String,System.Int32},Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap)">
            <summary>
            Serializes the meta field map.
            </summary>
            <param name="mcIdByName">Name of the mc id by.</param>
            <param name="map">The map.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.SerializeMetaFieldType(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Serializes the meta field types.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.SerializeMetaEnumItem(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType,Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem)">
            <summary>
            Serializes the meta enum item.
            </summary>
            <param name="type">The type.</param>
            <param name="enumItem">The enum item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.SerializeMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Serializes the meta class.
            </summary>
            <param name="mcClass">The mc class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.SerializeMetaView(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.MetaView)">
            <summary>
            Serializes the meta view.
            </summary>
            <param name="metaClassId">The meta class id.</param>
            <param name="mcView">The mc view.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.SerializeMetaClassDataSource(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSource)">
            <summary>
            Serializes the meta class data source.
            </summary>
            <param name="metaClassId">The meta class id.</param>
            <param name="metaClassDataSource">The meta class data source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.SerializeMetaField(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Serializes the meta field.
            </summary>
            <param name="metaClassId">The meta class id.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.Deserialize">
            <summary>
            Deserializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeModuleDataStorage(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_ModuleRow)">
            <summary>
            Deserializes the module data storage.
            </summary>
            <param name="moduleRow">The module row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeMetaFieldMap(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager,System.Collections.Generic.Dictionary{System.Int32,System.String},Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaFieldMapRow)">
            <summary>
            Deserializes the meta field map.
            </summary>
            <param name="mcManager">The mc manager.</param>
            <param name="metaClassNameIdDic">The meta class name id dic.</param>
            <param name="mapRow">The map row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeMetaFieldType(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaFieldTypeRow)">
            <summary>
            Deserializes the type of the meta field.
            </summary>
            <param name="typeRow">The type row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeEnumItems(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Deserializes the enum items.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaClassRow)">
            <summary>
            Deserializes the meta class.
            </summary>
            <param name="classRow">The class row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeMetaClassDataSource(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSource)">
            <summary>
            Deserializes the meta class data source.
            </summary>
            <param name="metaClassId">The meta class id.</param>
            <param name="ds">The ds.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeMetaField(Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaFieldRow)">
            <summary>
            Deserializes the meta field.
            </summary>
            <param name="fieldRow">The field row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.DeserializeMetaView(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.mcmd_MetaViewRow)">
            <summary>
            Deserializes the meta view.
            </summary>
            <param name="mcManager">The mc manager.</param>
            <param name="mc">The mc.</param>
            <param name="viewRow">The view row.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.RegisterResetCallback(Mediachase.BusinessFoundation.Data.TransactionScope)">
            <summary>
            Registers the reset callback.
            </summary>
            <param name="scope">The scope.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.SqlSerialization.SqlSerializer.OnTransactionCompleted(System.Boolean,System.Object)">
            <summary>
            Called when [transaction completed].
            </summary>
            <param name="isSuccessful">if set to <c>true</c> [is successful].</param>
            <param name="state">The state.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.Validator">
            <summary>
            Represents meta class validator wrapper.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.Validator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.Validator"/> class.
            </summary>
            <param name="typeName">Name of the type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.Validator"/> class.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.SetChanged">
            <summary>
            Sets the changed.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.Mediachase#BusinessFoundation#Data#IChangeTracking#AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.TypeName">
            <summary>
            Gets or sets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Validator.Mediachase#BusinessFoundation#Data#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection">
            <summary>
            Represents collection of meta class validator wrappers.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldValidatorCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.Insert(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.Validator)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="validator">The validator.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.Validator)">
            <summary>
            Adds the internal.
            </summary>
            <param name="validator">The validator.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection)">
            <summary>
            Adds the specified validators.
            </summary>
            <param name="validators">The validators.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.Validator)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="validator">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.Validator)">
            <summary>
            Indexes the of.
            </summary>
            <param name="validator">The validator.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.Validator)">
            <summary>
            Determines whether [contains] [the specified validator].
            </summary>
            <param name="validator">The validator.</param>
            <returns>
            	<c>true</c> if [contains] [the specified validator]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.ValidatorCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaFieldValidator"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer">
            <summary>
            Represents filter element transaformer.
            </summary>
            <remarks>
            The FilterElementTransformer class converts meta model filters to sql-query filters.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RowFilterElementBuilder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:RowFilterElementBuilder"/> class.
            </summary>
            <param name="ownerMetaClass">The owner meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:RowFilterElementBuilder"/> class.
            </summary>
            <param name="ownerMetaClass">The owner meta class.</param>
            <param name="metaClassFilters">The meta class filters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.Transform">
            <summary>
            Builds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.PushMetaClassFilterElement(Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Pushes the filter element.
            </summary>
            <param name="srcItem">The SRC item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.ResolveTemplateValue(System.String)">
            <summary>
            Resolves the template value.
            </summary>
            <param name="stringWithTemplate">The string with template.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.GetColumnNameByField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Gets the column name by field.
            </summary>
            <param name="mf">The mf.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.OwnerMetaClass">
            <summary>
            Gets or sets the owner meta class.
            </summary>
            <value>The owner meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.MetaClassFilters">
            <summary>
            Gets or sets the source filters.
            </summary>
            <value>The source filters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.RowFilters">
            <summary>
            Gets the row filters.
            </summary>
            <value>The row filters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.FilterElementTransformer.ResolvedTemplateValueIndex">
            <summary>
            Gets or sets the index of the resolved template value.
            </summary>
            <value>The index of the resolved template value.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType">
            <summary>
            Represent meta field type meta information.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Type"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.McDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldType"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.#ctor(System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.McDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldType"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="dataType">Type of the data.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.GetInstaller(System.String)">
            <summary>
            Gets the installer.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.GetInstaller(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Gets the installer.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.GetObjectPropertyBinder(System.String)">
            <summary>
            Gets the object property binder.
            </summary>
            <param name="typeName">Name of the type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.GetObjectPropertyBinder(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Gets the object property binder.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.IsUsed(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType)">
            <summary>
            Determines whether the specified type is used.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if the specified type is used; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.McDataType">
            <summary>
            Gets or sets the type of the mc data.
            </summary>
            <value>The type of the mc data.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldType.EnumItems">
            <summary>
            Gets or sets the enum items.
            </summary>
            <value>The enum items.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow"/> class.
            </summary>
            <param name="ContentTypeId">The content type id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.Load(System.Data.IDataReader)">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.List">
            <summary>
            Lists this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.List(Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified sorting.
            </summary>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.List(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified filters.
            </summary>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.List(Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified filters.
            </summary>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.List(Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified filters.
            </summary>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.List(Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified sorting.
            </summary>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.GetTotalCount(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the total count.
            </summary>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.GetReader">
            <summary>
            Gets the reader.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.GetReader(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the reader.
            </summary>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.GetReader(Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Gets the reader.
            </summary>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.GetTable">
            <summary>
            Gets the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.GetTable(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the table.
            </summary>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.mcmd_MetaFileContentTypeRow.Delete(System.Int32)">
            <summary>
            Deletes the specified content type id.
            </summary>
            <param name="ContentTypeId">The content type id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObject"/> class.
            </summary>
            <param name="metaType">Type of the meta.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.MetaObjectOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObject"/> class.
            </summary>
            <param name="metaType">Meta Type of the object.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObject"/> class.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.BusinessFoundation.Data.Meta.MetaObjectOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObject"/> class.
            </summary>
            <param name="metaType">Meta Type of the object.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Sql.CustomTableRow,Mediachase.BusinessFoundation.Data.Meta.MetaObjectOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObject"/> class.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="row">The row.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Load(Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads the specified row.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetUniqueKey(System.String,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId})">
            <summary>
            Gets the unique key.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetUniqueKey(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId})">
            <summary>
            Gets the unique key.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetUniqueKey(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Gets the unique key.
            </summary>
            <param name="metaObject">The meta object.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetMetaType">
            <summary>
            Gets the meta type of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetCardMetaType">
            <summary>
            Gets the type of the card meta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetCardProperty">
            <summary>
            Gets the card property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.InitValidators">
            <summary>
            Inits the validators.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.InitProperties">
            <summary>
            Inits the properties.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetRowSource">
            <summary>
            Gets the row source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.LoadPropertiesFromTableRow(Mediachase.BusinessFoundation.Data.Sql.CustomTableRow)">
            <summary>
            Loads this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.OnLoad">
            <summary>
            Called when object is loaded.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="AvailableFields">The available fields.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetTotalCount(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the total count.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Lists this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.List``1(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="metaType">Type of the meta.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="availableFields">The available fields.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Save(System.Boolean)">
            <summary>
            Saves this instance.
            </summary>
            <param name="forceSave">if set to <c>true</c> [force save].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.OnSaving">
            <summary>
            Called when [saving].
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.OnSaved">
            <summary>
            Called when [saved].
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.SaveObject(System.Boolean)">
            <summary>
            Saves the object.
            </summary>
            <param name="bForceSave">if set to <c>true</c> [b force save].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.OnTransactionCommitted">
            <summary>
            Called when [transaction committed].
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.SaveCompleted(System.Boolean,System.Object)">
            <summary>
            Saves the completed.
            </summary>
            <param name="isSuccessful">if set to <c>true</c> [is successful].</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.OnDeleting">
            <summary>
            Called before a delete operation. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.OnDeleted">
            <summary>
            Called after a delete operation. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.DeleteCompleted(System.Boolean,System.Object)">
            <summary>
            Deletes the completed.
            </summary>
            <param name="isSuccessful">if set to <c>true</c> [is successful].</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetChangedFields">
            <summary>
            Gets the changed fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectChangeTracking#GetChangedFields">
            <summary>
            Gets the modified fields.
            </summary>
            <value>The modified fields.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectChangeTracking#IsFieldChanged(System.String)">
            <summary>
            Determines whether [is field changed] [the specified field name].
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>
            	<c>true</c> if [is field changed] [the specified field name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetOriginalValue(System.String)">
            <summary>
            Gets the original value.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectChangeTracking#GetOriginalValue(System.String)">
            <summary>
            Gets the original value.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#IChangeTracking#AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.ReloadReferencedFields(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Reloads the referenced fields.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.LoadCardProperties(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Loads the card.
            </summary>
            <param name="cardMetaType">Type of the card meta.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.ReloadCard(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Reloads the card.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.OnClone(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Copies the parameters.
            </summary>
            <param name="destMetaObject">The destination meta object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.InitExtensions">
            <summary>
            Inits the extensions.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.LoadExtensions(Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionActivationType)">
            <summary>
            Loads the extensions.
            </summary>
            <param name="activationType">Type of the activation.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.IsExtensionActivated``1">
            <summary>
            Determines whether is extension activated.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>
            	<c>true</c> if [is extension activated]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.IsExtensionActivated(System.Type)">
            <summary>
            Determines whether [is extension activated] [the specified extension type].
            </summary>
            <param name="extensionType">Type of the extension.</param>
            <returns>
            	<c>true</c> if [is extension activated] [the specified extension type]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.TryGetExtension``1(``0@)">
            <summary>
            Tries the get extension.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="extenson">The extenson.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.TryGetExtension(System.Type,Mediachase.BusinessFoundation.Data.Meta.IMetaObjectExtension@)">
            <summary>
            Tries the get extension.
            </summary>
            <param name="extensionType">Type of the extension.</param>
            <param name="extenson">The extenson.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetExtension(System.Type)">
            <summary>
            Gets the extension.
            </summary>
            <param name="extensionType">Type of the extension.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.GetExtension``1">
            <summary>
            Gets the extension.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.RaiseDeleteEmbeddedExtensions">
            <summary>
            Raises the delete embedded services.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.RaiseDisposeEmbeddedExtensions">
            <summary>
            Raises the dispose embedded services.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.RaisePreSaveEmbeddedExtensions">
            <summary>
            Raises the save embedded services.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObject.RaiseSaveEmbeddedExtensions">
            <summary>
            Raises the save embedded services.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.PrimaryKeyId">
            <summary>
            Gets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Options">
            <summary>
            Gets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.ObjectState">
            <summary>
            Gets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.IsValid">
            <summary>
            Gets or sets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Validators">
            <summary>
            Gets the validatord.
            </summary>
            <value>The validatord.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectChangeTracking#PrimaryKeyId">
            <summary>
            Gets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.IsChanged">
            <summary>
            Determines whether this instance is changed.
            </summary>
            <returns>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectDeleteTracking#PrimaryKeyId">
            <summary>
            Gets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Mediachase#BusinessFoundation#Data#Meta#IMetaObjectDeleteTracking#IsDeleted">
            <summary>
            Gets a value indicating whether this instance is deleted.
            </summary>
            <value>
            	<c>true</c> if this instance is deleted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified field name.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObject.InnerExtensions">
            <summary>
            Gets or sets the inner extensions.
            </summary>
            <value>The inner extensions.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty">
            <summary>
            Represents meta object property storage.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.#ctor(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObjectProperty"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="metaType">Type of the meta.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.#ctor(Mediachase.BusinessFoundation.Data.Meta.MetaObject,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObjectProperty"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="metaType">Type of the meta.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.GetMetaType">
            <summary>
            Gets the type of the meta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.SetInnerValue(System.Object)">
            <summary>
            Sets the initial value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.SetInnerValue(System.Object,System.Boolean)">
            <summary>
            Sets the inner value.
            </summary>
            <param name="value">The value.</param>
            <param name="rewriteOriginalValue">if set to <c>true</c> [rewrite original value].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.GetInnerValue">
            <summary>
            Gets the inner value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.GetValue``1">
            <summary>
            Gets the value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.GetValue``1(``0)">
            <summary>
            Gets the value.
            </summary>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.SetValue``1(``0)">
            <summary>
            Sets the value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.CheckUniqueValue(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.Nullable{Mediachase.BusinessFoundation.Data.PrimaryKeyId},System.Object)">
            <summary>
            Checks the unique value.
            </summary>
            <param name="field">The field.</param>
            <param name="ownerMetaObjectPrimaryKeyId">The owner meta object primary key id.</param>
            <param name="value">The value.</param>
            <returns>
            true if value is unique, otherwise false.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.CheckUniqueValue(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.Object)">
            <summary>
            Checks the unique value.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.CheckUniqueValue(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Checks the unique value.
            </summary>
            <param name="property">The property.</param>
            <returns>
            true if value is unique, otherwise false.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.OwnerMetaObject">
            <summary>
            Gets the owner meta object.
            </summary>
            <value>The owner meta object.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.OriginalValue">
            <summary>
            Gets the original value.
            </summary>
            <value>The original value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.IsReadOnlyLinked">
            <summary>
            Gets a value indicating whether this instance is read only linked.
            </summary>
            <value>
            	<c>true</c> if this instance is read only linked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty.IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection">
            <summary>
            Represent meta object property collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaObjectPropertyCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.Add(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Adds the internal.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Indexes the of.
            </summary>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Determines whether [contains] [the specified property].
            </summary>
            <param name="property">The property.</param>
            <returns>
            	<c>true</c> if [contains] [the specified property]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaObjectProperty"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MetaObjectPropertyCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:MetaObjectProperty"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.ControlPropertyDelegate">
            <summary>
            Represents the method that will handle the property and modify property value.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView">
            <summary>
            Represents meta view meta information. (Obsolete)
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView"/> class.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView"/> class.
            </summary>
            <param name="AssignedMetaClass">The assigned meta class.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.CombineSorting(Mediachase.BusinessFoundation.Data.SortingElementCollection[])">
            <summary>
            Combines the sorting.
            </summary>
            <param name="sources">The sources.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.CombineFilters(Mediachase.BusinessFoundation.Data.Meta.Management.MetaView,Mediachase.BusinessFoundation.Data.FilterElementCollection[])">
            <summary>
            Combines the filters.
            </summary>
            <param name="metaView">The meta view.</param>
            <param name="Sources">The sources.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List``1">
            <summary>
            Lists this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List">
            <summary>
            Lists the specified meta type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List``1(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List``1(Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List(Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List``1(Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List(Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List``1(Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List(Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified meta type.
            </summary>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List(Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference)">
            <summary>
            Lists the specified preference.
            </summary>
            <param name="preference">The preference.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.List(Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference,Mediachase.BusinessFoundation.Data.Meta.Management.ControlPropertyDelegate)">
            <summary>
            Lists the specified preference.
            </summary>
            <param name="preference">The preference.</param>
            <param name="controlDelegate">The control delegate.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.ControlMetaObjects(Mediachase.BusinessFoundation.Data.Meta.MetaObject[],Mediachase.BusinessFoundation.Data.Meta.Management.ControlPropertyDelegate)">
            <summary>
            Controls the meta objects.
            </summary>
            <param name="retVal">The ret val.</param>
            <param name="controlDelegate">The control delegate.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.GetHidenFieldNames">
            <summary>
            Gets the hiden field names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.GetHidenFieldNames(System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Meta.Management.GroupByObjectField})">
            <summary>
            Gets the hiden field names.
            </summary>
            <param name="groupObjectFields">The group object fields.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.GetTotalCount(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the total count.
            </summary>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.GetTotalCount(Mediachase.BusinessFoundation.Data.Meta.Management.IMetaViewPreference)">
            <summary>
            Gets the total count.
            </summary>
            <param name="preference">The preference.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.MetaClass">
            <summary>
            Gets or sets the meta class.
            </summary>
            <value>The meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.MetaClassName">
            <summary>
            Gets or sets the name of the meta class.
            </summary>
            <value>The name of the meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.AvailableFields">
            <summary>
            Gets the available fields.
            </summary>
            <value>The available fields.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.AvailableFieldNames">
            <summary>
            Gets or sets the available field names.
            </summary>
            <value>The available field names.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField"/> with the specified meta field name.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.Card">
            <summary>
            Gets or sets the card.
            </summary>
            <value>The card.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.CardName">
            <summary>
            Gets or sets the name of the card.
            </summary>
            <value>The name of the card.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.Filters">
            <summary>
            Gets the filters.
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.Sorting">
            <summary>
            Gets or sets the sorting.
            </summary>
            <value>The sorting.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.PrimaryGroupBy">
            <summary>
            Gets or sets the group by.
            </summary>
            <value>The group by.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.SecondaryGroupBy">
            <summary>
            Gets or sets the second group by.
            </summary>
            <value>The second group by.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaView.TotalGroupBy">
            <summary>
            Gets or sets the total group by.
            </summary>
            <value>The total group by.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller">
            <summary>
            Realises IMetaFieldInstaller for multi reference.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.OnAssignDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Called when [assign data source].
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.OnAssignValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Called when [assign validators].
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.OnUpdateDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Called when [update data source].
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.OnUpdateValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Called when [update validators].
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.OnRemoveDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Called when [remove data source].
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.OnRemoveValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Called when [remove validators].
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaFieldInstaller#AssignDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Assigns the data source.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaFieldInstaller#AssignValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Assigns the validators.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaFieldInstaller#UpdateDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Updates the data source.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaFieldInstaller#UpdateValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Updates the validators.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaFieldInstaller#RemoveDataSource(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Removes the data source.
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MultiReferenceMetaFieldInstaller.Mediachase#BusinessFoundation#Data#Meta#Management#IMetaFieldInstaller#RemoveValidators(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Removes the validators.
            </summary>
            <param name="owner">The owner.</param>
            <param name="field">The field.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject">
            <summary>
            Represents property value for multi reference type.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.#ctor(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject"/> class.
            </summary>
            <param name="activeReferenceName">Name of the active reference.</param>
            <param name="objectId">The object id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject"/> class.
            </summary>
            <param name="activeReference">The active reference.</param>
            <param name="objectId">The object id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.#ctor(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.Reset(Mediachase.BusinessFoundation.Data.Meta.MetaObjectProperty)">
            <summary>
            Resets the specified owner property.
            </summary>
            <param name="ownerProperty">The owner property.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.SetValue(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Sets the value.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="objectId">The object id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.SetValue(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Sets the value.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="objectId">The object id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.Sync">
            <summary>
            Syncs this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.GetAvailableReferences">
            <summary>
            Gets the available reference types.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.ActiveReference">
            <summary>
            Gets or sets the active reference.
            </summary>
            <value>The active reference.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.ObjectId">
            <summary>
            Gets or sets the object id.
            </summary>
            <value>The object id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.ObjectTitle">
            <summary>
            Gets or sets the object title.
            </summary>
            <value>The object title.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.MultiReferenceObject.HasValue">
            <summary>
            Gets a value indicating whether this instance has value.
            </summary>
            <value><c>true</c> if this instance has value; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.ObjectNotFoundException">
            <summary>
            The exception that is thrown when object not found.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.RecursionException">
            <summary>
            The exception that is thrown when recursion was detected.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler">
            <summary>
            Represents default schema element handler.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.CompareMetaEnumItem(Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem,Mediachase.BusinessFoundation.Data.Meta.MetaEnumItem)">
            <summary>
            Compares the meta enum item.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.Mediachase#BusinessFoundation#Data#Meta#Schema#ISchemaElementHandler#GetAvailableElements(System.String[],System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AccessLevel)">
            <summary>
            Gets the available items for specific container.
            </summary>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
            <param name="outputLevel">The output level.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.GetMetaFieldLevel(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Gets the meta field level.
            </summary>
            <param name="metaField">The meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.GetMetaClassLevel(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the meta class level.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.Mediachase#BusinessFoundation#Data#Meta#Schema#ISchemaElementHandler#BeforeWriteElements(System.Xml.XmlWriter,System.String[],System.String)">
            <summary>
            Befores the write elements.
            </summary>
            <param name="writer">The writer.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.Mediachase#BusinessFoundation#Data#Meta#Schema#ISchemaElementHandler#WriteStartElement(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the start element.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.Mediachase#BusinessFoundation#Data#Meta#Schema#ISchemaElementHandler#WriteElementProperties(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the start element.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.Mediachase#BusinessFoundation#Data#Meta#Schema#ISchemaElementHandler#WriteEndElement(System.Xml.XmlWriter,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Writes the end element.
            </summary>
            <param name="writer">The writer.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.Mediachase#BusinessFoundation#Data#Meta#Schema#ISchemaElementHandler#AfterWriteElements(System.Xml.XmlWriter,System.String[],System.String)">
            <summary>
            Afters the write elements.
            </summary>
            <param name="writer">The writer.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.Mediachase#BusinessFoundation#Data#Meta#Schema#ISchemaElementHandler#ExecuteCommand(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Applies the add command.
            </summary>
            <param name="cmd">The sync command.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.ExecuteAddCommand(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Executes the add command.
            </summary>
            <param name="cmd">The CMD.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.ExecuteUpdateCommand(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Executes the update command.
            </summary>
            <param name="cmd">The CMD.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SystemSchemaElementHandler.ExecuteRemoveCommand(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Executes the remove command.
            </summary>
            <param name="cmd">The CMD.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.IgnoreElement">
            <summary>
            Represents Schema Ignore Element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.IgnoreElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.IgnoreElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.IgnoreElement.GetParentKeyPatterns">
            <summary>
            Gets the parent keys.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.IgnoreElement.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.IgnoreElement.NamePattern">
            <summary>
            Gets or sets the key pattern.
            </summary>
            <value>The key pattern.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.IgnoreElement.ParentKeys">
            <summary>
            Gets or sets the parent keys.
            </summary>
            <value>The parent keys.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement">
            <summary>
            Represents MetaModel element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.#ctor(System.String[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> class.
            </summary>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">The container id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AccessLevel,System.String[],System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="level">The access level.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">The container id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AccessLevel,System.String[],System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> class.
            </summary>
            <param name="owner">The owner of the element.</param>
            <param name="level">The required access level.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">The container id.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">The friendly name of the element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Parse(System.String)">
            <summary>
            Parses the specified string.
            </summary>
            <param name="str">The string formated \"[ContainerName]::[Name]\".</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.TryParse(System.String,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="str">The STR.</param>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.CreateSelectAll(System.String[],System.String)">
            <summary>
            Gets the select all element string.
            </summary>
            <param name="parentKeys">The parent keys.</param>
            <param name="containerId">Name of the container.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.CreateSelectAll(System.String[],Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer)">
            <summary>
            Creates the select all.
            </summary>
            <param name="parentKeys">The parent keys.</param>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.ParentKeys">
            <summary>
            Gets or sets the parent keys.
            </summary>
            <value>The parent keys.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.ContainerId">
            <summary>
            Gets or sets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Creatable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> is creatable.
            </summary>
            <value><c>true</c> if creatable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Deletable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> is deletable.
            </summary>
            <value><c>true</c> if deletable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Updatable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> is updatable.
            </summary>
            <value><c>true</c> if updatable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Retrievable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement"/> is retrievable.
            </summary>
            <value><c>true</c> if retrievable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator">
            <summary>
            Represents xml generator of meta-model.
            </summary>
            <remarks>
            The MetaModelGenerator class expors meta model to xml format.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.#ctor(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator"/> class.
            </summary>
            <param name="schema">The schema.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.Generate">
            <summary>
            Generates the xml presentation of meta-model with specified selected elements.
            </summary>
            <returns></returns>
            <remarks>The selectedElements item should be formated "[ContainerName]::[Name]". Example: "MetaClass::Project", "MetaClass::*". If selectedElements is empty collection, returns all elements.</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.GetParentKeys(System.Collections.Generic.Stack{Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement})">
            <summary>
            Gets the parent keys.
            </summary>
            <param name="renderStack">The render stack.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.GetParentKeys(System.Collections.Generic.Stack{Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement},System.String)">
            <summary>
            Gets the last parent keys.
            </summary>
            <param name="renderStack">The render stack.</param>
            <param name="newKey">The new key.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.SelectedElements">
            <summary>
            Gets or sets the selected elements.
            </summary>
            <value>The selected elements.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGenerator.AccessLevel">
            <summary>
            Gets or sets the output level.
            </summary>
            <value>The output level.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement">
            <summary>
            Represents MetaModelGeneratorElement render info.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement.#ctor(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer,System.String[],Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement"/> class.
            </summary>
            <param name="container">The container.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="element">The element.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement.Container">
            <summary>
            Gets or sets the container.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement.ParentKeys">
            <summary>
            Gets or sets the parent keys.
            </summary>
            <value>The parent keys.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement.Element">
            <summary>
            Gets or sets the element.
            </summary>
            <value>The element.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement.IsDeferred">
            <summary>
            Gets or sets a value indicating whether this instance is deferred.
            </summary>
            <value>
            	<c>true</c> if this instance is deferred; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelGeneratorElement.IsFirstDeferedElement">
            <summary>
            Gets or sets a value indicating whether this instance is first defered element.
            </summary>
            <value>
            	<c>true</c> if this instance is first defered element; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync">
            <summary>
            Provides meta model compare and synchronization commands.
            </summary>
            <remarks>
            Use <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.FindModifications(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument,System.Xml.XmlNode)"/> to compare meta model.
            Use <see cref="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.Execute(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument,Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand[])"/> to execute synchronization commands.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.GenerateMetaModel(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument,Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement[])">
            <summary>
            Generates the current meta model.
            </summary>
            <param name="schema">The schema.</param>
            <param name="selectedElements">The selected elements. The item should be formated /Path/[ContainerName]::[Name]. If selectedElements is empty collection, returns all elements.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.FindNotDeffinedElements(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument,System.Xml.XmlNode)">
            <summary>
            Finds the not deffined elements with Empty Keys
            </summary>
            <param name="schema">The schema.</param>
            <param name="updatedMetaModel">The updated meta model.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.InnerFindNotDeffinedElements(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection,System.Collections.Generic.Stack{System.String},System.Xml.XmlNode,System.Collections.Generic.List{Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement})">
            <summary>
            Inners the find not deffined elements.
            </summary>
            <param name="list">The list.</param>
            <param name="keys">The keys.</param>
            <param name="srcRootNode">The SRC root node.</param>
            <param name="notDefinedElements">The not defined elements.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.FindModifications(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument,System.Xml.XmlNode)">
            <summary>
            Finds the modifications.
            </summary>
            <param name="schema">The schema.</param>
            <param name="updatedMetaModel">The updated meta model.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.FindModifications(System.String,System.String,System.String)">
            <summary>
            Finds the modifications.
            </summary>
            <param name="schemaFile">The schema file.</param>
            <param name="updatedMetaModelFile">The updated meta model file.</param>
            <param name="originalMetaModelPath">The original meta model path.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.FindModifications(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument,System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Finds the modifications.
            </summary>
            <param name="schema">The schema.</param>
            <param name="updatedMetaModel">The updated meta model.</param>
            <param name="originalMetaModel">The original meta model.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.InnerSyncCommandByOrderId(Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand,Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand)">
            <summary>
            Inners the sync command by order id.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.Execute(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument,Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand[])">
            <summary>
            Executes the specified commands.
            </summary>
            <param name="schema">The schema.</param>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.CreateEmptyMetaModel">
            <summary>
            Creates the empty meta model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.GetValueFromNode(System.Xml.XmlNode,Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementDataType)">
            <summary>
            Gets the value from node.
            </summary>
            <param name="xmlNode">The XML node.</param>
            <param name="dataType">Type of the data.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelSync.GetKeyFromNode(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the key from node.
            </summary>
            <param name="xmlNode">The XML node.</param>
            <param name="keyPath">The key path.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsCreatable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether the specified item is creatable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is creatable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsCreatable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Determines whether the specified item is creatable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is creatable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsCreatable(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Determines whether the specified attr is creatable.
            </summary>
            <param name="attr">The attr.</param>
            <returns>
            	<c>true</c> if the specified attr is creatable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsDeletable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether the specified item is deletable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is deletable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsDeletable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Determines whether the specified item is deletable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is deletable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsDeletable(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Determines whether the specified attr is deletable.
            </summary>
            <param name="attr">The attr.</param>
            <returns>
            	<c>true</c> if the specified attr is deletable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsUpdatable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether the specified item is updatable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is updatable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsUpdatable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Determines whether the specified item is updatable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is updatable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsUpdatable(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Determines whether the specified attr is updatable.
            </summary>
            <param name="attr">The attr.</param>
            <returns>
            	<c>true</c> if the specified attr is updatable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsRetrievable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether the specified item is retrievable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is retrievable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsRetrievable(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Determines whether the specified item is retrievable.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if the specified item is retrievable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaAttribute.CheckIsRetrievable(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Determines whether the specified attr is retrievable.
            </summary>
            <param name="attr">The attr.</param>
            <returns>
            	<c>true</c> if the specified attr is retrievable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer">
            <summary>
            Represents Schema container element.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement">
            <summary>
            Represents an Schema element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="path">The path.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.#ctor(System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementDataType)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="path">The path.</param>
            <param name="datatype">The datatype.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.#ctor(System.String,System.String,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementDataType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="friendlyName">The friendly name of the element.</param>
            <param name="pluralName">Plural name of the element.</param>
            <param name="path">The path.</param>
            <param name="key">The key.</param>
            <param name="datatype">The datatype.</param>
            <param name="handlerType">Type of the handler.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.Parent">
            <summary>
            Gets or sets the parent element.
            </summary>
            <value>The parent element.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.Id">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.PluralName">
            <summary>
            Gets or sets the name of the plural.
            </summary>
            <value>The name of the plural.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.DataType">
            <summary>
            Gets or sets the type of the data.
            </summary>
            <value>The type of the data.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.HandlerTypeName">
            <summary>
            Gets or sets the type of the handler.
            </summary>
            <value>The type of the handler.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.Handler">
            <summary>
            Gets the handler.
            </summary>
            <value>The handler.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement.UpdateOrderId">
            <summary>
            Gets or sets the update order id.
            </summary>
            <value>The update order id.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="path">The path.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.#ctor(System.String,System.String,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementDataType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">The friendly name / display name of the schema element.</param>
            <param name="pluralName">Plural name.</param>
            <param name="path">The path.</param>
            <param name="key">The key.</param>
            <param name="datatype">The datatype.</param>
            <param name="handlerType">Type of the handler.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.ChildElements">
            <summary>
            Gets the child element.
            </summary>
            <value>The child element.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.AddOrderId">
            <summary>
            Gets or sets the update order id.
            </summary>
            <value>The update order id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaContainer.RemoveOrderId">
            <summary>
            Gets or sets the update order id.
            </summary>
            <value>The update order id.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument">
            <summary>
            Represents schema document.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.FindElement(System.String)">
            <summary>
            Finds the element.
            </summary>
            <param name="elementId">The id of the element.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.InnerFindElement(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementCollection,System.String)">
            <summary>
            Find the inner element.
            </summary>
            <param name="childElements">The child elements.</param>
            <param name="elementId">The id of the element.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.LoadDefault">
            <summary>
            Loads the default.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.LoadDefault(Mediachase.BusinessFoundation.Data.Modules.ModuleManifest[])">
            <summary>
            Loads the default.
            </summary>
            <param name="istalledModules">The installed modules.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.Load(System.String)">
            <summary>
            Loads the specified file.
            </summary>
            <param name="file">The file.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.LoadXml(System.String)">
            <summary>
            Loads the XML.
            </summary>
            <param name="xml">The XML.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.LoadXml(System.Xml.XmlNode)">
            <summary>
            Loads the XML.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.CheckIgnoreElements(System.String,System.String[],System.String)">
            <summary>
            Checks the ignore elements.
            </summary>
            <param name="elementId">The element id.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="name">The name.</param>
            <returns>
            true if element is matched ignore element, otherwise false.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.ParentKeyPatternMatch(System.String[],System.String[])">
            <summary>
            Parents the key pattern match.
            </summary>
            <param name="parentKeys">The parent keys.</param>
            <param name="parentKeyPatterns">The parent key patterns.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.ChildElements">
            <summary>
            Gets the child elements.
            </summary>
            <value>The child elements.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElement"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument.Exceptions">
            <summary>
            Gets or sets the exceptions.
            </summary>
            <value>The exceptions.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementDataType">
            <summary>
            Describes datatype of schema element.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementDataType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaElementDataType.Xml">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection">
            <summary>
            Represents Selected meta model element collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Adds the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.CreateMatchPatternFromElement(Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Creates the match pattern from element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.AddRange(Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement[])">
            <summary>
            Adds the range.
            </summary>
            <param name="selectedElements">The selected elements.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Removes the specified element.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.RemoveRange(Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement[])">
            <summary>
            Removes the range.
            </summary>
            <param name="selectedElements">The selected elements.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Schema.MetaModelElement)">
            <summary>
            Determines whether colection contains the specified container and name.
            </summary>
            <param name="element">The element.</param>
            <returns>
              <c>true</c> if this collection contains the specified element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SelectedElementCollection.IsSelectAllMode">
            <summary>
            Gets a value indicating whether this instance is select all mode.
            </summary>
            <value>
            	<c>true</c> if this instance is select all mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandType">
            <summary>
            Specifies synchronization command type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandType.NotSet">
            <summary>
            NotSet
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandType.Add">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandType.Update">
            <summary>
            Update
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandType.Remove">
            <summary>
            Remove
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand">
            <summary>
            Represents Meta-model synchronization command.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.#ctor(System.String,Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandType,System.String[],System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand"/> class.
            </summary>
            <param name="elementId">The element id.</param>
            <param name="type">The type.</param>
            <param name="parentKeys">The parent keys.</param>
            <param name="srcNode">The SRC node.</param>
            <param name="destNode">The dest node.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.GetSourceElementKey(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument)">
            <summary>
            Gets the source element key.
            </summary>
            <param name="schema">The schema.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.SchemaElementId">
            <summary>
            Gets or sets the schema element.
            </summary>
            <value>The schema element.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.ParentKeys">
            <summary>
            Gets or sets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.SourceNode">
            <summary>
            Gets or sets the source node.
            </summary>
            <value>The source node.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommand.DestinationNode">
            <summary>
            Gets or sets the destination node.
            </summary>
            <value>The destination node.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandComparer">
            <summary>
            Represents SyncCommand comparer.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandComparer"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandComparer.#ctor(Mediachase.BusinessFoundation.Data.Meta.Schema.SchemaDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandComparer"/> class.
            </summary>
            <param name="schema">The schema.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Schema.SyncCommandComparer.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>The schema.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionActivationType">
            <summary>
            Specifies service activation type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionActivationType.Default">
            <summary>
            Default = ByRequest
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionActivationType.ByRequest">
            <summary>
            ByRequest
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionActivationType.OnSave">
            <summary>
            OnSave
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaObjectExtensionActivationType.OnLoad">
            <summary>
            OnLoad
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer">
            <summary>
            Represents sorting element transaformer.
            </summary>
            <remarks>
            The SortingElementTransformer class converts meta model sorting to sql-query sorting.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RowSortingElementBuilder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:RowSortingElementBuilder"/> class.
            </summary>
            <param name="ownerMetaClass">The owner meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:RowSortingElementBuilder"/> class.
            </summary>
            <param name="ownerMetaClass">The owner meta class.</param>
            <param name="metaClassSorts">The meta class filters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.Transform">
            <summary>
            Builds this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.GetColumnNameByFieldName(System.String)">
            <summary>
            Gets the name of the column name by field.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.OwnerMetaClass">
            <summary>
            Gets or sets the owner meta class.
            </summary>
            <value>The owner meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.MetaClassSorting">
            <summary>
            Gets the meta class sorting.
            </summary>
            <value>The meta class sorting.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.SortingElementTransformer.RowSorting">
            <summary>
            Gets the row sorting.
            </summary>
            <value>The row sorting.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.FileUtil">
            <summary>
            Provides meta real and temporary file utility method.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.CreateTemporaryFile(System.String,System.IO.Stream)">
            <summary>
            Creates the specified file name.
            </summary>
            <param name="FileName">Name of the file.</param>
            <param name="inputStream">The input stream.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.CreateFileInfoFromTemporaryFile(System.Guid)">
            <summary>
            Creates the file info.
            </summary>
            <param name="FileUID">The file UID.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.CleanUp">
            <summary>
            Cleans the up.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.DeleteTemporaryFile(System.Guid)">
            <summary>
            Deletes the specified file UID.
            </summary>
            <param name="FileUID">The file UID.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.IsTemporary(System.Guid)">
            <summary>
            Determines whether the specified file UID is temporary.
            </summary>
            <param name="FileUID">The file UID.</param>
            <returns>
            	<c>true</c> if the specified file UID is temporary; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.GetFileName(System.Guid)">
            <summary>
            Gets the name of the file.
            </summary>
            <param name="FileUID">The file UID.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.GetContentType(System.Guid)">
            <summary>
            Gets the type of the content.
            </summary>
            <param name="FileUID">The file UID.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.FileUtil.OpenRead(System.Guid)">
            <summary>
            Opens the read.
            </summary>
            <param name="FileUID">The file UID.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage">
            <summary>
            Represents module data storage.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage.Attributes">
            <summary>
            Gets or sets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorageCollection">
            <summary>
            Represents module data storage collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorageCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorageCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorageCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorageCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorageCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ModuleDataStorage"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetModuleManifest(System.String)">
            <summary>
            Gets the module manifest.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetInstalledModules">
            <summary>
            Gets the istalled modules.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.IsModuleInstalled(System.String)">
            <summary>
            Gets the istalled modules.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.IsModuleInstalled(Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Determines whether [is module installed] [the specified manifest].
            </summary>
            <param name="manifest">The manifest.</param>
            <returns>
            	<c>true</c> if [is module installed] [the specified manifest]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetModuleConfigurator(Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Gets the module configurator.
            </summary>
            <param name="manifest">The manifest.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.Install(Mediachase.BusinessFoundation.Data.Modules.ModuleManifest,Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Installs the specified manifest.
            </summary>
            <param name="manifest">The manifest.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.Uninstall(Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Uninstalls the specified manifest.
            </summary>
            <param name="manifest">The manifest.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.InitializeActiveModules">
            <summary>
            Initializes the active modules.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetActiveModules(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the active modules.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.IsModuleActivated(System.String,System.String)">
            <summary>
            Determines whether [is module activated] [the specified meta class].
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="moduleName">Name of the module.</param>
            <returns>
            	<c>true</c> if [is module activated] [the specified meta class]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.IsModuleActivated(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Determines whether [is module activated] [the specified manifest].
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="manifest">The manifest.</param>
            <returns>
            	<c>true</c> if [is module activated] [the specified manifest]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.Activate(System.String,System.String)">
            <summary>
            Activates the specified meta class name.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="moduleName">Name of the module.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.Activate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Activates the specified manifest.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="manifest">The manifest.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.Deactivate(System.String,System.String)">
            <summary>
            Deactivates the specified module name.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="moduleName">Name of the module.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.Deactivate(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Deactivates the specified manifest.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="manifest">The manifest.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetModuleDataStorage(System.String)">
            <summary>
            Gets the module data storage.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetModuleDataStorage(System.String,System.String)">
            <summary>
            Gets the module data storage.
            </summary>
            <param name="moduleName">Name of the module.</param>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetModuleDataStorage(Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Gets the module data storage.
            </summary>
            <param name="module">The module.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManager.GetModuleDataStorage(Mediachase.BusinessFoundation.Data.Modules.ModuleManifest,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the module data storage.
            </summary>
            <param name="module">The module.</param>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest">
            <summary>
            Represents module manifest.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.Load(System.String)">
            <summary>
            Loads the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.Save(System.String,Mediachase.BusinessFoundation.Data.Modules.ModuleManifest)">
            <summary>
            Saves the specified path.
            </summary>
            <param name="path">The path.</param>
            <param name="manifest">The manifest.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.Creator">
            <summary>
            Gets or sets the creator.
            </summary>
            <value>The creator.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.CreatorUrl">
            <summary>
            Gets or sets the creator URL.
            </summary>
            <value>The creator URL.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.FrameworkDescription">
            <summary>
            Gets or sets the framework description.
            </summary>
            <value>The framework description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.UpdateDescription">
            <summary>
            Gets or sets the update description.
            </summary>
            <value>The update description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.Dependencies">
            <summary>
            Gets or sets the dependencies.
            </summary>
            <value>The dependencies.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Modules.ModuleManifest.ConfiguratorType">
            <summary>
            Gets or sets the type of the module manager.
            </summary>
            <value>The type of the module manager.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Modules.ModuleState">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Modules.ModuleState.Uninstalled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Modules.ModuleState.Installed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Modules.ModuleState.Update">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.PrimaryKeyId">
            <summary>
            Represent primary key id value.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.PrimaryKeyId.Empty">
            <summary>
            Defines empty primary key.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.PrimaryKeyId"/> struct.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.PrimaryKeyId"/> struct.
            </summary>
            <param name="uid">The uid.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns>
            true if obj and this instance are the same type and represent the same value; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.op_Equality(Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.op_Inequality(Mediachase.BusinessFoundation.Data.PrimaryKeyId,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.op_Implicit(Mediachase.BusinessFoundation.Data.PrimaryKeyId)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Mediachase.BusinessFoundation.Data.PrimaryKeyId"/> to <see cref="T:System.Int32"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.op_Implicit(Mediachase.BusinessFoundation.Data.PrimaryKeyId)~System.Guid">
            <summary>
            Performs an implicit conversion from <see cref="T:Mediachase.BusinessFoundation.Data.PrimaryKeyId"/> to <see cref="T:System.Guid"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.op_Implicit(System.Int32)~Mediachase.BusinessFoundation.Data.PrimaryKeyId">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Mediachase.BusinessFoundation.Data.PrimaryKeyId"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.op_Explicit(System.Guid)~Mediachase.BusinessFoundation.Data.PrimaryKeyId">
            <summary>
            Performs an explicit conversion from <see cref="T:System.Guid"/> to <see cref="T:Mediachase.BusinessFoundation.Data.PrimaryKeyId"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.TryParse(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyId@)">
            <summary>
            Tries the parse.
            </summary>
            <param name="s">A string containing a primary key value time to convert.</param>
            <param name="result">The primary key value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.Parse(System.String)">
            <summary>
            Parses the specified string.
            </summary>
            <param name="s">A string containing a primary key value time to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.ToString">
            <summary>
            Returns the fully qualified type name of this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> containing a fully qualified type name.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#GetTypeCode">
            <summary>
            Returns the <see cref="T:System.TypeCode"/> for this instance.
            </summary>
            <returns>
            The enumerated constant that is the <see cref="T:System.TypeCode"/> of the class or value type that implements this interface.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToBoolean(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent Boolean value using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            A Boolean value equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToByte(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 8-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 8-bit unsigned integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToChar(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent Unicode character using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            A Unicode character equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToDateTime(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.DateTime"/> using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            A <see cref="T:System.DateTime"/> instance equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToDecimal(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.Decimal"/> number using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            A <see cref="T:System.Decimal"/> number equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToDouble(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent double-precision floating-point number using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            A double-precision floating-point number equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToInt16(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 16-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 16-bit signed integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToUInt16(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 16-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 16-bit unsigned integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToUInt32(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 32-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 32-bit unsigned integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToUInt64(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 64-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 64-bit unsigned integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToSByte(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 8-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 8-bit signed integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToSingle(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent single-precision floating-point number using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            A single-precision floating-point number equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToInt32(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 32-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 32-bit signed integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToInt64(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 64-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An 64-bit signed integer equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToString(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.String"/> using the specified culture-specific formatting information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            A <see cref="T:System.String"/> instance equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an <see cref="T:System.Object"/> of the specified <see cref="T:System.Type"/> that has an equivalent value, using the specified culture-specific formatting information.
            </summary>
            <param name="conversionType">The <see cref="T:System.Type"/> to which the value of this instance is converted.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An <see cref="T:System.Object"/> instance of type <paramref name="conversionType"/> whose value is equivalent to the value of this instance.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            	<paramref name="obj"/> is not the same type as this instance. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.CompareTo(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyId.Equals(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.PrimaryKeyId.InnerType">
            <summary>
            Gets the type of the inner.
            </summary>
            <value>The type of the inner.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil">
            <summary>
            Represent functional conversing primary key type on existing  meta model.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.ConvertMetaClassPK(System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyIdValueType)">
            <summary>
            Converts the meta class PK.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="pkType">Type of the pk.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.ConvertMetaClassPK(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.PrimaryKeyIdValueType)">
            <summary>
            Converts the meta class PK.
            </summary>
            <param name="mc">The mc.</param>
            <param name="pkType">Type of the pk.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.ConvertByRealtionship(Mediachase.BusinessFoundation.Data.Sql.Management.Relationship)">
            <summary>
            Converts the by relationship.
            </summary>
            <param name="relation">The relation.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.SetColumnAsPrimaryKey(System.String,System.String)">
            <summary>
            Sets the column as primary key.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="columnName">Name of the column.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.GetMetaClassByDataSource(System.String)">
            <summary>
            Gets the meta class by data source.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.FindRelationByTableColumn(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Finds the relation by table column.
            </summary>
            <param name="table">The table.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.FindIndexByColumn(System.String,System.String)">
            <summary>
            Finds the index by column.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.RenameColumn(System.String,System.String,System.String,System.String)">
            <summary>
            Renames the column.
            </summary>
            <param name="dstTableName">Name of the DST table.</param>
            <param name="srcTableName">Name of the SRC table.</param>
            <param name="oldColl">The old coll.</param>
            <param name="newColl">The new coll.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.GetTmpPrimaryKeyName(System.String)">
            <summary>
            Gets the name of the TMP primary key.
            </summary>
            <param name="pkName">Name of the pk.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.PrimaryKeyUtil.GetPrimaryKeyMetaField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the primary key meta field.
            </summary>
            <param name="mc">The mc.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder">
            <summary>
            Represents base sql command bulder class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder.Prefixes">
            <summary>
            Gets the sp body prefix.
            </summary>
            <value>The sp body prefix.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder.Postfixes">
            <summary>
            Gets the sp body postfix.
            </summary>
            <value>The sp body postfix.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder.TableConfig">
            <summary>
            Gets the table config.
            </summary>
            <value>The table config.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlCommandBuilder.Script">
            <summary>
            Gets or sets the script.
            </summary>
            <value>The script.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder">
            <summary>
            Represents Delete Sql Command this.Script.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder"/> class.
            </summary>
            <param name="config">The config.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder.WriteQuery">
            <summary>
            Writes the query.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder.WritePrimaryTableDelete">
            <summary>
            Writes the primary table insert.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder.WriteExtendedTableDelete(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Writes the extended table.
            </summary>
            <param name="extTable">The ext table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder.WriteDeleteColumnValue(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Writes the insert column value.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.DeleteCommandBuilder.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder">
            <summary>
            Represents Insert Sql Command this.Script.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder"/> class.
            </summary>
            <param name="config">The config.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WriteQuery">
            <summary>
            Writes the query.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WritePrimaryTableInsert">
            <summary>
            Writes the primary table insert.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WritePrimaryTableInsertNoColumns">
            <summary>
            Writes the primary table insert no columns.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WritePrimaryTableInsertColumns(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the primary table insert columns.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WritePrimaryTableInsertColumnValues(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the primary table insert column values.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WriteExtendedTableInsert(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Writes the extended table.
            </summary>
            <param name="extTable">The ext table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WriteExtendedTableInsertColumns(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the extended table insert columns.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WriteExtendedTableInsertColumnValues(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the extended table insert column values.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WriteSelectIdentity">
            <summary>
            Writes the select identity.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.WriteInsertColumnValue(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Writes the insert column value.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.PrimaryKeyHasIdentity">
            <summary>
            Gets a value indicating whether [primary key has identity].
            </summary>
            <value>
            	<c>true</c> if [primary key has identity]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.PrimaryKeyId">
            <summary>
            Gets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.InsertCommandBuilder.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex">
            <summary>
            Represents a Microsoft SQL Server table index. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.#ctor(System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex"/> class.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="indexName">Name of the index.</param>
            <param name="indexKeys">The index keys.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.GetTableIndex(System.String)">
            <summary>
            Gets the index of the table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.DropIndex">
            <summary>
            Drops the index.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.CreateIndex">
            <summary>
            Creates the index.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.FillProperties">
            <summary>
            Fills the properties.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.GetTableIndexPropertyQuery(System.String,System.String)">
            <summary>
            Gets the table index property query.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="indexName">Name of the index.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.IndexKeys">
            <summary>
            Gets the index keys.
            </summary>
            <value>The index keys.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.IsClusteredIndex">
            <summary>
            Gets a value indicating whether this instance is clustered index.
            </summary>
            <value>
            	<c>true</c> if this instance is clustered index; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableIndex.IsPrimaryKeyIndex">
            <summary>
            Gets a value indicating whether this instance is primary key index.
            </summary>
            <value>
            	<c>true</c> if this instance is primary key index; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder">
            <summary>
            Represents Update Sql Command this.Script.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder"/> class.
            </summary>
            <param name="config">The config.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteQuery">
            <summary>
            Writes the query.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WritePrimaryTableUpdate">
            <summary>
            Writes the primary table insert.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WritePrimaryTableUpdateSet(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the primary table insert columns.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteExtendedTableUpdate(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Writes the extended table.
            </summary>
            <param name="extTable">The ext table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteExtendedTableUpdateSet(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the extended table insert columns.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteExtendedTableInsert(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Writes the extended table insert.
            </summary>
            <param name="extTable">The ext table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteExtendedTableInsertColumns(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the extended table insert columns.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteExtendedTableInsertColumnValues(Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Writes the extended table insert column values.
            </summary>
            <param name="columns">The columns.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteInsertColumnValue(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Writes the insert column value.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.WriteUpdateColumnValue(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Writes the insert column value.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.UpdateCommandBuilder.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.TemplateResolver">
            <summary>
            Represents template resolver.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.TemplateResolver"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.AddSource(System.String,Mediachase.BusinessFoundation.Data.ITemplateSource)">
            <summary>
            Adds the source.
            </summary>
            <param name="name">The name.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.RemoveSource(System.String)">
            <summary>
            Removes the source.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.RemoveAllSources">
            <summary>
            Removes all sources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.ResolveAll(System.String)">
            <summary>
            Resolves all templates from string and return string.
            </summary>
            <param name="stringWithTemplate">The string with template.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.Resolve(System.String,System.String)">
            <summary>
            Resolves the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.Resolve(System.String)">
            <summary>
            Resolves the specified single string.
            </summary>
            <param name="singleString">The single string.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.GetValue(System.String,System.String,System.String)">
            <summary>
            Resolves the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="key">The key.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.GetValue(System.String,System.String)">
            <summary>
            Resolves the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateResolver.GetValue(System.String)">
            <summary>
            Resolves the specified single string.
            </summary>
            <param name="singleString">The single string, formatted "{source:key}".</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.TemplateResolver.Current">
            <summary>
            Gets or sets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.TemplateSource">
            <summary>
            Represents template source.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.TemplateSource"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateSource.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.TemplateSource"/> class.
            </summary>
            <param name="externalSource">The external source.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateSource.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateSource.GetItemPropertyInfo">
            <summary>
            Gets the item property info.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TemplateSource.Mediachase#BusinessFoundation#Data#ITemplateSource#GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.TemplateSource.InnerValues">
            <summary>
            Gets the inner values.
            </summary>
            <value>The inner values.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger">
            <summary>
            Represents a trigger that executes validator and condition if meta object modified.
            </summary>
            <remarks>
            Triggerts allows to run custom 
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="description">The description.</param>
            <param name="create">if set to <c>true</c> [create].</param>
            <param name="update">if set to <c>true</c> [update].</param>
            <param name="delete">if set to <c>true</c> [delete].</param>
            <param name="conditionName">Name of the condition.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.GetConditionMethod">
            <summary>
            Gets the condition method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.GetActionMethod">
            <summary>
            Gets the action method.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.Create">
            <summary>
            Gets or sets the Boolean property value that specifies whether the trigger is fired when meta object is created.
            </summary>
            <value><c>true</c> if insert; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.Update">
            <summary>
            Gets or sets the Boolean property value that specifies whether the trigger is fired when meta object is updated.
            </summary>
            <value><c>true</c> if insert; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.Delete">
            <summary>
            Gets or sets the Boolean property value that specifies whether the trigger is fired when meta object is deleted.
            </summary>
            <value><c>true</c> if insert; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.ConditionName">
            <summary>
            Gets or sets the type of the condition.
            </summary>
            <value>The type of the condition.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.ConditionInParameters">
            <summary>
            Gets or sets the condition in parameters.
            </summary>
            <value>The condition in parameters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.ActionName">
            <summary>
            Gets or sets the type of the action.
            </summary>
            <value>The type of the action.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.Trigger.ActionInParameters">
            <summary>
            Gets or sets the action in parameters.
            </summary>
            <value>The action in parameters.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager">
            <summary>
            Provides trigger management methods.
            </summary>
            <remarks>
            The TriggerManager class allows to add (remove) triggers to (from) specified meta class.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.#cctor">
            <summary>
            Initializes the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.Register(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Registers the specified meta object.
            </summary>
            <param name="metaObject">The meta object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.IsRegistered(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Determines whether the specified meta object is registered.
            </summary>
            <param name="metaObject">The meta object.</param>
            <returns>
            	<c>true</c> if the specified meta object is registered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.RegisterTriggerParameter(Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter)">
            <summary>
            Adds the trigger parameter.
            </summary>
            <param name="param">The param.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.AssignTransactionScope(Mediachase.BusinessFoundation.Data.TransactionScope)">
            <summary>
            Assigns the with transaction.
            </summary>
            <param name="tran">The tran.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.SaveCompleted(System.Boolean,System.Object)">
            <summary>
            Saves the completed.
            </summary>
            <param name="isSuccessful">if set to <c>true</c> [is successful].</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.CallTriggers(System.Guid)">
            <summary>
            Calls the triggers.
            </summary>
            <param name="transactionUid">The transaction uid.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.GetInParemeterAsObject(Mediachase.BusinessFoundation.Data.Meta.Management.TriggerMethodInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Gets the in paremeter as object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.GetTrigger(System.String,System.String)">
            <summary>
            Gets the trigger.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.GetTrigger(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String)">
            <summary>
            Gets the trigger.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.GetTriggers(System.String)">
            <summary>
            Gets the triggers.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.GetTriggers(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the triggers.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.SetTriggers(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.Trigger[])">
            <summary>
            Sets the triggers.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="triggers">The triggers.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.SetTriggers(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.Trigger[])">
            <summary>
            Sets the triggers.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="triggers">The triggers.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.AddTrigger(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.Trigger)">
            <summary>
            Adds the trigger.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.AddTrigger(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.Trigger)">
            <summary>
            Adds the trigger.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.RemoveTrigger(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.Trigger)">
            <summary>
            Removes the trigger.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="oldItem">The old item.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.RemoveTrigger(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.Trigger)">
            <summary>
            Removes the trigger from the referenced meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="oldItem">The trigger to remove.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.RemoveTriggerAt(System.String,System.Int32)">
            <summary>
            Removes the trigger at specified index.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="index">The index of the trigger to remove.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.RemoveTriggerAt(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Int32)">
            <summary>
            Removes the trigger at.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.GetActionMethod(System.String)">
            <summary>
            Gets the action method associated with the method name.
            </summary>
            <param name="methodName">Name of the method.</param>
            <returns>A TriggerMethodInfo for the specified method.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.GetConditionMethod(System.String)">
            <summary>
            Gets the condition method associated with the method name.
            </summary>
            <param name="methodName">Name of the method.</param>
            <returns>A TriggerMethodInfo for the specified method.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.LoadTriggerMethods(System.String)">
            <summary>
            Loads the trigger methods.
            </summary>
            <param name="assemblyString">The assembly string.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.LoadTriggerMethods(System.Reflection.Assembly)">
            <summary>
            Loads the trigger methods in the given assembly.
            </summary>
            <param name="assembly">The assembly to use.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.TriggerParameters">
            <summary>
            Gets the trigger parameters.
            </summary>
            <value>The trigger parameters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.ProcessedParameters">
            <summary>
            Gets the processed parameters.
            </summary>
            <value>The processed parameters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.ConditionMethods">
            <summary>
            Gets the condition methods.
            </summary>
            <value>The condition methods.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerManager.ActionMethods">
            <summary>
            Gets the action methods.
            </summary>
            <value>The action methods.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter">
            <summary>
            Represents Trigger Parameter.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter.#ctor(Mediachase.BusinessFoundation.Data.Meta.MetaObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter"/> class.
            </summary>
            <param name="metaObject">The meta object.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter.MetaObject">
            <summary>
            Gets or sets the meta object.
            </summary>
            <value>The meta object.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TriggerParameter.State">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1">
            <summary>
            Represents object array data reader.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.#ctor(`0[])">
            <summary>
            Initializes a new instance of the <see cref="T:ObjectArrayDataReader"/> class.
            </summary>
            <param name="array">The array.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.LoadProperties(System.Type)">
            <summary>
            Loads the fields info.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetProperties">
            <summary>
            Gets the properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetNextIndex">
            <summary>
            Gets the index of the next.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.ThrowIfDataReaderWasClosed">
            <summary>
            Throws if data reader is closed.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.Close">
            <summary>
            Closes the <see cref="T:System.Data.IDataReader"></see> 0bject.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetSchemaTable">
            <summary>
            Returns a <see cref="T:System.Data.DataTable"></see> that describes the column metadata of the <see cref="T:System.Data.IDataReader"></see>.
            </summary>
            <returns>
            A <see cref="T:System.Data.DataTable"></see> that describes the column metadata.
            </returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.IDataReader"></see> is closed. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.Read">
            <summary>
            Advances the <see cref="T:System.Data.IDataReader"></see> to the next record.
            </summary>
            <returns>
            true if there are more rows; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetBoolean(System.Int32)">
            <summary>
            Gets the value of the specified column as a Boolean.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>The value of the column.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetByte(System.Int32)">
            <summary>
            Gets the 8-bit unsigned integer value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>
            The 8-bit unsigned integer value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldOffset">The index within the field from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of bytes read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetChar(System.Int32)">
            <summary>
            Gets the character value of the specified column.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <returns>
            The character value of the specified column.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>
            Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.
            </summary>
            <param name="i">The zero-based column ordinal.</param>
            <param name="fieldoffset">The index within the row from which to start the read operation.</param>
            <param name="buffer">The buffer into which to read the stream of bytes.</param>
            <param name="bufferoffset">The index for buffer to start the read operation.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>The actual number of characters read.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetData(System.Int32)">
            <summary>
            Gets an <see cref="T:System.Data.IDataReader"></see> to be used when the field points to more remote structured data.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            An <see cref="T:System.Data.IDataReader"></see> to be used when the field points to more remote structured data.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetFieldType(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Type"></see> information corresponding to the type of <see cref="T:System.Object"></see> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The <see cref="T:System.Type"></see> information corresponding to the type of <see cref="T:System.Object"></see> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"></see>.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetDataTypeName(System.Int32)">
            <summary>
            Gets the data type information for the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The data type information for the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetDateTime(System.Int32)">
            <summary>
            Gets the date and time data value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The date and time data value of the spcified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetDecimal(System.Int32)">
            <summary>
            Gets the fixed-position numeric value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The fixed-position numeric value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetDouble(System.Int32)">
            <summary>
            Gets the double-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The double-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetFloat(System.Int32)">
            <summary>
            Gets the single-precision floating point number of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The single-precision floating point number of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetGuid(System.Int32)">
            <summary>
            Returns the GUID value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The GUID value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetInt16(System.Int32)">
            <summary>
            Gets the 16-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 16-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetInt32(System.Int32)">
            <summary>
            Gets the 32-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 32-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetInt64(System.Int32)">
            <summary>
            Gets the 64-bit signed integer value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The 64-bit signed integer value of the specified field.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetName(System.Int32)">
            <summary>
            Gets the name for the field to find.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The name of the field or the empty string (""), if there is no value to return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetOrdinal(System.String)">
            <summary>
            Return the index of the named field.
            </summary>
            <param name="name">The name of the field to find.</param>
            <returns>The index of the named field.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetString(System.Int32)">
            <summary>
            Gets the string value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>The string value of the specified field.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetValue(System.Int32)">
            <summary>
            Return the value of the specified field.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            The <see cref="T:System.Object"></see> which will contain the field value upon return.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.GetValues(System.Object[])">
            <summary>
            Gets all the attribute fields in the collection for the current record.
            </summary>
            <param name="values">An array of <see cref="T:System.Object"></see> to copy the attribute fields into.</param>
            <returns>
            The number of instances of <see cref="T:System.Object"></see> in the array.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.IsDBNull(System.Int32)">
            <summary>
            Return whether the specified field is set to null.
            </summary>
            <param name="i">The index of the field to find.</param>
            <returns>
            true if the specified field is set to null. Otherwise, false.
            </returns>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"></see>. </exception>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.InnerArray">
            <summary>
            Gets the inner array.
            </summary>
            <value>The inner array.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.Depth">
            <summary>
            Gets a value indicating the depth of nesting for the current row.
            </summary>
            <value></value>
            <returns>The level of nesting.</returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.IsClosed">
            <summary>
            Gets a value indicating whether the data reader is closed.
            </summary>
            <value></value>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.
            </summary>
            <value></value>
            <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.FieldCount">
            <summary>
            Gets the number of columns in the current row.
            </summary>
            <value></value>
            <returns>When not positioned in a valid recordset, 0; otherwise the number of columns in the current record. The default is -1.</returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.Item(System.String)">
            <summary>
            Gets the <see cref="T:Object"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ObjectArrayDataReader`1.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Object"/> with the specified i.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.ReferenceFieldValidator">
            <summary>
            Represents reference field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ReferenceFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.ReferenceFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ReferenceFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ReferenceFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2">
            <summary>
            Represents serializable dictionary.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SerializableDictionary`2"/> class.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object containing the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"/>.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> structure containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2"/>.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The XML writer to use.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The XML reader to use.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Reads the XML.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SerializableDictionary`2.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            Gets the schema.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.SortingElement">
            <summary>
            Represents sorting element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.SortingElement"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.Ascending(System.String)">
            <summary>
            Ascendings the specified source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.Descending(System.String)">
            <summary>
            Descendings the specified source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.#ctor(System.String,Mediachase.BusinessFoundation.Data.SortingElementType)">
            <summary>
            Initializes a new instance of the <see cref="T:SortingElement"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="type">The type.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.op_Equality(Mediachase.BusinessFoundation.Data.SortingElement,Mediachase.BusinessFoundation.Data.SortingElement)">
            <summary>
            Operator ==s the specified field1.
            </summary>
            <param name="field1">The field1.</param>
            <param name="field2">The field2.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.op_Inequality(Mediachase.BusinessFoundation.Data.SortingElement,Mediachase.BusinessFoundation.Data.SortingElement)">
            <summary>
            Operator !=s the specified field1.
            </summary>
            <param name="field1">The field1.</param>
            <param name="field2">The field2.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElement.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.SortingElement.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.SortingElement.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElementCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SortingElementCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElementCollection.#ctor(Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:SortingElementCollection"/> class.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElementCollection.AddRange(Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Adds the range.
            </summary>
            <param name="sorts">The sorts.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElementCollection.ContainsAny(Mediachase.BusinessFoundation.Data.SortingElement)">
            <summary>
            Determines whether the specified sorting contains any.
            </summary>
            <param name="sorting">The sorting.</param>
            <returns>
            	<c>true</c> if the specified sorting contains any; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElementCollection.ContainsAny(System.String)">
            <summary>
            Determines whether the specified sorting source contains any.
            </summary>
            <param name="sortingSource">The sorting source.</param>
            <returns>
            	<c>true</c> if the specified sorting source contains any; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElementCollection.AddRange(Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Adds the range.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.SortingElementCollection.ToArray">
            <summary>
            Toes the array.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.SortingElementType">
            <summary>
            Specifies sorting element type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.SortingElementType.Asc">
            <summary>
            A sort is ascending.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.SortingElementType.Desc">
            <summary>
            A sort is descending.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetTable">
            <summary>
            Gets the table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetExtendedTables">
            <summary>
            Gets the extended tables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetJoinedTables">
            <summary>
            Gets the joined tables.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow"/> class.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow"/> class.
            </summary>
            <param name="config">The config.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Table,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow"/> class.
            </summary>
            <param name="table">The table.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow"/> class.
            </summary>
            <param name="config">The config.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow"/> class.
            </summary>
            <param name="table">The table.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow"/> class.
            </summary>
            <param name="config">The config.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Lists the specified table.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Lists the specified config.
            </summary>
            <param name="config">The config.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified table.
            </summary>
            <param name="table">The table.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified config.
            </summary>
            <param name="config">The config.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified table.
            </summary>
            <param name="table">The table.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Lists the specified config.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified table.
            </summary>
            <param name="table">The table.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified table.
            </summary>
            <param name="table">The table.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Lists the specified config.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified config.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified table.
            </summary>
            <param name="table">The table.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.List(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.SortingElementCollection,System.Int32,System.Int32)">
            <summary>
            Lists the specified config.
            </summary>
            <param name="config">The config.</param>
            <param name="sorting">The sorting.</param>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetTotalCount(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the total count.
            </summary>
            <param name="table">The table.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetTotalCount(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the total count.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetReader(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Table[])">
            <summary>
            Gets the reader.
            </summary>
            <param name="table">The table.</param>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetReader(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the reader.
            </summary>
            <param name="table">The table.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetReader(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the reader.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetReader(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Gets the reader.
            </summary>
            <param name="table">The table.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetReader(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Gets the reader.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetTable(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Gets the table.
            </summary>
            <param name="config">The config.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetTable(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the table.
            </summary>
            <param name="table">The table.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.GetTable(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Gets the table.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Delete">
            <summary>
            Deletes this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Delete(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Deletes the specified primary key id.
            </summary>
            <param name="config">The config.</param>
            <param name="primaryKeyId">The primary key id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Load(System.Data.IDataReader)">
            <summary>
            Loads the specified reader.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.CreateColumns">
            <summary>
            Creates the columns.
            </summary>
            
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.CreateParameterList">
            <summary>
            Creates the parameter list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified column name].
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns>
            	<c>true</c> if [contains] [the specified column name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="ColumnName">Name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Extract(Mediachase.BusinessFoundation.Data.Sql.Management.Table,System.String)">
            <summary>
            Extracts the specified table.
            </summary>
            <param name="table">The table.</param>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Extract(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,System.String)">
            <summary>
            Extracts the specified config.
            </summary>
            <param name="config">The config.</param>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Extract(System.String)">
            <summary>
            Extracts the specified prefix.
            </summary>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Primary">
            <summary>
            Gets the primary.
            </summary>
            <value>The primary.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.PrimaryKeyId">
            <summary>
            Gets or sets the primary key id.
            </summary>
            <value>The primary key id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.CustomTableRow.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.ComputedColumn">
            <summary>
            Represents an auto calculated column. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ComputedColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.ComputedColumn"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ComputedColumn.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.ComputedColumn"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="expression">The expression.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.ComputedColumn.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.ComputedColumn.Expression">
            <summary>
            Gets or sets the formula.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedColumn">
            <summary>
            Represents joined column from joined table. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:JoinedColumn"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedColumn.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:JoinedColumn"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="alias">The alias.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedColumn.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedColumn.Alias">
            <summary>
            Gets the alias.
            </summary>
            <value>The alias.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedTable">
            <summary>
            Represents joined table from TableConfig.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:JoinedTable"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedTable.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Relationship,Mediachase.BusinessFoundation.Data.Sql.Management.JoinedColumn[])">
            <summary>
            Initializes a new instance of the <see cref="T:JoinedTable"/> class.
            </summary>
            <param name="relation">The relation.</param>
            <param name="columns">The columns.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedTable.Relation">
            <summary>
            Gets the relation.
            </summary>
            <value>The relation.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedTable.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.JoinedTable.JoinCondition">
            <summary>
            Gets or sets the join condition.
            </summary>
            <value>The join condition.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.JoinType">
            <summary>
            Specifies join type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.JoinType.Inner">
            <summary>
            A join that displays only the rows that have a match in both joined tables.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.JoinType.LeftOuter">
            <summary>
            All rows from the first-named table (the "left" table, which appears leftmost in the JOIN clause) are included. Unmatched rows in the right table do not appear. 
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.JoinType.RightOuter">
            <summary>
             All rows in the second-named table (the "right" table, which appears rightmost in the JOIN clause) are included. Unmatched rows in the left table are not included. 
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.JoinType.FullOuterJoin">
            <summary>
            All rows in all joined tables are included, whether they are matched or not. 
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.JoinType.CrossJoin">
            <summary>
            A join whose result set includes one row for each possible pairing of rows from the two tables.  
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig">
            <summary>
            Represent complex table config information.
            </summary>
            <remarks>
            The TableConfig class combines information about primary, extended and joinded tables, computed columns and sub table config.
            The meta class uses table config to create SQL query.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:McTableConfig"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Table[],Mediachase.BusinessFoundation.Data.Sql.Management.JoinedTable[])">
            <summary>
            Initializes a new instance of the <see cref="T:McTableConfig"/> class.
            </summary>
            <param name="primaryTable">The primary table.</param>
            <param name="extendedTables">The extended tables.</param>
            <param name="joinedTables">The joined tables.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Table[])">
            <summary>
            Initializes a new instance of the <see cref="T:McTableConfig"/> class.
            </summary>
            <param name="primaryTable">The primary table.</param>
            <param name="extendedTables">The extended tables.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Initializes a new instance of the <see cref="T:McTableConfig"/> class.
            </summary>
            <param name="primaryTable">The primary table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.GetSubConfig(System.String)">
            <summary>
            Gets the sub configs.
            </summary>
            <param name="prefix">The prefix.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.Primary">
            <summary>
            Gets or sets the primary.
            </summary>
            <value>The primary.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.Extended">
            <summary>
            Gets the extended.
            </summary>
            <value>The extended.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.Joined">
            <summary>
            Gets the joined.
            </summary>
            <value>The joined.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.ComputedColumns">
            <summary>
            Gets the computed columns.
            </summary>
            <value>The computed columns.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig.SubConfigs">
            <summary>
            Gets the sub configs.
            </summary>
            <value>The sub configs.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection">
            <summary>
            Represents collection of relationship. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ColumnCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.AddInternal(Mediachase.BusinessFoundation.Data.Sql.Management.Relationship)">
            <summary>
            Adds the internal.
            </summary>
            <param name="relation">The relation.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.IndexOf(Mediachase.BusinessFoundation.Data.Sql.Management.Relationship)">
            <summary>
            Indexes the of.
            </summary>
            <param name="relation">The relation.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.Contains(Mediachase.BusinessFoundation.Data.Sql.Management.Relationship)">
            <summary>
            Determines whether [contains] [the specified relation].
            </summary>
            <param name="relation">The relation.</param>
            <returns>
            	<c>true</c> if [contains] [the specified column]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.RemoveInternal(Mediachase.BusinessFoundation.Data.Sql.Management.Relationship)">
            <summary>
            Removes the internal.
            </summary>
            <param name="relation">The relation.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.Get(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the relationship by specified pk table, primary key column, foreign key table and foreign key column.
            </summary>
            <param name="pkTable">The pk table.</param>
            <param name="pkColumn">The pk column.</param>
            <param name="fkTable">The fk table.</param>
            <param name="fkColumn">The fk column.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Relationship"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Relationship"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship">
            <summary>
            Represents a Microsoft SQL Server relationship. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.#ctor(System.String,System.String,System.String[],System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Relationship"/> class.
            </summary>
            <param name="pkTable">The pk table.</param>
            <param name="pkName">Name of the pk.</param>
            <param name="pkColumns">The pk columns.</param>
            <param name="fkTable">The fk table.</param>
            <param name="fkName">Name of the fk.</param>
            <param name="fkColumns">The fk columns.</param>
            <param name="cascadeDelete">if set to <c>true</c> we enable cascading deletes.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.PrimaryKeyTable">
            <summary>
            Gets the primary key table.
            </summary>
            <value>The primary key table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.PrimaryKeyName">
            <summary>
            Gets the name of the primary key.
            </summary>
            <value>The name of the primary key.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.PrimaryKeyColumns">
            <summary>
            Gets the primary key columns.
            </summary>
            <value>The primary key columns.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.ForeignKeyTable">
            <summary>
            Gets the foreign key table.
            </summary>
            <value>The foreign key table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.ForeignKeyName">
            <summary>
            Gets the name of the foreign key.
            </summary>
            <value>The name of the foreign key.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Relationship.ForeignKeyColumns">
            <summary>
            Gets the foreign key columns.
            </summary>
            <value>The foreign key columns.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.PrimaryKey">
            <summary>
            Represents a Microsoft SQL Server primary key. 
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.PrimaryKey.OwnerTable">
            <summary>
            Gets the owner table.
            </summary>
            <value>The owner table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.PrimaryKey.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.PrimaryKey.ColumnName">
            <summary>
            Gets the name of the column.
            </summary>
            <value>The name of the column.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.PrimaryKey.KeySeq">
            <summary>
            Gets the sequence number of the column in a multicolumn primary key.
            </summary>
            <value>The key seq.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig">
            <summary>
            Represents sub table config from TableConfig.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig.#ctor(System.String,Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.Sql.Management.Relationship)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig"/> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="config">The config.</param>
            <param name="relationship">The relationship.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig.TableConfig">
            <summary>
            Gets or sets the mc table config.
            </summary>
            <value>The mc table config.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig.Prefix">
            <summary>
            Gets or sets the prefix.
            </summary>
            <value>The prefix.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig.Relationship">
            <summary>
            Gets or sets the relationship.
            </summary>
            <value>The relationship.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.SubTableConfig.AdditionalJoinCondition">
            <summary>
            Gets or sets the additional join condition.
            </summary>
            <value>The additional join condition.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder">
            <summary>
            Represents select command builder.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.RaiseEvent(System.EventHandler)">
            <summary>
            Raises the event.
            </summary>
            <param name="eventHadler">The event hadler.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder"/> class.
            </summary>
            <param name="tableName">Name of the table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.#ctor(System.String,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SelectCommandBuilder"/> class.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig,Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:SelectCommandBuilder"/> class.
            </summary>
            <param name="config">The config.</param>
            <param name="filters">The filters.</param>
            <param name="sorting">The sorting.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Initializes a new instance of the <see cref="T:SelectCommandBuilder"/> class.
            </summary>
            <param name="config">The config.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.GetTableAlias(System.String,Mediachase.BusinessFoundation.Data.Sql.Management.Relationship)">
            <summary>
            Gets the table alias.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="relationship">The relationship.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.SetTableAlias(System.String,Mediachase.BusinessFoundation.Data.Sql.Management.Relationship,System.String)">
            <summary>
            Sets the table alias.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="relationship">The relationship.</param>
            <param name="alias">The alias.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.GetTableAlias(System.String,System.String)">
            <summary>
            Gets the table alias.
            </summary>
            <param name="prefix">The table prefix.</param>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.GetSourceInfo(System.String,System.String@,System.String@)">
            <summary>
            Gets the source info.
            </summary>
            <param name="sourceName">Name of the source.</param>
            <param name="columnName">Name of the column.</param>
            <param name="alias">The alias.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.GetSourceInfo(System.String,System.String@,System.String@,System.String,Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Gets the source info.
            </summary>
            <param name="sourceName">Name of the source.</param>
            <param name="columnName">Name of the column.</param>
            <param name="alias">The alias.</param>
            <param name="prefix">The prefix.</param>
            <param name="tableConfig">The table config.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.WriteQuery">
            <summary>
            Creates the query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.WriteWhereElement">
            <summary>
            Creates the where element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.WriteFilterElementCollection(Mediachase.BusinessFoundation.Data.FilterElementCollection,System.String)">
            <summary>
            Converts the filter elements to SQL string.
            </summary>
            <param name="filters">The filters.</param>
            <param name="separator">The separator.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.WriteFilterElementValue(Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Values to SQL string.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.GetFilterElementString(Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Writes the filter element.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.WriteFilterElement(Mediachase.BusinessFoundation.Data.FilterElement)">
            <summary>
            Converts the filter element to SQL string.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.WriteSortingElementCollection">
            <summary>
            Wrires the sorting element collection.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.Filters">
            <summary>
            Gets the filters.
            </summary>
            <value>The filters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.Sorting">
            <summary>
            Gets the sorting.
            </summary>
            <value>The sorting.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.CustomSelectedField">
            <summary>
            Gets or sets the custom select.
            </summary>
            <value>The custom select.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.MaxCount">
            <summary>
            Gets or sets the max count.
            </summary>
            <value>The max count.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilder.InnerBuilder">
            <summary>
            Gets the inner builder.
            </summary>
            <value>The inner builder.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilderParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilderParameter"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilderParameter.#ctor(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilderParameter"/> class.
            </summary>
            <param name="query">The query.</param>
            <param name="sqlParams">The SQL params.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilderParameter.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilderParameter.Prefix">
            <summary>
            Gets or sets the sp body prefix.
            </summary>
            <value>The sp body prefix.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SelectCommandBuilderParameter.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlScript">
            <summary>
            Represents Sql Script .
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SqlScript"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SqlScript"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.AddParameter(System.Data.SqlClient.SqlParameter)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="param">The param.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.AddParameter(System.String,System.Object)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.AddParameter(System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="dbType">Type of the db.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.AddAutoParameter(System.Data.SqlDbType,System.Object)">
            <summary>
            Adds the auto parameter.
            </summary>
            <param name="dbType">Type of the db.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.AddParameter(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="dbType">Type of the db.</param>
            <param name="size">The size.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.GetCreateSPScript(System.String)">
            <summary>
            Gets the create storage procedure script.
            </summary>
            <param name="spName">Name of the sp.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.GetCreateSPScript(System.String,System.String[],System.String[])">
            <summary>
            Gets the create storage procedure script.
            </summary>
            <param name="spName">Name of the sp.</param>
            <param name="scriptPrefix">The script prefix.</param>
            <param name="scriptPostfix">The script postfix.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.CreateSP(System.String)">
            <summary>
            Executes the create storage procedure script.
            </summary>
            <param name="spName">Name of the sp.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.CreateSP(System.String,System.String[],System.String[])">
            <summary>
            Executes the create storage procedure script.
            </summary>
            <param name="spName">Name of the storage procedure.</param>
            <param name="scriptPrefix">The script prefix.</param>
            <param name="scriptPostfix">The script postfix.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.Execute">
            <summary>
            Executes the script.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.ExecuteSql">
            <summary>
            Optimizeds the execute using sp_executesql.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlScript.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlScript.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlScript.Text">
            <summary>
            Gets or sets the script.
            </summary>
            <value>The script.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.StringCollection">
            <summary>
            Represents string collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.StringCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.StringCollection"/> class.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.StringFieldValidator">
            <summary>
            Represents string field validator.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.StringFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.StringFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.StringFieldValidator.EvaluateIsValid">
            <summary>
            Evaluates the is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.StringFieldValidator.MaxLength">
            <summary>
            Gets or sets the length of the max.
            </summary>
            <value>The length of the max.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.StringFieldValidator.AllowNull">
            <summary>
            Gets or sets a value indicating whether [allow null].
            </summary>
            <value><c>true</c> if [allow null]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.StringFieldValidator.RegexPattern">
            <summary>
            Gets or sets the regex pattern.
            </summary>
            <value>The regex pattern.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.TimeZoneInfo">
            <summary>
            The layout of the TZI value in the Windows registry.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TimeZoneInfo.#ctor(System.Int32,System.Int32,System.Int32,Mediachase.BusinessFoundation.Data.DaylightLimit,Mediachase.BusinessFoundation.Data.DaylightLimit)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.TimeZoneInfo"/> struct.
            </summary>
            <param name="bias">The bias.</param>
            <param name="standardBias">The standard bias.</param>
            <param name="daylightBias">The daylight bias.</param>
            <param name="standardDate">The standard date.</param>
            <param name="daylightDate">The daylight date.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TimeZoneInfo.LoadFromRawData(System.Byte[])">
            <summary>
            Interprets raw byte data as a .NET structure.
            </summary>
            <param name="rawData">The data to interpret.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.TransactionScope">
            <summary>
            Represents transaction scope.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TransactionScope.#ctor(Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.TransactionScope"/> class.
            </summary>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TransactionScope.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TransactionScope.Dispose(System.Boolean)">
            <summary>
            Disposes the specified disposing.
            </summary>
            <param name="disposing">if set to <c>true</c> [disposing].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TransactionScope.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.TransactionScope.AddCallback(Mediachase.BusinessFoundation.Data.Sql.TransactionCallback,System.Object)">
            <summary>
            Adds the callback.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.TransactionScope.SqlTransactionScope">
            <summary>
            Gets the SQL transaction scope.
            </summary>
            <value>The SQL transaction scope.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.TransactionScope.TransactionId">
            <summary>
            Gets the transaction id.
            </summary>
            <value>The transaction id.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.UserTimeZone">
            <summary>
            Represents an user time zone used for the date-time auto-calculation.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone.WindowsTimeZoneKey">
            <summary>
            The regular expression to use when parsing
            the display name of a time zone.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._name">
            <summary>
            The <see cref="T:System.String"/> used when
            displaying the time zone to the user.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._displayName">
            <summary>
            The <see cref="T:System.String"/> used when
            displaying the time zone to the user.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._description">
            <summary>
            Representative cities belonging to the time zone
            or other characteristic description of the zone.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._standardName">
            <summary>
            The standard time zone name.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._daylightName">
            <summary>
            The daylight saving time zone name.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._biasReader">
            <summary>
            The actual UTC bias specification.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._isDaylightDynamic">
            <summary>
            Determines whether the time zone uses different dates
            for the daylight saving period in different years.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._firstDaylightEntry">
            <summary>
            The first year in the dynamic DST list
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone._lastDaylightEntry">
            <summary>
            The last year in the dynamic DST list
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.UserTimeZone.cachedDaylightChanges">
            <summary>
            The collection of previously calculated daylight changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.UserTimeZone"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="bias">The bias.</param>
            <param name="daylightBias">The daylight bias.</param>
            <param name="daylightMonth">The daylight month.</param>
            <param name="daylightDayOfWeek">The daylight day of week.</param>
            <param name="daylightDay">The daylight day.</param>
            <param name="daylightHour">The daylight hour.</param>
            <param name="standardBias">The standard bias.</param>
            <param name="standardMonth">The standard month.</param>
            <param name="standardDayOfWeek">The standard day of week.</param>
            <param name="standardDay">The standard day.</param>
            <param name="standardHour">The standard hour.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.#ctor(System.String,Mediachase.BusinessFoundation.Data.TimeZoneInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.UserTimeZone"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="timeZoneInfo">The settings.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.LoadFromRegistry(System.String,Microsoft.Win32.RegistryKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.UserTimeZone"/> class.
            </summary>
            <param name="name">The name of the time zone
            as recorded in the Windows registry.</param>
            <param name="data">The time zone's registry data.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.UpdateNames(System.String,System.String)">
            <summary>
            Updates the display names.
            </summary>
            <param name="standartName">Name of the standart.</param>
            <param name="daylightName">Name of the daylight.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> representing the time zone.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.ToLocalTime(System.DateTime)">
            <summary>
            Returns the local time that corresponds to
            a specified coordinated universal time (UTC).
            </summary>
            <param name="time">A UTC time.</param>
            <returns>
            A <see cref="T:System.DateTime"></see> instance whose value is the local time that corresponds to time.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.ToUniversalTime(System.DateTime)">
            <summary>
            Returns the coordinated universal time (UTC) that corresponds to a specified local time.
            </summary>
            <param name="time">The local date and time.</param>
            <returns>
            A <see cref="T:System.DateTime"></see> instance whose value is the UTC time that corresponds to time.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.GetDaylightChanges(System.Int32)">
            <summary>
            Returns the daylight saving time period for a particular year.
            </summary>
            <param name="year">The year to which
            the daylight saving time period applies.</param>
            <returns>
            A <see cref="T:System.Globalization.DaylightTime"></see> instance containing the start and end date for daylight saving time in year.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="year"/> is less than 1 or greater than 9999.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.GetUtcOffset(System.DateTime)">
            <summary>
            Returns the coordinated universal time (UTC) offset
            for the specified local time.
            </summary>
            <param name="time">The local date and time.</param>
            <returns>
            The UTC offset from time, measured in ticks.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.GetUtcOffsetFromUniversalTime(System.DateTime)">
            <summary>
            Returns the coordinated universal time (UTC) offset
            for the specified universal time.
            </summary>
            <param name="time">The UTC date and time.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.GetBiasSettings(System.Int32)">
            <summary>
            Returns the time bias specification for the specified year.
            </summary>
            <param name="year">The year for which the bias applies.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>
            A 32-bit integer that indicates the relative order
            of the entities being compared.
            </returns>
            <exception cref="T:System.ArgumentException"><paramref name="obj"/>
            is not the same type as this instance.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.System#IComparable{System#TimeZone}#CompareTo(System.TimeZone)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.op_Equality(Mediachase.BusinessFoundation.Data.UserTimeZone,Mediachase.BusinessFoundation.Data.UserTimeZone)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.op_Inequality(Mediachase.BusinessFoundation.Data.UserTimeZone,Mediachase.BusinessFoundation.Data.UserTimeZone)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.op_LessThan(Mediachase.BusinessFoundation.Data.UserTimeZone,Mediachase.BusinessFoundation.Data.UserTimeZone)">
            <summary>
            Implements the operator &lt;.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.op_GreaterThan(Mediachase.BusinessFoundation.Data.UserTimeZone,Mediachase.BusinessFoundation.Data.UserTimeZone)">
            <summary>
            Implements the operator &gt;.
            </summary>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.UserTimeZone.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            Initializes the non-serialized members.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.Name">
            <summary>
            Gets the standard time zone name.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.StandardName">
            <summary>
            Gets the standard time zone name.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.DaylightName">
            <summary>
            Gets the daylight saving time zone name.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.BiasReader">
            <summary>
            Gets or sets the bias reader.
            </summary>
            <value>The bias reader.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.IsDaylightDynamic">
            <summary>
            Gets or sets a value indicating whether this instance is daylight dynamic.
            </summary>
            <value>
            	<c>true</c> if this instance is daylight dynamic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.FirstDaylightEntry">
            <summary>
            Gets or sets the first daylight entry.
            </summary>
            <value>The first daylight entry.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.LastDaylightEntry">
            <summary>
            Gets or sets the last daylight entry.
            </summary>
            <value>The last daylight entry.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.UserTimeZone.WindowsTimeZones">
            <summary>
            Gets the collection of registered time zones.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.ValidatorCollection">
            <summary>
            Represents validator collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ValidatorCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ValidatorCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ValidatorCollection.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:ValidatorCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ValidatorCollection.InsertItem(System.Int32,Mediachase.BusinessFoundation.Data.IValidator)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ValidatorCollection.SetItem(System.Int32,Mediachase.BusinessFoundation.Data.IValidator)">
            <summary>
            Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ValidatorCollection.RemoveItem(System.Int32)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.ValidatorCollection.ClearItems">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.ValidatorCollection.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.OrBlockFilterElement">
            <summary>
            Represents Or block filter element.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.OrBlockFilterElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FilterOrBlock"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.OrBlockFilterElement.#ctor(Mediachase.BusinessFoundation.Data.FilterElement[])">
            <summary>
            Initializes a new instance of the <see cref="T:FilterOrBlock"/> class.
            </summary>
            <param name="filters">The filters.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.OrBlockFilterElement.ChildElements">
            <summary>
            Gets the child elements.
            </summary>
            <value>The child elements.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterType">
            <summary>
            Specifies field filter result.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterType.Deny">
            <summary>
            Deny field
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterType.Allow">
            <summary>
            Allow field
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter">
            <summary>
            Represents field filter with type (Allow, Deny).
            </summary>
            <remarks>
            Supports multi-field (with ';' or ',' delimiter) and wildcard mask.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FieldFilter"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter.IsMatch(System.String)">
            <summary>
            Matches the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection">
            <summary>
            Represents field filter collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FieldFilterCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.Insert(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter)">
            <summary>
            Adds the internal.
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="filter">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter)">
            <summary>
            Indexes the of.
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilter)">
            <summary>
            Determines whether [contains] [the specified filter].
            </summary>
            <param name="filter">The filter.</param>
            <returns>
            	<c>true</c> if [contains] [the specified filter]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.Allow(System.String)">
            <summary>
            Allows the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.Deny(System.String)">
            <summary>
            Denies the specified field name.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.FieldFilterCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:FieldFilter"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager">
            <summary>
            Represents meta model manager. 
            </summary>
            <remarks>
            Allows to enum available meta classes, types, enums, views, field maps.
            Allows to create (remove) meta class, type, enum, views, field map.
            Raises meta modeld events.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Manager"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassManager"/> class.
            </summary>
            <param name="versionId">The version id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.GetRegisteredTypes(Mediachase.BusinessFoundation.Data.Meta.Management.McDataType)">
            <summary>
            Gets the registered types.
            </summary>
            <param name="dataType">Type of the data.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.GetMetaClassSupportedCard">
            <summary>
            Gets the meta class supported card.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.GetBridgesReferencedToClass(System.String)">
            <summary>
            Gets the bridges referenced to class.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.GetBridgesReferencedToClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the bridges referenced to class.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.GetMetaViews(System.String)">
            <summary>
            Gets the meta views.
            </summary>
            <param name="MetaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.GetMetaViews(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Gets the meta views.
            </summary>
            <param name="MetaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.BeginEdit">
            <summary>
            Begins the edit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.BeginEdit(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AccessLevel)">
            <summary>
            Begins the edit.
            </summary>
            <param name="owner">The owner.</param>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.BeginEdit(System.String)">
            <summary>
            Begins the edit.
            </summary>
            <param name="owner">The owner.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaClass(System.String,System.String)">
            <summary>
            Creates the meta class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <returns>A new meta class.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaClass(System.String,System.String,System.String)">
            <summary>
            Creates the meta class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="primaryTableName">Name of the primary table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaClass(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the meta class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="pluralName">Name of the plural.</param>
            <param name="primaryTableName">Name of the primary table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaClass(System.String,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.PrimaryKeyIdValueType)">
            <summary>
            Creates the meta class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="pluralName">Name of the plural.</param>
            <param name="primaryTableName">Name of the primary table.</param>
            <param name="primaryKeyType">Type of the primary key.</param>
            <returns>A new meta class.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateBridgeMetaClass(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates the bridge meta class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="pluralName">Name of the plural.</param>
            <param name="primaryTableName">Name of the primary table.</param>
            <param name="metaClass1Name">Name of the meta class1.</param>
            <param name="ref1Name">Name of the ref1.</param>
            <param name="ref1FriendlyName">Name of the ref1 friendly.</param>
            <param name="isRef1Nullable">if set to <c>true</c> [is ref1 nullable].</param>
            <param name="metaClass2Name">Name of the meta class2.</param>
            <param name="ref2Name">Name of the ref2.</param>
            <param name="ref2FriendlyName">Name of the ref2 friendly.</param>
            <param name="isRef2Nullable">if set to <c>true</c> [is ref2 nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateBridgeMetaClass(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates the bridge meta class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="pluralName">Name of the plural.</param>
            <param name="primaryTableName">Name of the primary table.</param>
            <param name="metaClass1Name">Name of the meta class1.</param>
            <param name="ref1Name">Name of the ref1.</param>
            <param name="ref1FriendlyName">Name of the ref1 friendly.</param>
            <param name="isRef1Nullable">if set to <c>true</c> [is ref1 nullable].</param>
            <param name="isRef1CascadeDelete">if set to <c>true</c> [is ref1 cascade delete].</param>
            <param name="metaClass2Name">Name of the meta class2.</param>
            <param name="ref2Name">Name of the ref2.</param>
            <param name="ref2FriendlyName">Name of the ref2 friendly.</param>
            <param name="isRef2Nullable">if set to <c>true</c> [is ref2 nullable].</param>
            <param name="isRef2CascadeDelete">if set to <c>true</c> [is ref2 cascade delete].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateCardMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the card meta class.
            </summary>
            <param name="ownerClass">The owner class.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="pluralName">Name of the plural.</param>
            <param name="primaryTableName">Name of the primary table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaView(System.String,System.String,System.String,System.String[])">
            <summary>
            Creates the meta view.
            </summary>
            <param name="MetaClass">The meta class.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="AvailableFields">The available fields.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaView(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            Creates the meta view.
            </summary>
            <param name="MetaClass">The meta class.</param>
            <param name="Card">The card.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="AvailableFields">The available fields.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaView(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[])">
            <summary>
            Creates the meta view.
            </summary>
            <param name="MetaClass">The meta class.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="AvailableFields">The available fields.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaView(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[])">
            <summary>
            Creates the meta view.
            </summary>
            <param name="MetaClass">The meta class.</param>
            <param name="Card">The card.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="AvailableFields">The available fields.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaView(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[],Mediachase.BusinessFoundation.Data.FilterElementCollection,Mediachase.BusinessFoundation.Data.SortingElementCollection)">
            <summary>
            Creates the meta view.
            </summary>
            <param name="MetaClass">The meta class.</param>
            <param name="Card">The card.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="AvailableFields">The available fields.</param>
            <param name="Filters">The filters.</param>
            <param name="Sorting">The sorting.</param>
            <returns>The new meta view.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.DeleteMetaClass(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Deletes the meta class.
            </summary>
            <param name="metaclass">The metaclass.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.DeleteMetaClass(System.String)">
            <summary>
            Deletes the meta class.
            </summary>
            <param name="metaclassName">Name of the metaclass.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaFieldMap(System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[])">
            <summary>
            Creates the meta field map.
            </summary>
            <param name="name">The name.</param>
            <param name="srcMetaClassName">Name of the SRC meta class.</param>
            <param name="destMetaClassName">Name of the dest meta class.</param>
            <param name="references">The references.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.CreateMetaFieldMap(System.String,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField[])">
            <summary>
            Creates the meta field map.
            </summary>
            <param name="name">The name.</param>
            <param name="srcMetaClass">The source meta class.</param>
            <param name="destMetaClass">The destination meta class.</param>
            <param name="references">The references.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.DeleteMetaFieldMap(System.String)">
            <summary>
            Deletes the meta field map.
            </summary>
            <param name="mapName">Name of the map.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.DeleteMetaFieldMap(Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldMap)">
            <summary>
            Deletes the meta field map.
            </summary>
            <param name="map">The map.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.DeleteMetaFieldMap(System.Int32)">
            <summary>
            Deletes the meta field map.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.VersionId">
            <summary>
            Gets the version id.
            </summary>
            <value>The version id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.MetaClasses">
            <summary>
            Gets the meta classes.
            </summary>
            <value>The meta classes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.MetaViews">
            <summary>
            Gets the meta views.
            </summary>
            <value>The meta views.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.ModuleDataStorages">
            <summary>
            Gets the module data storages.
            </summary>
            <value>The module data storages.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.RegisteredTypes">
            <summary>
            Gets the registered types.
            </summary>
            <value>The registered types.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassManager.MetaFieldMaps">
            <summary>
            Gets the meta field maps.
            </summary>
            <value>The meta field maps.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass">
            <summary>
            Represents meta class meta information.
            </summary>
            <remarks>
            The MetaClass class allows to read, modify meta class meta information and creates (removes) meta fields.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClass"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClass"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">The friendly name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.XmlSerialize(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Serializes MetaClass object.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.XmlDeserialize(System.String)">
            <summary>
            Deserializes MetaClass object.
            </summary>
            <param name="str">The STR.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.ResetTableConfig">
            <summary>
            Resets the table config.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetTableConfig">
            <summary>
            Gets the table config.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateMetaField(System.String,System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Creates the meta field.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="TypeName">Name of the type.</param>
            <param name="DefaultValue">The default value.</param>
            <param name="attributes">The attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateMetaField(System.String,System.String,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Creates the meta field.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="TypeName">Name of the type.</param>
            <param name="attributes">The attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateMetaField(System.String,System.String,System.String,System.Boolean,System.String,Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Creates the meta field.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="TypeName">The type.</param>
            <param name="IsNullable">if set to <c>true</c> the fied will accept null.</param>
            <param name="DefaultValue">The default value.</param>
            <param name="Attributes">The attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateMetaField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Creates the meta field.
            </summary>
            <param name="srcMetaField">The SRC meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.InnerCopyNewAttributes(Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection,Mediachase.BusinessFoundation.Data.Meta.Management.AttributeCollection)">
            <summary>
            Inners the copy new attributes.
            </summary>
            <param name="srcAttr">The SRC attr.</param>
            <param name="destAttr">The dest attr.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.DeleteMetaField(System.String)">
            <summary>
            Deletes the meta field.
            </summary>
            <param name="Name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.DeleteMetaField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Deletes the meta field.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetReferences">
            <summary>
            Gets the references.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetReferences(System.String)">
            <summary>
            Gets the references.
            </summary>
            <param name="MetaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetReferenceByName(System.String)">
            <summary>
            Gets the name of the reference by.
            </summary>
            <param name="referenceName">Name of the reference.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateReference(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates the reference.
            </summary>
            <param name="parentMetaClass">The parent meta class.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="IsNullable">if set to <c>true</c> [is nullable].</param>
            <param name="cascadeDelete">if set to <c>true</c> [cascade delete].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateReference(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String,System.Boolean)">
            <summary>
            Creates the reference.
            </summary>
            <param name="parentMetaClass">The parent meta class.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="IsNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateReference(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates the reference.
            </summary>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="IsNullable">if set to <c>true</c> [is nullable].</param>
            <param name="MetaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateReference(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates the reference.
            </summary>
            <param name="MetaClassName">Name of the meta class.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <param name="IsNullable">if set to <c>true</c> [is nullable].</param>
            <param name="cascadeDelete">if set to <c>true</c> [cascade delete].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetReferencedFields(System.String)">
            <summary>
            Gets the referenced fields.
            </summary>
            <param name="referenceName">Name of the reference.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateReferencedField(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String,System.String)">
            <summary>
            Creates the reference field.
            </summary>
            <param name="reference">The reference.</param>
            <param name="referencedField">The referenced field.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateReferencedField(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the reference field.
            </summary>
            <param name="referenceFieldName">Name of the reference field.</param>
            <param name="referencedClassName">Name of the referenced class.</param>
            <param name="referencedFieldName">Name of the referenced field.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesWithoutBack(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Finds the single references.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesTo">
            <summary>
            Finds the references.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesTo(System.Boolean)">
            <summary>
            Finds the references to.
            </summary>
            <param name="includeCurrent">if set to <c>true</c> [include current].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesTo(System.String)">
            <summary>
            Finds the references to.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesTo(System.String,System.Boolean)">
            <summary>
            Finds the references to.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="includeCurrent">if set to <c>true</c> [include current].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesTo(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Finds the references to.
            </summary>
            <param name="metaClass">The meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesTo(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.Boolean)">
            <summary>
            Finds the references to.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="includeCurrent">if set to <c>true</c> [include current].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FindReferencesWithoutBack">
            <summary>
            Finds the single references.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetBackReferences">
            <summary>
            Gets the back references.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetBackReferences(System.String)">
            <summary>
            Gets the back references.
            </summary>
            <param name="MetaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetBackReference(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Gets the back reference.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetBackReference(System.String,System.String)">
            <summary>
            Gets the back references.
            </summary>
            <param name="MetaClassName">Name of the meta class.</param>
            <param name="MetaFieldName">Name of the meta field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetBackReferenceByName(System.String)">
            <summary>
            Gets the name of the back reference by.
            </summary>
            <param name="referenceName">Name of the reference.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateBackReference(System.String,System.String,System.String,System.String)">
            <summary>
            Creates the back reference.
            </summary>
            <param name="refMetaClassName">Name of the ref meta class.</param>
            <param name="refMetaFieldName">Name of the ref meta field.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateBackReference(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField,System.String,System.String)">
            <summary>
            Creates the back reference.
            </summary>
            <param name="reference">The reference.</param>
            <param name="Name">The name.</param>
            <param name="FriendlyName">Name of the friendly.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetCardField">
            <summary>
            Gets the card field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetCards">
            <summary>
            Gets the cards.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateCardField(System.String,System.String,System.Boolean)">
            <summary>
            Creates the card field.
            </summary>
            <param name="Name">The name.</param>
            <param name="Friendly">The friendly.</param>
            <param name="IsNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetBridgeFields">
            <summary>
            Gets the bridge fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetLinks">
            <summary>
            Gets the links.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateAggregation(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the aggregation.
            </summary>
            <param name="childMetaClassName">Name of the child meta class.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="elementContainerRefFieldFriendlyName">Name of the element container ref field friendly.</param>
            <param name="defaultElementFieldFriendlyName">Name of the default element field friendly.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CreateAggregation(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass,System.String,System.String,System.String,System.String)">
            <summary>
            Creates the aggregation.
            </summary>
            <param name="childMetaClass">The child meta class.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="elementContainerRefFieldFriendlyName">Name of the element container ref field friendly.</param>
            <param name="defaultElementFieldFriendlyName">Name of the default element field friendly.</param>
            <returns></returns>
            <remarks>Can be set only one aggregation reference between Container and Element</remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.SetChanged">
            <summary>
            Sets the changed.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Mediachase#BusinessFoundation#Data#IChangeTracking#AcceptChanges">
            <summary>
            Accepts the changes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.GetPrimaryKeyFieldName">
            <summary>
            Gets the name of the primary key field.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.FriendlyName">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.PluralName">
            <summary>
            Gets or sets the name of the plural.
            </summary>
            <value>The name of the plural.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.TitleFieldName">
            <summary>
            Gets or sets the name of the title field.
            </summary>
            <value>The name of the title field.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.PrimaryKeyType">
            <summary>
            Gets or sets the type of the primary key.
            </summary>
            <value>The type of the primary key.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.DataSource">
            <summary>
            Gets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>The fields.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Validators">
            <summary>
            Gets the validators.
            </summary>
            <value>The validators.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Extensions">
            <summary>
            Gets the extensions.
            </summary>
            <value>The extensions.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.ModuleDataStorages">
            <summary>
            Gets the module data storages.
            </summary>
            <value>The module data storages.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.IsCard">
            <summary>
            Gets a value indicating whether this instance is card.
            </summary>
            <value><c>true</c> if this instance is card; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.IsBridge">
            <summary>
            Gets a value indicating whether this instance is bridge.
            </summary>
            <value><c>true</c> if this instance is bridge; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.CardOwner">
            <summary>
            Gets the card owner.
            </summary>
            <value>The card owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.SupportsCards">
            <summary>
            Gets a value indicating whether class supports cards.
            </summary>
            <value><c>true</c> if class supports cards; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass.Mediachase#BusinessFoundation#Data#IChangeTracking#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection">
            <summary>
            Represents collection of meta classes.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Adds the internal.
            </summary>
            <param name="metaClass">The metaClass.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Indexes the of.
            </summary>
            <param name="metaClass">The metaClass.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Determines whether [contains] [the specified metaClass].
            </summary>
            <param name="metaClass">The metaClass.</param>
            <returns>
            	<c>true</c> if [contains] [the specified metaClass]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaClass"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:MetaClass"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaClassDataSource"/> class.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSource._isChanged">
            <summary>
            Gets the conditions.
            </summary>
            <value>The conditions.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSource.PrimaryTable">
            <summary>
            Gets or sets the primary table.
            </summary>
            <value>The primary table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaClassDataSource.ExtendedTables">
            <summary>
            Gets the tables.
            </summary>
            <value>The tables.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaField"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaField"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="friendlyName">The friendly name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.GetMetaType">
            <summary>
            Gets the type of the meta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.GetOriginalMetaType">
            <summary>
            Gets the type of the original meta.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.MetaClass">
            <summary>
            Gets or sets the owner meta class.
            </summary>
            <value>The owner meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.Owner">
            <summary>
            Gets or sets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.AccessLevel">
            <summary>
            Gets or sets the access level.
            </summary>
            <value>The access level.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.FriendlyName">
            <summary>
            Gets or sets the name of the friendly.
            </summary>
            <value>The name of the friendly.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.DataSource">
            <summary>
            Gets or sets the data source.
            </summary>
            <value>The data source.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.InPrimaryKey">
            <summary>
            Gets a value indicating whether field in primary key.
            </summary>
            <value><c>true</c> if [in primary key]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.TypeName">
            <summary>
            Gets or sets the name of the field type.
            </summary>
            <value>The name of the field type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.ReadOnly">
            <summary>
            Gets or sets a value indicating whether [read only].
            </summary>
            <value><c>true</c> if [read only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsNullable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:MetaField"/> is nullable.
            </summary>
            <value><c>true</c> if nullable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsReferencedField">
            <summary>
            Gets a value indicating whether this instance is referenced field.
            </summary>
            <value>
            	<c>true</c> if this instance is referenced field; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsReference">
            <summary>
            Gets a value indicating whether this instance is reference.
            </summary>
            <value>
            	<c>true</c> if this instance is reference; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsAggregation">
            <summary>
            Gets a value indicating whether this instance is aggregation.
            </summary>
            <value>
            	<c>true</c> if this instance is aggregation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.ReferenceToMetaClassName">
            <summary>
            Gets the name of the reference to meta class.
            </summary>
            <value>The name of the reference to meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.AggregationToMetaClassName">
            <summary>
            Gets the name of the aggregation to meta class.
            </summary>
            <value>The name of the aggregation to meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.ReferenceToMetaClass">
            <summary>
            Gets the reference to meta class.
            </summary>
            <value>The reference to meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.AggregationToMetaClass">
            <summary>
            Gets the aggregation to meta class.
            </summary>
            <value>The aggregation to meta class.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsBackReference">
            <summary>
            Gets a value indicating whether this instance is back reference.
            </summary>
            <value>
            	<c>true</c> if this instance is back reference; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsEnum">
            <summary>
            Gets a value indicating whether this instance is enum.
            </summary>
            <value><c>true</c> if this instance is enum; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsLink">
            <summary>
            Gets a value indicating whether this instance is link.
            </summary>
            <value><c>true</c> if this instance is link; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.IsMultivalueEnum">
            <summary>
            Gets a value indicating whether this instance is multivalue enum.
            </summary>
            <value>
            	<c>true</c> if this instance is multivalue enum; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaField.LinkInformation">
            <summary>
            Gets the link information.
            </summary>
            <value>The link information.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection">
            <summary>
            Represents collection of meta field.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Adds the internal.
            </summary>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="field">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Remove(System.String)">
            <summary>
            Removes the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Indexes the of.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.MetaField)">
            <summary>
            Determines whether [contains] [the specified field].
            </summary>
            <param name="field">The field.</param>
            <returns>
            	<c>true</c> if [contains] [the specified field]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.GetByDataType(Mediachase.BusinessFoundation.Data.Meta.Management.McDataType)">
            <summary>
            Gets the type of the by data.
            </summary>
            <param name="dataType">Type of the data.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.GetByOriginalDataType(Mediachase.BusinessFoundation.Data.Meta.Management.McDataType)">
            <summary>
            Gets the type of the by original data.
            </summary>
            <param name="dataType">Type of the data.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which to insert value.</param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            Performs additional custom processes after setting a value in the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after removing an element from the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
            <param name="index">The zero-based index at which value can be found.</param>
            <param name="value">The value of the element to remove from index.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.OnClear">
            <summary>
            Performs additional custom processes when clearing the contents of the <see cref="T:System.Collections.CollectionBase"></see> instance.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:MetaField"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:MetaField"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource">
            <summary>
            Represent meta field data source information.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MetaFieldDataSource"/> class.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.Table">
            <summary>
            Gets or sets the table.
            </summary>
            <value>The table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.InPrimaryKey">
            <summary>
            Gets or sets a value indicating whether in primary key.
            </summary>
            <value><c>true</c> if [in primary key]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.Columns">
            <summary>
            Gets the tables.
            </summary>
            <value>The tables.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.IsDataProvider">
            <summary>
            Gets a value indicating whether this instance is data provider.
            </summary>
            <value>
            	<c>true</c> if this instance is data provider; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.IsTable">
            <summary>
            Gets a value indicating whether this instance is table.
            </summary>
            <value><c>true</c> if this instance is table; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.IsReference">
            <summary>
            Gets a value indicating whether this instance is reference.
            </summary>
            <value>
            	<c>true</c> if this instance is reference; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.IsBackReference">
            <summary>
            Gets a value indicating whether this instance is back reference.
            </summary>
            <value>
            	<c>true</c> if this instance is back reference; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.IsExpression">
            <summary>
            Gets a value indicating whether this instance is expression.
            </summary>
            <value>
            	<c>true</c> if this instance is expression; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.MetaFieldDataSource.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterType">
            <summary>
            Specifies table filter result.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterType.Deny">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterType.Allow">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter">
            <summary>
            Represents table filter with type (Allow, Deny).
            </summary>
            <remarks>
            Supports multi-table (with ';' or ',' delimiter) and wildcard mask.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter.#ctor(Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:TableFilter"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="table">The table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter.IsMatch(System.String)">
            <summary>
            Matches the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection">
            <summary>
            Represents collection of table filter.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TableFilterCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.Insert(System.Int32,Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter)">
            <summary>
            Inserts the specified index.
            </summary>
            <param name="index">The index.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.Add(Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter)">
            <summary>
            Adds the internal.
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.Remove(Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter)">
            <summary>
            Removes the specified meta class.
            </summary>
            <param name="filter">The meta class.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.IndexOf(Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter)">
            <summary>
            Indexes the of.
            </summary>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.Contains(Mediachase.BusinessFoundation.Data.Meta.Management.TableFilter)">
            <summary>
            Determines whether [contains] [the specified filter].
            </summary>
            <param name="filter">The filter.</param>
            <returns>
            	<c>true</c> if [contains] [the specified filter]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.Allow(System.String)">
            <summary>
            Allows the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.Deny(System.String)">
            <summary>
            Denies the specified table name.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Meta.Management.TableFilterCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:TableFilter"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Meta.Management.WildcardUtil">
            <summary>
            Provides wildcard pattern match.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Meta.Management.WildcardUtil.PatternMatch(System.String,System.String)">
            <summary>
            Validate the source string with the specific mask.
            </summary>
            <param name="Source">The string to validate.</param>
            <param name="Mask">The mask expression.</param>
            <returns>
            <b>true</b> if the Source string are valid; otherwise, <b>false</b>.
            </returns>
            <remarks>
            The static <b>PatternMatch</b> method allow you to validate your string with the specific mask.
            <br/><br/>
            The PatternMatch mask expression allows you to use two basic character types: literal (normal) text characters and metacharacters. 
            Metacharacters used to ? and * characters.<br/><br/>     
            <list type="table">
            	<item>
            		<term><B>?</B></term>
            		<description>Match any simbol</description>
            	</item>
            	<item>
            		<term><B>*</B></term>
            		<description>Zero or more matches</description>
            	</item>
            </list>
            </remarks>
            <example>
            The following code illustrates the use of the PatternMatch method. 
            <code>
            bool bRet1 = McHttpModule.PatternMatch("text","*");		// return true
            bool bRet1 = McHttpModule.PatternMatch("text","*e?t");	// return true
            bool bRet1 = McHttpModule.PatternMatch("text","*exx");	// return false
            bool bRet1 = McHttpModule.PatternMatch("text","t?et");	// return true
            bool bRet1 = McHttpModule.PatternMatch("text","??e?");	// return false
            bool bRet1 = McHttpModule.PatternMatch("text","t*t*");	// return true
            </code>
            </example>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.Column">
            <summary>
            Represents a Microsoft SQL Server column. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.Column"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Table,System.String,System.Data.SqlDbType,System.Boolean,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Column"/> class.
            </summary>
            <param name="ownerTable">The owner table.</param>
            <param name="name">The name.</param>
            <param name="sqlDbType">Type of the SQL db.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="lenght">The lenght.</param>
            <param name="defaultValue">The default value.</param>
            <param name="identity">if set to <c>true</c> [identity].</param>
            <param name="primarykey">if set to <c>true</c> [primarykey].</param>
            <param name="precision">The precision.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Int32,System.String,System.Boolean,System.Boolean,System.Int32,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.Column"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="sqlDbType">Type of the SQL db.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="lenght">The lenght.</param>
            <param name="defaultValue">The default value.</param>
            <param name="identity">if set to <c>true</c> [identity].</param>
            <param name="primarykey">if set to <c>true</c> [primarykey].</param>
            <param name="precision">The precision.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.Column"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="sqlDbType">Type of the SQL db.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="lenght">The lenght.</param>
            <param name="defaultValue">The default value.</param>
            <param name="identity">if set to <c>true</c> [identity].</param>
            <param name="primarykey">if set to <c>true</c> [primarykey].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.#ctor(System.String,System.Data.SqlDbType,System.Boolean,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.Column"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="sqlDbType">Type of the SQL db.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="lenght">The lenght.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.SetPrimaryKeyFlag(System.Boolean)">
            <summary>
            Sets the primary key flag.
            </summary>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.GetDefaultValue">
            <summary>
            Gets the default value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.GetSqlTypeString">
            <summary>
            Gets the SQL type string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreatePrimaryKey(System.String)">
            <summary>
            Creates the primary key.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreatePrimaryKey(System.String,System.Boolean)">
            <summary>
            Creates the primary key.
            </summary>
            <param name="name">The name.</param>
            <param name="identity">if set to <c>true</c> [identity].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreatePrimaryKey(System.String,System.Data.SqlDbType,System.Boolean)">
            <summary>
            Creates the primary key.
            </summary>
            <param name="name">The name.</param>
            <param name="pkType">Type of the pk.</param>
            <param name="identity">if set to <c>true</c> [identity].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreateDateTime(System.String,System.Boolean)">
            <summary>
            Creates the date time.
            </summary>
            <param name="name">The name.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreateDateTime(System.String,System.Boolean,System.String)">
            <summary>
            Creates the date time.
            </summary>
            <param name="name">The name.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreateInt(System.String,System.Boolean)">
            <summary>
            Creates the int.
            </summary>
            <param name="name">The name.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreateInt(System.String,System.Boolean,System.String)">
            <summary>
            Creates the int.
            </summary>
            <param name="name">The name.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreateUniqueIdentifier(System.String,System.Boolean)">
            <summary>
            Creates the unique identifier.
            </summary>
            <param name="name">The name.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.CreateUniqueIdentifier(System.String,System.Boolean,System.String)">
            <summary>
            Creates the unique identifier.
            </summary>
            <param name="name">The name.</param>
            <param name="isNullable">if set to <c>true</c> [is nullable].</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Column.IsBinary(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Determines whether the specified column is binary.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the specified column is binary; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.OwnerTable">
            <summary>
            Gets the owner table.
            </summary>
            <value>The owner table.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.Precision">
            <summary>
            Gets or sets the precision.
            </summary>
            <value>The precision.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.Length">
            <summary>
            Gets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.Scale">
            <summary>
            Gets the scale.
            </summary>
            <value>The scale.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.IsNullable">
            <summary>
            Gets a value indicating whether this instance is nullable.
            </summary>
            <value>
            	<c>true</c> if this instance is nullable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.SqlDbType">
            <summary>
            Gets the type of the SQL data.
            </summary>
            <value>The type of the SQL data.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.Identity">
            <summary>
            Gets a value indicating whether this <see cref="T:Column"/> is identity.
            </summary>
            <value><c>true</c> if identity; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.IdentitySeed">
            <summary>
            Gets or sets the identity seed.
            </summary>
            <value>The identity seed.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.IdentityIncrement">
            <summary>
            Gets or sets the identity increment.
            </summary>
            <value>The identity increment.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.Formula">
            <summary>
            Gets or sets the formula.
            </summary>
            <value>The formula.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Column.IsPrimaryKey">
            <summary>
            Gets a value that specifies whether the column is included in the definition of a primary key.
            </summary>
            <value><c>true</c> if [in primary key]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection">
            <summary>
            Represents collection of Microsoft SQL Server columns. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ColumnCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.AddInternal(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Adds the internal.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.IndexOf(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Indexes the of.
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.Contains(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Determines whether [contains] [the specified column].
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if [contains] [the specified column]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.RemoveInternal(Mediachase.BusinessFoundation.Data.Sql.Management.Column)">
            <summary>
            Removes the internal.
            </summary>
            <param name="column">The column.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Column"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Column"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.Database">
            <summary>
            Represents a Microsoft SQL Server database. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Database"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Database"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.FillTables(Mediachase.BusinessFoundation.Data.Sql.Management.Database,Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection)">
            <summary>
            Fills the tables.
            </summary>
            <param name="database">The database.</param>
            <param name="tables">The tables.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.FillRelations(Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection,Mediachase.BusinessFoundation.Data.Sql.Management.RelationCollection)">
            <summary>
            Fills the relations.
            </summary>
            <param name="tables">The tables.</param>
            <param name="relations">The relations.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.GenerateCreateTableScript(System.String,Mediachase.BusinessFoundation.Data.Sql.Management.Column[])">
            <summary>
            Gets the active.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="columns">The columns.</param>
            <returns></returns>
            <value>The active.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.GenerateTableSPCleanScript(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Generates the table SP clean script.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.GenerateTableSPCreateScript(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Generates the table SP create script.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.GenerateTableSPCreateScript(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Generates the table SP create script.
            </summary>
            <param name="tableConfig">The table configuration.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.ExecuteTableSPCreateScript(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Executes the table SP create script.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.ExecuteTableSPCreateScript(Mediachase.BusinessFoundation.Data.Sql.Management.TableConfig)">
            <summary>
            Executes the table SP create script.
            </summary>
            <param name="tableConfig">The table configuration.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.ExecuteTableSPCleanScript(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Table[])">
            <summary>
            Executes the table SP clean script.
            </summary>
            <param name="table">The table.</param>
            <param name="extended">The extended.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.ExecuteTableSPCleanScript(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Executes the table SP clean script.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.CreateTable(System.String,Mediachase.BusinessFoundation.Data.Sql.Management.Column[])">
            <summary>
            Creates the table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="columns">The columns.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.DropTable(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Drops the table.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.CreateRelation(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Table,System.String)">
            <summary>
            Creates the relation.
            </summary>
            <param name="primaryTable">The primary table.</param>
            <param name="foreignTable">The foreign table.</param>
            <param name="foreignColumn">The foreign column.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Database.CreateRelation(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.Table,System.String,System.Boolean)">
            <summary>
            Creates the relation.
            </summary>
            <param name="primaryTable">The primary table.</param>
            <param name="foreignTable">The foreign table.</param>
            <param name="foreignColumn">The foreign column.</param>
            <param name="cascadeDelete">if set to <c>true</c> [cascade delete].</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Database.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Database.Tables">
            <summary>
            Gets the tables.
            </summary>
            <value>The tables.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Database.ActiveDbName">
            <summary>
            Gets the name of the active db.
            </summary>
            <value>The name of the active db.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.DatabaseCollection">
            <summary>
            Represents collection of databases. (Not implemented yet)
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType">
            <summary>
            Speicifies sql data type named constants.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.SqlVariant">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.UniqueIdentifier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.NText">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.NVarchar">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.NChar">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Bit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.TinyInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.BigInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Image">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Varbinary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Binary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Timestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Char">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Numeric">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Decimal">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Int">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.SmallInt">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Real">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Datetime">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.SqlDataType.Varchar">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.SystemStoredProcedure">
            <summary>
            Provides execution of system stored procedures.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.SystemStoredProcedure.ExecuteSpTables">
            <summary>
            Executes the sp_tables system stored procedure.
            </summary>
            <returns>Result Sets: TABLE_QUALIFIER, TABLE_OWNER, TABLE_NAME, TABLE_TYPE, REMARKS</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.SystemStoredProcedure.ExecuteSpTables(System.String,System.String,System.String,System.String)">
            <summary>
            Executes the sp_tables system stored procedure.
            </summary>
            <param name="tableName">Is the table used to return catalog information. name is nvarchar(384), with a default of NULL. Wildcard pattern matching is supported.</param>
            <param name="tableOwner">Is the table owner of the table used to return catalog information. owner is nvarchar(384), with a default of NULL. Wildcard pattern matching is supported.</param>
            <param name="tableQualifier">Is the name of the table qualifier. qualifier is sysname, with a default of NULL.</param>
            <param name="tableType">Is a list of values, separated by commas, that gives information about all tables of the table type(s) specified, including TABLE, SYSTEM TABLE, and VIEW.</param>
            <returns>Result Sets: TABLE_QUALIFIER, TABLE_OWNER, TABLE_NAME, TABLE_TYPE, REMARKS</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.SystemStoredProcedure.ExecuteSpColumns(System.String)">
            <summary>
            Executes the sp_columns system stored procedure.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>Result Sets: 
            TABLE_QUALIFIER     sysname     Table or view qualifier name. This field can be NULL. 
            TABLE_OWNER         sysname     Table or view owner name. This field always returns a value. 
            TABLE_NAME          sysname     Table or view name. This field always returns a value. 
            COLUMN_NAME         sysname     Column name, for each column of the TABLE_NAME returned. This field always returns a value. 
            DATA_TYPE           smallint    Integer code for ODBC data type. If this is a data type that cannot be mapped to an ODBC type, it is NULL. The native data type name is returned in the TYPE_NAME column. 
            TYPE_NAME           varchar(13) String representing a data type. The underlying DBMS presents this data type name. 
            PRECISION           int         Number of significant digits. The return value for the PRECISION column is in base 10. 
            LENGTH              int         Transfer size of the data.
            SCALE               smallint    Number of digits to the right of the decimal point. 
            RADIX               smallint    Base for numeric datatypes. 
            NULLABLE            smallint    Specifies nullability. 1 = NULL is possible. 0 = NOT NULL.
            REMARKS             varchar(254)This field always returns NULL. 
            COLUMN_DEF          nvarchar(4000) Default value of the column. 
            SQL_DATA_TYPE       smallint    Value of the SQL data type as it appears in the TYPE field of the descriptor. This column is the same as the DATA_TYPE column, except for the datetime and SQL-92 interval data types. This column always returns a value. 
            SQL_DATETIME_SUB    smallint    Subtype code for datetime and SQL-92 interval data types. For other data types, this column returns NULL. 
            CHAR_OCTET_LENGTH   int         Maximum length in bytes of a character or integer data type column. For all other data types, this column returns NULL. 
            ORDINAL_POSITION    int         Ordinal position of the column in the table. The first column in the table is 1. This column always returns a value. 
            IS_NULLABLE         varchar(254) Nullability of the column in the table. ISO rules are followed to determine nullability. An ISO SQL-compliant DBMS cannot return an empty string. YES = Column can include NULLS. NO = Column cannot include NULLS. This column returns a zero-length string if nullability is unknown. The value returned for this column is different from the value returned for the NULLABLE column.
            SS_DATA_TYPE        tinyint     SQL Server data type, used by extended stored procedures. For more information, see Data Types.  
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.SystemStoredProcedure.ExecuteSpPKeys(System.String)">
            <summary>
            Returns primary key information for a single table in the current environment.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns>Result Sets:
            TABLE_QUALIFIER     sysname     Name of the table qualifier. This field can be NULL. 
            TABLE_OWNER         sysname     Name of the table owner. This field always returns a value. 
            TABLE_NAME          sysname     Name of the table. In SQL Server, this column represents the table name as listed in the sysobjects table. This field always returns a value. 
            COLUMN_NAME         sysname     Name of the column, for each column of the TABLE_NAME returned. In SQL Server, this column represents the column name as listed in the syscolumns table. This field always returns a value. 
            KEY_SEQ             smallint    Sequence number of the column in a multicolumn primary key.  
            PK_NAME             sysname     Primary key identifier. Returns NULL if not applicable to the data source. 
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.SystemStoredProcedure.ExecuteSpFKeys(System.String,System.String)">
            <summary>
            Returns logical foreign key information for the current environment. This procedure shows foreign key relationships including disabled foreign keys. 
            </summary>
            <param name="pkTableName">Name of the primary key table.</param>
            <param name="fkTableName">Name of the foreign key table.</param>
            <returns>Result Sets:
            PKTABLE_QUALIFIER   sysname     Name of the table (with the primary key) qualifier. This field can be NULL. 
            PKTABLE_OWNER       sysname     Name of the table (with the primary key) owner. This field always returns a value. 
            PKTABLE_NAME        sysname     Name of the table (with the primary key). This field always returns a value. 
            PKCOLUMN_NAME       sysname     Name of the primary key column(s), for each column of the TABLE_NAME returned. This field always returns a value. 
            FKTABLE_QUALIFIER   sysname     Name of the table (with a foreign key) qualifier. This field can be NULL. 
            FKTABLE_OWNER       sysname     Name of the table (with a foreign key) owner. This field always returns a value. 
            FKTABLE_NAME        sysname     Name of the table (with a foreign key). This field always returns a value. 
            FKCOLUMN_NAME       varchar(32) Name of the foreign key column(s), for each column of the TABLE_NAME returned. This field always returns a value. 
            KEY_SEQ             smallint    Sequence number of the column in a multicolumn primary key. This field always returns a value.  
            UPDATE_RULE         smallint    Action applied to the foreign key when the SQL operation is an update. SQL Server returns 0 or 1 for these columns. Open Data Services gateways can return values of 0, 1, or 2: 
                                            0=CASCADE changes to foreign key.
                                            1=NO ACTION changes if foreign key is present.
                                            2=SET_NULL; set foreign key to NULL.
            DELETE_RULE         smallint    Action applied to the foreign key when the SQL operation is a deletion. SQL Server returns 0 or 1 for these columns. Open Data Services gateways can return values of 0, 1, or 2: 
                                            0=CASCADE changes to foreign key.
                                            1=NO ACTION changes if foreign key is present.
                                            2=SET_NULL; set foreign key to NULL.
            FK_NAME             sysname     Foreign key identifier. It is NULL if not applicable to the data source. SQL Server returns the FOREIGN KEY constraint name. 
            PK_NAME             sysname     Primary key identifier. It is NULL if not applicable to the data source. SQL Server returns the PRIMARY KEY constraint name. 
            </returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.Table">
            <summary>
            Represents a Microsoft SQL Server table. 
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.Management.Table"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.#ctor(Mediachase.BusinessFoundation.Data.Sql.Management.Database,System.String,System.String,Mediachase.BusinessFoundation.Data.Sql.Management.TableType,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Table"/> class.
            </summary>
            <param name="qualifier">The qualifier.</param>
            <param name="owner">The owner.</param>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="remarks">The remarks.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.FillColumns(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Fills the columns.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.FillPK(Mediachase.BusinessFoundation.Data.Sql.Management.Table,Mediachase.BusinessFoundation.Data.Sql.Management.ColumnCollection)">
            <summary>
            Fills the PK.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.XmlSerialize(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Serializes Table object.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.XmlDeserialize(System.String)">
            <summary>
            Deserializes Table object.
            </summary>
            <param name="str">The STR.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.RefreshColumns">
            <summary>
            Refreshes the columns.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.CreateDetachedTable(System.String,Mediachase.BusinessFoundation.Data.Sql.Management.Column[])">
            <summary>
            Creates the detached table.
            </summary>
            <param name="name">The name.</param>
            <param name="columns">The columns.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.Table.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Table.Qualifier">
            <summary>
            Gets the qualifier.
            </summary>
            <value>The qualifier.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Table.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Table.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Table.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Table.Remarks">
            <summary>
            Gets the remarks.
            </summary>
            <value>The remarks.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Table.Columns">
            <summary>
            Gets the columns.
            </summary>
            <value>The columns.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.Table.PrimaryKey">
            <summary>
            Gets the primary key.
            </summary>
            <value>The primary key.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection">
            <summary>
            Represents collection if tables.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TableCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.AddInternal(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Adds the internal.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.RemoveInternal(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Removes the internal.
            </summary>
            <param name="table">The table.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.IndexOf(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Indexes the of.
            </summary>
            <param name="table">The table.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified name].
            </summary>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> if [contains] [the specified name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.Contains(Mediachase.BusinessFoundation.Data.Sql.Management.Table)">
            <summary>
            Determines whether [contains] [the specified table].
            </summary>
            <param name="table">The table.</param>
            <returns>
            	<c>true</c> if [contains] [the specified table]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Table"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.Management.TableCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Table"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.Management.TableType">
            <summary>
            Specifies Microsoft SQL Server table type.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.TableType.SystemTable">
            <summary>
            System Table
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.TableType.Table">
            <summary>
            Table
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.Management.TableType.View">
            <summary>
            View
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlBlobAccess">
            <summary>
            Defines constants for read, write, or read/write access to a text, ntext, or image column.
            </summary>
            <remarks>
            <para>
            This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.
            </para>
            </remarks>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.SqlBlobAccess.Read">
            <summary>
            Read access to the text, ntext, or image column. Data can be read from the column. Combine with Write for read/write access.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.SqlBlobAccess.Write">
            <summary>
            Write access to the text, ntext, or image column. Data can be read from the column. Combine with Read for read/write access.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.SqlBlobAccess.ReadWrite">
            <summary>
            Read and write access to the text, ntext, or image column. Data can be read from and written to the column.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream">
             <summary>
             Exposes a Stream around a text, ntext, or image column, supporting both synchronous and asynchronous read and write operations.
             </summary>
             <remarks>
             <para>
             A common practice to reduce the amount of memory used when writing a BLOB value is to write the BLOB to the database in "chunks". 
             The process of writing a BLOB to a database in this way depends on the capabilities of your database.
             </para>
             <para>
             Any public static (Shared in Visual Basic) members of this type are thread safe. Any instance members are not guaranteed to be thread safe.
             </para>
             <para>
             Use the SqlBlobStream class to read, write, create or close text, ntext, or image values from a text, ntext, or image column, as well as to 
             manipulate other file-related operating system handles such as file.
             </para>
             <para>
             SqlBlobStream objects support random access to files using the Seek method. Seek allows the read/write position to be moved to any position within the file. 
             This is done with byte offset reference point parameters. The byte offset is relative to the seek reference point, which can be the beginning, the current 
             position, or the end of the underlying file, as represented by the three properties of the SeekOrigin class.
             </para>
             <para>
             For an example of using this class, see the Example section below. 
             </para>
             </remarks>
             <example>
             The following SqlBlobStream constructor grants read-only access to an column (SqlBlobAccess.Read).
             <code>
            	string strConnectionString = "Data source=(local);Initial catalog=TestDB;User Id=sa;Password=";
            	string strSqlTable = "Files";
            	string strBLOBColumn = "Data";
            
            	try
            	{
            		using(SqlBlobStream stream = new SqlBlobStream(strConnectionString,
            				strSqlTable,
            				strBLOBColumn,
            				SqlBlobAccess.Read,new SqlParameter("@FileId",12345)))
            		{
            			byte[] tmpBuffer = new byte[1024];
            			int Length = 0;
            			while((Length=stream.Read(buffer,0,1024))==1024)
            			{
            				//TODO: Save tmpBuffer
            			}
            		}
            	}
            	catch(Exception ex)
            	{
            		System.Diagnostics.Trace.WriteLine(ex);
            		throw;
            	}
             </code>
             </example>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.#ctor">
            <summary>
            Initializes a new instance of <b>SqlBlobStream</b> class.
            </summary>
            <remarks>
            Invoke Mediachase.FileUploader.SqlBlobStream.Open method to open stream.
            </remarks>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.#ctor(System.String,System.String,Mediachase.BusinessFoundation.Data.Sql.SqlBlobAccess,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SqlBlobStream"/> class.
            </summary>
            <param name="TableName">Name of the table.</param>
            <param name="BlobDataColumn">The BLOB data column.</param>
            <param name="BlobAccess">The BLOB access.</param>
            <param name="PrimaryKeyColumn">The primary key column.</param>
            <param name="PrimaryKey">The primary key.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.#ctor(System.String,System.String,Mediachase.BusinessFoundation.Data.Sql.SqlBlobAccess,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream"/> class.
            </summary>
            <param name="TableName">Name of the table.</param>
            <param name="BlobDataColumn">The BLOB data column.</param>
            <param name="BlobAccess">The BLOB access.</param>
            <param name="PrimaryKeyColumn">The primary key column.</param>
            <param name="PrimaryKey">The primary key.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.#ctor(System.String,System.String,Mediachase.BusinessFoundation.Data.Sql.SqlBlobAccess,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:SqlBlobStream"/> class.
            </summary>
            <param name="TableName">Name of the table.</param>
            <param name="BlobDataColumn">The BLOB data column.</param>
            <param name="BlobAccess">The BLOB access.</param>
            <param name="PrimaryKeys">The primary keys.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Open">
            <summary>
            Opens the closed connection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Init">
            <summary>
            Initializes a new connection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.OnInit">
            <summary>
            Raises the Init event.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Overridden. Reads a block of bytes from the stream and writes the data in a given buffer.
            </summary>
            <param name="buffer">When this method returns, contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The byte offset in array at which to begin reading. </param>
            <param name="count">The maximum number of bytes to read. </param>
            <returns>The total number of bytes read into the buffer. This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Overridden. Writes a block of bytes to this stream using data from a buffer.
            </summary>
            <param name="buffer">The array to which bytes are written. </param>
            <param name="offset">The byte offset in array at which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Flush">
            <summary>
            Overridden. Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Overridden. Sets the current position of this stream to the given value.
            </summary>
            <param name="offset">The point relative to origin from which to begin seeking.</param>
            <param name="origin">Specifies the beginning, the end, or the current position as a reference point for origin, using a value of type SeekOrigin.</param>
            <returns>The new position in the stream.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.SetLength(System.Int64)">
            <summary>
            Overridden. Sets the length of this stream to the given value.
            </summary>
            <param name="value">The new length of the stream. </param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.OnClose(System.Boolean)">
            <summary>
            Releases the resources used by the SqlBlobStream.
            </summary>
            <param name="disposing">The disposing flag.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Close">
            <summary>
            Overridden. Closes the file and releases any resources associated with the current file stream.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.GetDataLengthCommand">
            <summary>
            Gets the sql command returning Data Length.
            </summary>
            <returns>The sql command.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.GetDataLength">
            <summary>
            Gets the selected element's data length.
            </summary>
            <returns>The data length. (bytes)</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.GetOpenPointerCommand">
            <summary>
            Gets the sql command returning a text pointer.
            </summary>
            <returns>The sql command.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.OpenPointer">
            <summary>
            Opens the text pointer.
            </summary>
            <returns>The text pointer.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.GetUpdateTextCommand">
            <summary>
            Gets the sql command updating a blob element.
            </summary>
            <returns>The sql command.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.GetUpdateTextCommandWithNullValue">
            <summary>
            Gets the sql command inserting a blob element.
            </summary>
            <returns>The sql command.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.UpdateText(System.Byte[],System.Int64,System.Int64)">
            <summary>
            Writes the array into the BLOB column.
            </summary>
            <param name="buffer">The array to which bytes are written. </param>
            <param name="offset">The byte offset in array at which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.UpdateTextCommandWithNullValue(System.Byte[],System.Int64,System.Int64)">
            <summary>
            Writes the array into the BLOB column.
            </summary>
            <param name="buffer">The array to which bytes are written. </param>
            <param name="offset">The byte offset in array at which to begin writing.</param>
            <param name="count">The maximum number of bytes to write.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.GetReadTextCommand">
            <summary>
            Gets the sql command reading a blob element.
            </summary>
            <returns>The sql command.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.ReadText(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the array from the BLOB column.
            </summary>
            <param name="buffer">When this method returns, contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The byte offset in array at which to begin reading.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The total number of bytes read into the buffer. This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.IsOpen">
            <summary>
            Gets the current SqlBlobStream's state.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Pointer">
            <summary>
            Gets a current pointer to the BLOB value.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.BlobAccess">
            <summary>
            Gets a current read/write permission.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.PrimaryKeys">
            <summary>
            Gets the primary keys collection.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.TableName">
            <summary>
            Gets, sets a table name for the table that the current <b>SqlBlobStream</b> object will encapsulate.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.ColumnName">
            <summary>
            Gets, sets a table column for the BLOB value that the current <b>SqlBlobStream</b> object will encapsulate.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.CanRead">
            <summary>
            Overridden. Gets a value indicating whether the current stream supports reading.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.CanSeek">
            <summary>
            Overridden. Gets a value indicating whether the current stream supports seeking.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.CanWrite">
            <summary>
            Overridden. Gets a value indicating whether the current stream supports writing.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Position">
            <summary>
            Overridden. Gets or sets the current position of this stream.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlBlobStream.Length">
            <summary>
            Overridden. Gets the length in bytes of the stream.
            </summary>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlContext">
            <summary>
            Represents a Sql context.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SqlContext"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.Sql.SqlContext"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.InnerCommit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.InnerRollback">
            <summary>
            Rollbacks this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.FromConfig">
            <summary>
            Froms the config.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlContext.GetTable(System.String)">
            <summary>
            Gets the table.
            </summary>
            <param name="tableName">Name of the table.</param>
            <returns></returns>
        </member>
        <member name="E:Mediachase.BusinessFoundation.Data.Sql.SqlContext.TransactionCreated">
            <summary>
            Occurs when [transaction created].
            </summary>
        </member>
        <member name="E:Mediachase.BusinessFoundation.Data.Sql.SqlContext.TransactionCommited">
            <summary>
            Occurs when [transaction commited].
            </summary>
        </member>
        <member name="E:Mediachase.BusinessFoundation.Data.Sql.SqlContext.TransactionRollbacked">
            <summary>
            Occurs when [transaction rollbacked].
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlContext.Current">
            <summary>
            Gets or sets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlContext.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlContext.Transaction">
            <summary>
            Gets or sets the transaction.
            </summary>
            <value>The transaction.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlContext.CommandTimeout">
            <summary>
            Gets or sets the command timeout.
            </summary>
            <value>The command timeout.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope">
            <summary>
            Represents sql transaction scope.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.#ctor(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.Boolean,Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope)">
            <summary>
            Initializes a new instance of the <see cref="T:SqlContextTransaction"/> class.
            </summary>
            <param name="ownerContext">The owner context.</param>
            <param name="isRootScope">if set to <c>true</c> [is root scope].</param>
            <param name="parentScope">The parent scope.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.AddCallback(Mediachase.BusinessFoundation.Data.Sql.SqlTransactionCallback)">
            <summary>
            Adds the callback.
            </summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.AddCallback(Mediachase.BusinessFoundation.Data.Sql.TransactionCallback,System.Object)">
            <summary>
            Adds the callback.
            </summary>
            <param name="callback">The callback.</param>
            <param name="state">The state.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.InnerCallbacks">
            <summary>
            Gets or sets the callbacks.
            </summary>
            <value>The callbacks.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.OwnerContext">
            <summary>
            Gets or sets the owner context.
            </summary>
            <value>The owner context.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.ParentScope">
            <summary>
            Gets or sets the parent scope.
            </summary>
            <value>The parent scope.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.IsActive">
            <summary>
            Gets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.TransactionId">
            <summary>
            Gets the transaction id.
            </summary>
            <value>The transaction id.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlTransactionScope.IsRootScope">
            <summary>
            Gets a value indicating whether this instance is root scope.
            </summary>
            <value>
            	<c>true</c> if this instance is root scope; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelperParameterCache.DiscoverSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">whether or not to include their return value parameter</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            add parameter array to the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters to be cached</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an array of SqlParamters</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="includeReturnValueParameter">a bool value indicating whether the return value parameter should be included in the results</param>
            <returns>an array of SqlParameters</returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList">
            <summary>
            Represents the SqlParameter collection.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.#ctor">
            <summary>
            Initializes a new instance of the SqlParameterList class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Add(System.Data.SqlClient.SqlParameter)">
            <summary>
            Adds an SqlParameter to the SqlParameterList.
            </summary>
            <param name="param">The SqlParameter to be added to the SqlParameterList</param>
            <returns>The index at which the value has been added.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Add(System.String,System.Object)">
            <summary>
            Creates a new SqlParameter by parameterName and value and adds an SqlParameter to the SqlParameterList.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="value">An Object that is the value of the SqlParameter.</param>
            <returns>A new SqlParameter object.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Add(System.String,System.Data.SqlDbType)">
            <summary>
            Creates a new SqlParameter by parameterName and SqlDbType and adds an SqlParameter to the SqlParameterList.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="dbType">One of the <see cref="T:System.Data.SqlDbType"/> values.</param>
            <returns>A new SqlParameter object.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Add(System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Creates a new SqlParameter by parameterName, SqlDbType, value and adds an SqlParameter to the SqlParameterList.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="dbType">One of the <see cref="T:System.Data.SqlDbType"/> values.</param>
            <param name="value">An Object that is the value of the SqlParameter.</param>
            <returns>A new SqlParameter object.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Add(System.Data.SqlDbType,System.Object)">
            <summary>
            Adds the specified db type named @AutoParam#.
            </summary>
            <param name="dbType">Type of the db.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Add(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            Creates a new SqlParameter by parameterName, SqlDbType, value and adds an SqlParameter to the SqlParameterList.
            </summary>
            <param name="parameterName">The name of the parameter to map.</param>
            <param name="dbType">One of the <see cref="T:System.Data.SqlDbType"/> values.</param>
            <param name="size">The length of the parameter.</param>
            <param name="value">An Object that is the value of the SqlParameter.</param>
            <returns>A new SqlParameter object.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Remove(System.Data.SqlClient.SqlParameter)">
            <summary>
            Removes the first occurrence of a specific object from the SqlParameterList.
            </summary>
            <param name="param">The SqlParameter to remove.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.ToArray">
            <summary>
            Copies the elements of the SqlParameterList to a new array.
            </summary>
            <returns>An SqlParameter array containing copies of the elements of the SqlParameterList.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.ToArray(System.Data.SqlClient.SqlParameter[])">
            <summary>
            Copies the elements of the SqlParameterList to a new array and adds an additional params.
            </summary>
            <param name="addParams">An additioanl SqlParameter items or null (<b>Nothing</b> in Visual Basic).</param>
            <returns>An SqlParameter array containing copies of the elements of the SqlParameterList.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified param name].
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns>
            	<c>true</c> if [contains] [the specified param name]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.IndexOf(System.String)">
            <summary>
            Indexes the of.
            </summary>
            <param name="paramName">Name of the param.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.Sql.SqlParameterList.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Data.SqlClient.SqlParameter"/> with the specified param name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlHelper">
            <summary>
            The SqlHelper class is intended to encapsulate high performance, scalable best practices for 
            common uses of SqlClient.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.WithRetry``1(System.Func{``0})">
            <summary>
            Executes a function with the ability of retrying a request if the error is in SqlTransientErrors.ExecuteRetryable.
            </summary>
            <typeparam name="TResult">The result which <paramref name="action"/> would return.</typeparam>
            <param name="action">The actual action to be executed against the database.</param>
            <returns>The result of <paramref name="action"/>.</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.SqlParameter(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            Creates SQL parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="dbType">Type of the db.</param>
            <param name="size">The size.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.SqlParameter(System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            Creates SQL parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="dbType">Type of the db.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.SqlParameter(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection)">
            <summary>
            Creates SQL parameter.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <param name="dbType">Type of the db.</param>
            <param name="size">The size.</param>
            <param name="direction">The direction.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.CreateRetvalSqlParameter">
            <summary>
            Creates the retval SQL parameter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.Null2DBNull(System.Object)">
            <summary>
            Converts null into DBNull.
            </summary>
            <param name="Value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.DBNull2Null(System.Object)">
            <summary>
            Converts DBNull into null.
            </summary>
            <param name="Value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.DBNull2Null(System.Object,System.Object)">
            <summary>
            Converts DBNull into null.
            </summary>
            <param name="Value">The value.</param>
            <param name="DefaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.Serialize(System.Object)">
            <summary>
            Serializes the specified value.
            </summary>
            <param name="Value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.Deserialize(System.Byte[])">
            <summary>
            Deserializes the specified data.
            </summary>
            <param name="Data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">an array of SqlParameters tho be added to command</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters.
            </summary>
            <param name="commandParameters">array of SqlParameters to be assigned values</param>
            <param name="parameterValues">array of objects holding the values to be assigned</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command.
            </summary>
            <param name="command">the SqlCommand to be prepared</param>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScript(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the sql script.
            </summary>
            <param name="context">The context.</param>
            <param name="Script">The script.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="context">The context.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="context">The context.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <param name="commandParameters">The command parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored prcedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.Data.CommandType,System.String)">
            <summary>
            Executes the dataset.
            </summary>
            <param name="context">The context.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the dataset.
            </summary>
            <param name="context">The context.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <param name="commandParameters">The command parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="context">The context.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(Mediachase.BusinessFoundation.Data.Sql.SqlContext,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="context">The context.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <param name="commandParameters">The command parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],Mediachase.BusinessFoundation.Data.Sql.SqlHelper.SqlConnectionOwnership)">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">a valid SqlConnection, on which to execute this command</param>
            <param name="transaction">a valid SqlTransaction, or 'null'</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">indicates whether the connection parameter was provided by the caller, or created by SqlHelper</param>
            <returns>SqlDataReader containing the results of the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="spName">the name of the stored procedure using "FOR XML AUTO"</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">a valid SqlConnection</param>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>an XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">a valid SqlTransaction</param>
            <param name="spName">the name of the stored procedure</param>
            <param name="parameterValues">an array of objects to be assigned as the input values of the stored procedure</param>
            <returns>a dataset containing the resultset generated by the command</returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.SqlConnectionOwnership">
            <summary>
            this enum is used to indicate whether the connection was provided by the caller, or created by SqlHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlHelper</summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.Sql.SqlHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerService"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerService.Create(Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject)">
            <summary>
            Creates the specified target.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerService.Update(Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject)">
            <summary>
            Updates the specified target.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerService.Load(System.String,Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId)">
            <summary>
            Loads the specified meta class name.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerService.List(System.String,Mediachase.BusinessFoundation.Data.FilterElement[],Mediachase.BusinessFoundation.Data.SortingElement[])">
            <summary>
            Lists the specified meta class name.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <param name="filters">The filters.</param>
            <param name="elements">The elements.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerSoapExtensionReflector">
            <summary>
            Represents business manager SOAP extension reflector.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerSoapExtensionReflector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerSoapExtensionReflector"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerSoapExtensionReflector.ReflectMethod">
            <summary>
            Abstract method that a derived class must implement to add SOAP extension information to a <see cref="T:System.Web.Services.Description.ServiceDescription"></see> object on a per-method basis.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerSoapExtensionReflector.ModifySchemaObject(System.Xml.Schema.XmlSchema)">
            <summary>
            Modifies the schema object.
            </summary>
            <param name="schema">The schema.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerSoapExtensionReflector.ProcessedMethodCount">
            <summary>
            Gets or sets the processed method count.
            </summary>
            <value>The processed method count.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerSoapExtensionReflector.TotalMethodCount">
            <summary>
            Gets or sets the total method count.
            </summary>
            <value>The total method count.</value>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.MetaModelService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.BusinessManagerService"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.MetaModelService.LoadMetaClassNames">
            <summary>
            Loads the meta class names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.MetaModelService.GetMetaClassMetaModel(System.String)">
            <summary>
            Gets the meta class meta model.
            </summary>
            <param name="metaClassName">Name of the meta class.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.#ctor(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject"/> class.
            </summary>
            <param name="innerEntityObject">The inner entity object.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.ConvertToEntity(Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject)">
            <summary>
            Converts to entity.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.Create(Mediachase.BusinessFoundation.Data.Business.EntityObject)">
            <summary>
            Creates the specified ret val object.
            </summary>
            <param name="retValObject">The ret val object.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.Create(Mediachase.BusinessFoundation.Data.Business.EntityObject,System.Boolean)">
            <summary>
            Creates the specified ret val object.
            </summary>
            <param name="retValObject">The ret val object.</param>
            <param name="renderDynamicEntity">if set to <c>true</c> [render dynamic entity].</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.InnerEntityObject">
            <summary>
            Gets or sets the inner entity object.
            </summary>
            <value>The inner entity object.</value>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObject.RenderDynamicEntity">
            <summary>
            Gets or sets a value indicating whether [render dynamic entity].
            </summary>
            <value><c>true</c> if [render dynamic entity]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObjectList">
            <summary>
            Represents ws entity object list.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObjectList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObjectList"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObjectList.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObjectList.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsEntityObjectList.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="renderDynamicEntity">if set to <c>true</c> [render dynamic entity].</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres.Parse(System.String)">
            <summary>
            Parses the specified STR.
            </summary>
            <param name="str">The STR.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsMetaClassParameteres.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId">
            <summary>
            Represents .
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.#ctor(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId"/> class.
            </summary>
            <param name="pkId">The pk id.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.Create(Mediachase.BusinessFoundation.Data.PrimaryKeyId)">
            <summary>
            Creates the specified primary key id.
            </summary>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.ConvertToPrimaryKeyId(Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId)">
            <summary>
            Converts to primary key id.
            </summary>
            <param name="primaryKeyId">The primary key id.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.WebServices.WsPrimaryKeyId.InnerPrimaryKeyId">
            <summary>
            Gets or sets the inner primary key id.
            </summary>
            <value>The inner primary key id.</value>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.WebServices.WsRequest">
            <summary>
            Represents business manager request.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsRequest"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsRequest.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsRequest.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsRequest.CreateRequestInstanceByType(System.String,System.String)">
            <summary>
            Creates the type of the request instance by.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsRequest.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.WebServices.WsResponse">
            <summary>
            Represents ws response.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsResponse"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsResponse.#ctor(Mediachase.BusinessFoundation.Data.Business.Response)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.BusinessFoundation.Data.WebServices.WsResponse"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsResponse.Create(Mediachase.BusinessFoundation.Data.Business.Response)">
            <summary>
            Creates the specified response.
            </summary>
            <param name="response">The response.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsResponse.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsResponse.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WebServices.WsResponse.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="T:Mediachase.BusinessFoundation.Data.WindowsTimeZoneCollection">
            <summary>
            Represents a collection of named time zones.
            </summary>
        </member>
        <member name="F:Mediachase.BusinessFoundation.Data.WindowsTimeZoneCollection.nameMap">
            <summary>
            The dictionary mapping time zones with their names.
            </summary>
        </member>
        <member name="M:Mediachase.BusinessFoundation.Data.WindowsTimeZoneCollection.#ctor(Microsoft.Win32.RegistryKey)">
            <summary>
            Initializes a new instance of
            the <see cref="T:Mediachase.BusinessFoundation.Data.WindowsTimeZoneCollection"/> class.
            </summary>
            <param name="data">The registry data to use
            when populating the collection.</param>
        </member>
        <member name="P:Mediachase.BusinessFoundation.Data.WindowsTimeZoneCollection.Item(System.String)">
            <summary>
            Gets the time zone associated with the specified name.
            </summary>
            <param name="name">The name of the time zone to return.</param>
        </member>
    </members>
</doc>
