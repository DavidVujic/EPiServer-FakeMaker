<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediachase.MetaDataPlus</name>
    </assembly>
    <members>
        <member name="T:Mediachase.MetaDataPlus.Common.AsyncResources">
            <summary>
            This class is used to access the constants defined in the resource 
            file, AsyncResourcesText.resx.	
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.AsyncResources.#ctor">
            <summary>
            Private Constructor prevents class from getting created.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.AsyncResources.GetConstantValue(System.String)">
            <summary>
            This method returns the value of constant from the resources file 
            for the constant variable passed as input to the method.
            </summary>
            <remarks>
            string constantValue = GetConstantValue(constantName);
            </remarks>
            <param name="constantName">
            Constant name for which the value has to be retrieved from the 
            Resource file
            </param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.AsyncResources.InitializeResourceManager">
            <summary>
            This method is used to initialize the resource manager instance 
            variable.
            </summary>
            <remarks>
            ResourceManager resManager = InitializeResourceManager();
            </remarks>
            <returns>
            Instance of ResourceManager class
            </returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Common.DBHelper">
            <summary>
            The DataHelper class is intended to encapsulate high performance, scalable best practices for 
            common uses of SqlClient.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.AttachParameters(Mediachase.Data.Provider.DataCommand,Mediachase.Data.Provider.DataParameter[])">
            <summary>
            This method is used to attach array of DataParameters to a DataCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">an array of DataParameters tho be added to command</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.PrepareCommand(Mediachase.Data.Provider.DataCommand,System.String,System.Data.CommandType,System.String,Mediachase.Data.Provider.DataParameter[])">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters
            to the provided command.
            </summary>
            <param name="command">the DataCommand to be prepared</param>
            <param name="connectionString">The connection string.</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of DataParameters to be associated with the command or 'null' if no parameters are required</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a DataCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,Mediachase.Data.Provider.DataParameter[])">
            <summary>
            Execute a DataCommand (that returns no resultset) against the specified SqlConnection
            using the provided parameters.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>
            an int representing the number of rows affected by the command
            </returns>
            <remarks>
            e.g.:
            int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new DataParameter("prodid", 24));
            </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Int32,Mediachase.Data.Provider.DataParameter[])">
            <summary>
            Execute a DataCommand (that returns no resultset) against the specified SqlConnection
            using the provided parameters.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandTimeout">The wait time before terminating the attempt to execute a command and generating an error.</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>
            an int representing the number of rows affected by the command
            </returns>
            <remarks>
            e.g.:
            int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", 30, new DataParameter("prodid", 24));
            </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,Mediachase.Data.Provider.DataParameter[])">
            <summary>
            Create and prepare a DataCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of DataParameters to be associated with the command or 'null' if no parameters are required</param>
            <returns>
            IDataReader containing the results of the command
            </returns>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a DataCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">a valid connection string for a SqlConnection</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <returns>an object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Common.DBHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,Mediachase.Data.Provider.DataParameter[])">
            <summary>
            Execute a DataCommand (that returns a 1x1 resultset) against the specified SqlConnection
            using the provided parameters.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="commandType">the CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">the stored procedure name or T-SQL command</param>
            <param name="commandParameters">an array of SqlParamters used to execute the command</param>
            <returns>
            an object containing the value in the 1x1 resultset generated by the command
            </returns>
            <remarks>
            e.g.:
            int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new DataParameter("prodid", 24));
            </remarks>
        </member>
        <member name="M:LicensedComponent.Configuration.LicenseStorageSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LicensedComponent.Configuration.LicenseStorageSection"/> class.
            </summary>
        </member>
        <member name="M:LicensedComponent.Configuration.LicenseStorageSection.GetSection">
            <summary>
            Gets the section.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LicensedComponent.Configuration.LicenseStorageSection.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="P:LicensedComponent.Configuration.LicenseStorageSection.AllowUpload">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="P:LicensedComponent.Configuration.LicenseStorageSection.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:LicensedComponent.Configuration.LicenseStorageSection.ProviderCollection">
            <summary>
            Gets the temp file storage providers.
            </summary>
            <value>The temp file storage providers.</value>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection">
            <summary>
            Summary description for MetaAttributeCollection.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,Mediachase.MetaDataPlus.Configurator.MetaAttributeOwnerType,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="OwnerId">The owner id.</param>
            <param name="OwnerType">Type of the owner.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/>
            that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Add(System.Object)">
            <summary>
            Adds method, implement for IEnumerable
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Add(System.String,System.String)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.ContainsValue(System.String)">
            <summary>
            Determines whether the specified value contains value.
            </summary>
            <param name="value">The value.</param>
            <returns>
            	<c>true</c> if the specified value contains value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether this instance is synchronized.
            </summary>
            <value>
            	<c>true</c> if this instance is synchronized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.SyncRoot">
            <summary>
            Gets the sync root.
            </summary>
            <value>The sync root.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaAttributeCollection.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaClass">
            <summary>
            Describes a configurable dynamic data class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.ClearCache">
            <summary>
            Clear meta classes in the cache.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.InvalidateCache(System.Int32)">
            <summary>
            Clear a specific meta class in the cache.
            </summary>
            <param name="metaClassId">The meta class id.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.InsertCache(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Adds or replaces an meta class object in the cache.
            </summary>
            <param name="metaClass">The meta class.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.InsertCache(Mediachase.MetaDataPlus.Configurator.MetaClass,System.TimeSpan)">
            <summary>
            Adds or replaces an meta class object in the cache.
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="timeout">The cache timeout</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.InsertCacheForEmptyObject(System.Object)">
            <summary>
            Add null meta class object in the cache to decrease number of sql call when loading a meta class
            </summary>
            <param name="key">The key will be the id (type of integer), or the name (type of string) of the meta class which needs be loaded</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.#ctor(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Classes derived from MetaClass must call OnMetaClassLoadOrChange once the meta class is fully configured.
            </summary>
            <param name="context">The meta data context.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaClass"/> class from being created.
            This only serves reflection purpose
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaFieldCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaClass"/> class.  This intended to be used in unit testing.
            </summary>
            <param name="id">The identifier.</param>
            <param name="tableName">Name of the table.</param>
            <param name="name">The name.</param>
            <param name="metaNamespace">The meta namespace.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="description">The description.</param>
            <param name="metaFields">The meta fields.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetAllMetaFields">
            <summary>
            Enumerates all meta fields associated with this meta class.
            </summary>
            <returns>An enumerable of the meta fields.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetSystemMetaFields">
            <summary>
            Enumerates the system meta fields associated with this meta class.
            </summary>
            <returns>An enumerable of the system meta fields.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetUserMetaFields">
            <summary>
            Enumerates the user meta fields associated with this meta class.
            </summary>
            <returns>An enumerable of the user meta fields.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetSystemMetaFieldsCopy">
            <summary>
            Gets a collection of system meta fields associated with this meta class.  A new collection is created by the call.
            </summary>
            <returns>The collection of system meta fields.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetUserMetaFieldsCopy">
            <summary>
            Gets a collection of user meta fields associated with this meta class.  A new collection is created by the call.
            </summary>
            <returns>The collection of user meta fields.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetMetaFieldList(System.String)">
            <summary>
            Gets a collection of all the meta fields associated with this meta class, matching the specified namespace.
            </summary>
            <param name="metaNamespace">The namespace to match.</param>
            <returns>A collection of matching meta fields.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetMetaFieldList(System.String,System.Boolean)">
            <summary>
            Gets a collection of all the meta fields associated with this meta class, matching the specified namespace.
            </summary>
            <param name="metaNamespace">The namespace to match.</param>
            <param name="deep">
            If <c>true</c>, then the namespace will match any child namespace as well.
            If <c>false</c>, then only exact namespace matches will be included.
            </param>
            <returns>A collection of matching meta fields.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetFieldWeight(System.Int32)">
            <summary>
            Gets the weight value used to order a meta field within this meta class.
            </summary>
            <param name="metaFieldId">The meta field id.</param>
            <returns>The weight value.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetFieldWeight(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Gets the weight value used to order a meta field within this meta class.
            </summary>
            <param name="field">The meta field.</param>
            <returns>The weight value.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetFieldWeight(System.String)">
            <summary>
            Gets the weight value used to order a meta field within this meta class.
            </summary>
            <param name="fieldName">The name of the meta field.</param>
            <returns>The weight value.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.SetFieldWeight(System.Int32,System.Int32)">
            <summary>
            Sets the weight value used to order a meta field within this meta class.
            </summary>
            <param name="metaFieldId">The id of the meta field.</param>
            <param name="weight">The weight value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.SetFieldWeight(Mediachase.MetaDataPlus.Configurator.MetaField,System.Int32)">
            <summary>
            Sets the weight value used to order a meta field within this meta class.
            </summary>
            <param name="field">The meta field.</param>
            <param name="weight">The weight value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.SetFieldWeight(System.String,System.Int32)">
            <summary>
            Sets the weight value used to order a meta field within this meta class.
            </summary>
            <param name="fieldName">The name of the meta field.</param>
            <param name="weight">The weight value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetFieldEnabled(System.Int32)">
            <summary>
            Gets a value indicating if the specified field is enabled for this meta class.
            </summary>
            <param name="metaFieldId">The meta field id.</param>
            <returns><c>True</c> if the field is enabled, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetFieldEnabled(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Gets a value indicating if the specified field is enabled for this meta class.
            </summary>
            <param name="field">The meta field.</param>
            <returns><c>True</c> if the field is enabled, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetFieldEnabled(System.String)">
            <summary>
            Gets a value indicating if the specified field is enabled for this meta class.
            </summary>
            <param name="fieldName">The meta field name.</param>
            <returns><c>True</c> if the field is enabled, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.SetFieldEnabled(System.Int32,System.Boolean)">
            <summary>
            Enables or disables a field for this meta class.
            </summary>
            <param name="metaFieldId">The meta field id.</param>
            <param name="enabled">If <c>true</c>, enables the meta field; otherwise, disables the metafield.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.SetFieldEnabled(Mediachase.MetaDataPlus.Configurator.MetaField,System.Boolean)">
            <summary>
            Enables or disables a field for this meta class.
            </summary>
            <param name="field">The meta field.</param>
            <param name="enabled">If <c>true</c>, enables the meta field; otherwise, disables the metafield.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.SetFieldEnabled(System.String,System.Boolean)">
            <summary>
            Enables or disables a field for this meta class.
            </summary>
            <param name="fieldName">The meta field name.</param>
            <param name="enabled">If <c>true</c>, enables the meta field; otherwise, disables the metafield.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.AddField(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Adds the specified meta field to this meta class.
            </summary>
            <param name="field">The meta field to add.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.AddField(Mediachase.MetaDataPlus.Configurator.MetaField,System.Int32)">
            <summary>
            Adds the specified meta field to this meta class.
            </summary>
            <param name="field">The meta field to add.</param>
            <param name="weight">The weight to add the meta field with.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.AddField(System.Int32,System.Int32)">
            <summary>
            Adds the specified meta field to this meta class.
            </summary>
            <param name="metaFieldId">The id of the meta field to add.</param>
            <param name="weight">The weight to add the meta field with.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.DeleteField(System.Int32)">
            <summary>
            Removes the association from this meta class to the specified meta field.
            </summary>
            <param name="metaFieldId">The meta field id.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.DeleteField(System.String)">
            <summary>
            Removes the association from this meta class to the specified meta field.
            </summary>
            <param name="metaFieldName">The meta field name.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.DeleteField(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Removes the association from this meta class to the specified meta field.
            </summary>
            <param name="field">The meta field.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GenerateMetaClassView(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Generates view, a replacement for meta data tables.
            </summary>
            <param name="metaClass">The metaclass to generate view.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaClass,System.Boolean,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaClass,System.Boolean,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaClass,Mediachase.MetaDataPlus.Configurator.MetaClassType,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaClass,Mediachase.MetaDataPlus.Configurator.MetaClassType,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.Int32,Mediachase.MetaDataPlus.Configurator.MetaClassType,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.String,System.Int32,Mediachase.MetaDataPlus.Configurator.MetaClassType,System.String)">
            <summary>
            Creates the specified meta class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetList(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the list.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetList(Mediachase.MetaDataPlus.MetaDataContext,System.Boolean)">
            <summary>
            Gets a collection of meta classes.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="listInherited">
            If <c>true</c>, then all classes will be included in the collection.
            If <c>false</c>, the only classes without a parent will be included in the collection.
            </param>
            <returns>The collection of specified meta classes.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.GetList(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.Boolean)">
            <summary>
            Gets a list of meta classes by namespace.
            </summary>
            <param name="context">The meta data context to access the database with.</param>
            <param name="metaNamespace">The namespace to search.</param>
            <param name="deep">
            If <c>true</c>, only classes directly in the specified namespace will be returned.
            If <c>false</c>, classes in children of the specified namespace will also be returned.
            </param>
            <returns>A collection of matching meta classes.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Load(Mediachase.MetaDataPlus.MetaDataContext,System.String)">
            <summary>
            Loads a meta class by name.
            </summary>
            <param name="context">The meta data context to access the database with.</param>
            <param name="name">The name of the meta class.</param>
            <returns>The specified meta class.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32)">
            <summary>
            Loads a meta class by id.
            </summary>
            <param name="context">The meta data context to access the database with.</param>
            <param name="id">The unique identifier of the meta class.</param>
            <returns>The specified meta class.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClass.Delete(Mediachase.MetaDataPlus.MetaDataContext,System.Int32)">
            <summary>
            Deletes the specified meta class id.
            </summary>
            <param name="context">The context.</param>
            <param name="metaClassId">The meta class id.</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Context">
            <summary>
            The meta data context used to load or create this field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Id">
            <summary>
            The unique identifier of the meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.TableName">
            <summary>
            The name of the table used to store values of the meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.MetaClassType">
            <summary>
            The type of the meta class.
            </summary>
            <value>The type of the meta class.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.IsSystem">
            <summary>
            <c>True</c> if this is a system meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.IsAbstract">
            <summary>
            <c>True</c> if this is an abstract meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.IsUser">
            <summary>
            <c>True</c> if this is a user meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Namespace">
            <summary>
            The namespace of the meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Name">
            <summary>
            The unique name of the meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.FriendlyName">
            <summary>
            The friendly name of the meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Description">
            <summary>
            The long description of the meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Parent">
            <summary>
            The parent meta class, or null if there is not a parent meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.ChildClasses">
            <summary>
            A collection of child meta classes.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.MetaFields">
            <summary>
            The meta fields associated with this meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Attributes">
            <summary>
            A collection of attributes describing additional properties of the meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.Tag">
            <summary>
            A binary value attached to the meta class.
            </summary>
            <remarks>The usage of this data is unclear. The data for this property may only be a byte array.</remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.FieldListChangedSqlScript">
            <summary>
            A script to execute when the set of associated meta fields changes.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.SystemMetaFields">
            <summary>
            A collection of system meta fields associated with this meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.UserMetaFields">
            <summary>
            A collection of user meta fields associated with this meta class.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.IsCatalogMetaClass">
            <summary>
            Checks if a meta class is for catalog system (Meta class of CatalogNode, CatalogEntry)
            </summary>
            <returns>true if the metaclass is for catalog system; otherwise, false</returns>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClass.IsCatalogEntryMetaClass">
            <summary>
            Checks if a meta class is for catalog entry or not.
            </summary>
            <returns>true if the metaclass is for catalog entry; otherwise, false</returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaClassCollection">
            <summary>
            Summary description for MetaClassCollection.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClassCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaClassCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClassCollection.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaClassCollection"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClassCollection.Add(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Adds the specified new item.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClassCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClassCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaClass"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClassCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaClass"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaClassIdCollection">
            <summary>
            Summary description for MetaClassIdCollection.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClassIdCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaClassIdCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaClassIdCollection.Add(System.Int32)">
            <summary>
            Adds the specified new item.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClassIdCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaClassIdCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Int32"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.ClearCache">
            <summary>
            Clear meta keys in the cache.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.InvalidateCache(System.Int32,Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Clear a specific meta key in the cache.
            </summary>
            <param name="metaKey">The meta key.</param>
            <param name="metaField">The meta field.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.RemoveAndInsertCache(System.Int32,Mediachase.MetaDataPlus.Configurator.MetaField,System.Object)">
            <summary>
            Adds or replaces an meta key value in the cache, making
            sure remote caches and dependent items are also cleared.
            </summary>
            <param name="metaKey">The meta key.</param>       
            <param name="metaField">The meta field.</param>
            <param name="value">The value data.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.GetApplicationValue(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.Configurator.MetaField,System.Object)">
            <summary>
            Formats a value from the database to a value for use in the application.
            This may access and modify the database for complex data types.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="metaField">The meta field that the value is an instance of.</param>
            <param name="value">The meta field value, as represented in the result of a database call.</param>
            <returns>The meta field value, as represented in the database.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.GetDatabaseValue(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.MetaObject,Mediachase.MetaDataPlus.Configurator.MetaField,System.Object)">
            <summary>
            Formats a value from the application to a value suitable for use in a stored procedure parameter.
            This may access and modify the database for complex data types.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="metaObject">The meta object that the value is contained in.</param>
            <param name="metaField">The meta field that the value is an instance of.</param>
            <param name="value">The value, as represented in the application domain.</param>
            <returns>The value formatted for use in a database call.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.GetDatabaseValue(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.MetaObject,System.Nullable{System.Int32},Mediachase.MetaDataPlus.Configurator.MetaField,System.Object)">
            <summary>
            Formats a value from the application to a value suitable for use in a stored procedure parameter.
            This may access and modify the database for complex data types.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="metaObject">The meta object that the value is contained in.</param>
            <param name="workId">The content work Id.</param>
            <param name="metaField">The meta field that the value is an instance of.</param>
            <param name="value">The value, as represented in the application domain.</param>
            <returns>The value formatted for use in a database call.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.ParseSimpleMetaFieldValue(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.Configurator.MetaField,System.String)">
            <summary>
            Parses the simple meta field value.
            </summary>
            <param name="metaDataContext">The meta data context.</param>
            <param name="metaField">The meta field.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.FormatException">
            </exception>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.GetMetaFieldSerializationValue(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.Configurator.MetaField,System.Object)">
            <summary>
            Gets the serialization value for the meta field.
            </summary>
            <param name="context">The context.</param>
            <param name="metaField">The meta field.</param>
            <param name="value">The value.</param>
            <returns></returns>
            <exception cref="T:System.NotSupportedException">MetaDataType File is not supported in seralization</exception>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypes.GetColumnName(Mediachase.MetaDataPlus.Configurator.MetaDataType)">
            <summary>
            Gets the appropriated property column name, based on the input <paramref name="type"/>.
            </summary>
            <param name="type">The meta data type to get the appropriated column name.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaDictionary">
            <summary>
            Represents a MetaDictionary.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.#ctor(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionary"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.ReloadMetaDictionary">
            <summary>
            Reloads the meta dictionary.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32)">
            <summary>
            Loads the specified meta field id.
            </summary>
            <param name="context">The context.</param>
            <param name="metaFieldId">The meta field id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Load(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Loads the specified field.
            </summary>
            <param name="context">The context.</param>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Contains(System.Int32)">
            <summary>
            Determines whether [contains] [the specified meta dictionary item id].
            </summary>
            <param name="metaDictionaryItemId">The meta dictionary item id.</param>
            <returns>
            	<c>true</c> if [contains] [the specified meta dictionary item id]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.GetItem(System.Int32)">
            <summary>
            Gets the item.
            </summary>
            <param name="metaDictionaryItemId">The meta dictionary item id.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified value].
            </summary>
            <param name="defaultValue">The default value.</param>
            <returns>
            	<c>true</c> if [contains] [the specified value]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.GetItem(System.String)">
            <summary>
            Gets the item.
            </summary>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Add(System.String)">
            <summary>
            Adds the dictionary item.
            </summary>
            <param name="value">The value.</param>
            <returns>The Id of the added Dictionary Item</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Add(System.String,System.String)">
            <summary>
            Adds the dictionary item.
            </summary>
            <param name="defaultValue">The default value.</param>
            <param name="value">The value.</param>
            <returns>The Id of the added Dictionary Item</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Add(System.String,System.String,System.Object,System.Object)">
            <summary>
            Adds the dictionary item.
            </summary>
            <param name="defaultValue">The default value.</param>
            <param name="value">The value.</param>
            <param name="defaultTag">The default tag.</param>
            <param name="tag">The tag.</param>
            <returns>The Id of the added Dictionary Item</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Add(System.String,System.String,System.Object,System.Object,Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Adds the dictionary item.
            </summary>
            <param name="defaultValue">The default value.</param>
            <param name="value">The value.</param>
            <param name="defaultTag">The default tag.</param>
            <param name="tag">The tag.</param>
            <param name="context">The context.</param>
            <returns>The Id of the added Dictionary Item</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Add(Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns>The Id of the added Dictionary Item</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.DeleteAt(System.Int32)">
            <summary>
            Deletes at.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Delete(System.Int32)">
            <summary>
            Deletes the specified meta dictionary id.
            </summary>
            <param name="metaDictionaryId">The meta dictionary id.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Delete(Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem)">
            <summary>
            Deletes the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Update(System.Int32,System.String)">
            <summary>
            Updates the specified meta dictionary item id.
            </summary>
            <param name="metaDictionaryItemId">The meta dictionary item id.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionary.OwnerMetaFieldId">
            <summary>
            Gets the owner meta field id.
            </summary>
            <value>The owner meta field id.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionary.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem">
            <summary>
            Represents a MetaDictionary Item.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="id">The id.</param>
            <param name="metaFieldId">The meta field id.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="id">The id.</param>
            <param name="metaFieldId">The meta field id.</param>
            <param name="defaultValue">The default value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.#ctor(Mediachase.MetaDataPlus.MetaDataContext,System.Data.DataRowView)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="drv">The DataRowView.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> class from being created.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem"/> class.
            </summary>
            <param name="defaultValue">The default value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <remarks> Instances are considered Equal if <see cref="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.Id"/> are equal. </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.State">
            <summary>
            Gets the state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.OwnerMetaFieldId">
            <summary>
            Gets the owner meta field id.
            </summary>
            <value>The owner meta field id.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaDictionaryItem.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.ClearCache">
            <summary>
            Clear meta classes in the cache.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.InvalidateCache(System.Int32)">
            <summary>
            Clear a specific meta class in the cache.
            </summary>
            <param name="metaFieldId">The meta field id.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.InsertCache(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Adds or replaces an meta class object in the cache.
            </summary>
            <param name="metaField">The meta field.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.InsertCache(Mediachase.MetaDataPlus.Configurator.MetaField,System.TimeSpan)">
            <summary>
            Adds or replaces an meta field object in the cache.
            </summary>
            <param name="metaField">The meta field.</param>
            <param name="timeout">The cache timeout</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.InsertCacheForEmptyObject(System.Object)">
            <summary>
            Add null meta field object in the cache to decrease number of sql call when loading a meta field
            </summary>
            <param name="key">The key will be the id (type of integer), or the name (type of string) of the meta field which needs be loaded</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.IsDictionary">
            <summary>
            Determines whether this instance is dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaField"/> class from being created.
            This is here only to serves Serializer
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.#ctor(System.Int32,System.String,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaField"/> class.  This is intended to be used for unit testing.
            </summary>
            <param name="id">The identifier.</param>
            <param name="metaNamespace">The meta namespace.</param>
            <param name="name">The name.</param>
            <param name="friendlyName">Name of the friendly.</param>
            <param name="description">The description.</param>
            <param name="dataType">Type of the data.</param>
            <param name="length">The length.</param>
            <param name="allowNulls">if set to <c>true</c> [allow nulls].</param>
            <param name="multiLanguageValue">if set to <c>true</c> [multi language value].</param>
            <param name="allowSearch">if set to <c>true</c> [allow search].</param>
            <param name="isEncrypted">if set to <c>true</c> [is encrypted].</param>
            /// <param name="isSystem">if set to <c>true</c> [is system].</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new meta field with the specified properties.
            </summary>
            <returns>The newly created meta field.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.Create(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new meta field with the specified properties.
            </summary>
            <returns>The newly created meta field.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.CreateVirtual(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.String,System.String,System.String,Mediachase.MetaDataPlus.Configurator.MetaDataType,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a mock-up of a meta field with the specified parameters, but does not save the field to any backing store.
            </summary>
            <returns>The mock meta field.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.OnUpdated">
            <summary>
            Raises Meta field updated event.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaField.RegularExpressionValidatorIsValidName(System.String)">
             <summary>
             Validate Name using regular expresions
            </summary>
             <param name="name">The name.</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Context">
            <summary>
            The meta data context used to load or create this field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Id">
            <summary>
            The unique ID of the meta field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Name">
            <summary>
            The unique name of the meta field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.DataType">
            <summary>
            The type of data stored in the meta field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Length">
            <summary>
            The length (in bytes, not characters) of the database storage used for the field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.AllowNulls">
            <summary>
            If <c>true</c>, the field may store null values.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.IsSystem">
            <summary>
            If <c>true</c>, the field is defined in a system table and cannot be modifed.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.IsUser">
            <summary>
            If <c>true</c>, the field is defined by the meta data system.
            </summary>
            <remarks>Will always be the opposite of IsSystem.</remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Namespace">
            <summary>
            The namespace of the meta field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.FriendlyName">
            <summary>
            The friendly name of the meta field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Description">
            <summary>
            The long description of the meta field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.SaveHistory">
            <summary>
            If <c>true</c>, a history of changes to value in this meta field will be saved.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.MultiLanguageValue">
            <summary>
            If <c>true</c>, this meta field stores different values for different languages.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.AllowSearch">
            <summary>
            If <c>true</c>, search providers will attempt to index values of this meta field.
            </summary>
            <remarks>
            Modifying the value of the AllowSearch property may immediately attempt to
            modify the configuration of SQL fulltext indexes, which will fail when called
            in an explicit transaction.  Use SetAllowSearch to modify the field and explicitly
            control whether or not the fulltext indexes are modified.  SafeAllowSearch is also
            provided, since the set property cannot be obsoleted without also obsoleting the get.
            </remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.IsEncrypted">
            <summary>
            If <c>true</c>, the values of this meta field will be encrypted.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.OwnerMetaClassIdList">
            <summary>
            A collection of the meta classes that include this meta field.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Enabled">
            <summary>
            <c>True</c> if this meta field is enabled in OwnerMetaClass, otherwise false.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Weight">
            <summary>
            The ordering weight of this meta field in OwnerMetaClass.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Tag">
            <summary>
            A binary value attached to the meta field.
            </summary>
            <remarks>The usage of this data is unclear. The data for this property may only be a byte array.</remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaField.Attributes">
            <summary>
            A collection of attributes describing additional properties of the meta field.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants">
            <summary>
            Meta field attribute constants.
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.UseInComparingAttributeName">
            <summary>
            UseInComparing attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.MdpPrecisionAttributeName">
            <summary>
            MdpPrecision attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.MdpScaleAttributeName">
            <summary>
            MdpScale attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.AutoResizeAttributeName">
            <summary>
            AutoResize attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.CreateThumbnailAttributeName">
            <summary>
            CreateThumbnail attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.IndexStoredAttributeName">
            <summary>
            Indexstored attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.SortableAttributeName">
            <summary>
            Indexsortable attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.TokenizedAttributeName">
            <summary>
            Indexfield attribute name
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaFieldAttributeConstants.IncludeInDefaultSearchAttributeName">
            <summary>
            Includeindefaultsearch attribute name
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection">
            <summary>
            Summary description for MetaFieldCollection.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.Add(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Adds the specified new item.
            </summary>
            <param name="newItem">The new item.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.Delete(System.Int32)">
            <summary>
            Deletes the specified meta field id.
            </summary>
            <param name="metaFieldId">The meta field id.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.IndexOf(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Indexes the of.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.Contains(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Determines whether [contains] [the specified field].
            </summary>
            <param name="field">The field.</param>
            <returns>
            	<c>true</c> if [contains] [the specified field]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.Owner">
            <summary>
            Sets the owner intended to be used in unit testing
            </summary>
            <value>
            The owner.
            </value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaField"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.Configurator.MetaFieldCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaField"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaDataType">
            <summary>
            Summary description for MetaFieldType.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaDataPlusImportExportProgressMessageHandler">
            <summary>
            Handles the import/export progress message.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaDataPlusImportExportMessageType">
            <summary>
            The ImportExportMessageType enumeration defines the import/export message type.
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaDataPlusImportExportMessageType.Info">
            <summary>
            Represents the info message type.
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.MetaDataPlusImportExportMessageType.Warning">
            <summary>
            Represents the warning message type.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaInstaller">
            <summary>
            Summary description for MetaInstaller.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.BackupMetaClasses(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.Boolean,System.Int32[])">
            <summary>
            Writes structure of selected meta classes to <paramref name="destFileName"/>.
            </summary>
            <param name="context">The context.</param>
            <param name="destFileName">Name of the dest file.</param>
            <param name="includeSystemMetaFields">if set to <c>true</c> [include system meta fields].</param>
            <param name="selected">Ids of meta classes to backup</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.BackupMetaClasses(Mediachase.MetaDataPlus.MetaDataContext,System.Boolean,System.Int32[])">
            <summary>
            Backups the meta classes.
            </summary>
            <param name="context">The context.</param>
            <param name="includeSystemMetaFields">if set to <c>true</c> [include system meta fields].</param>
            <param name="selected">Ids of meta classes to backup</param>
            <returns>
            Xml string with structure of selected meta classes.
            </returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.BackupMetaClasses(Mediachase.MetaDataPlus.MetaDataContext,System.Xml.XmlNode,System.Boolean,System.Boolean,System.Int32[])">
            <summary>
            Writes structure of selected meta classes to <paramref name="destNode"/>.
            </summary>
            <param name="context">The context.</param>
            <param name="destNode">The destination node.</param>
            <param name="append">if set to <c>true</c> [append].</param>
            <param name="includeSystemMetaFields">if set to <c>true</c> [include system meta fields].</param>
            <param name="selected">Ids of meta classes to backup</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.GetMetaFieldsListForMetaClasses(System.Collections.Generic.List{Mediachase.MetaDataPlus.Configurator.MetaClass},System.Boolean)">
            <summary>
            Returns MetaFields that belong to at least one meta class in the list.
            </summary>
            <param name="metaClassesList"></param>
            <param name="includeSystemMetaFields">If false, only User Meta Fields will be returned.</param>
            <remarks>Each MetaField is contained only once in the output list.</remarks>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.Backup(System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="destFileName"></param>
            <param name="selected">Array of MetaClasses or MetaFields</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.Backup(System.Xml.XmlNode,System.Boolean,System.Object[])">
            <summary>
            Backs up MetaData.
            </summary>
            <param name="destNode"></param>
            <param name="append">True, to append only meta data itself; False, to create MetaDataPlusBackup node.</param>
            <param name="selected"></param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.BackupMetaField(System.Xml.XmlNode,Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Writes MetaField structure to <paramref name="root"/>. Includes MetaClass-MetaField relations.
            </summary>
            <param name="root"></param>
            <param name="mf"></param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.OnImportExportProgressMessage(System.Object,System.String)">
            <summary>
            Raises the <see cref="E:ImportExportProgressMessage"/> event.
            </summary>
            <param name="source">The source.</param>
            <param name="message">The message text.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.OnEvent(System.String)">
            <summary>
            Called when [event].
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaInstaller.OnEvent(System.String,Mediachase.MetaDataPlus.Configurator.MetaDataPlusImportExportMessageType)">
            <summary>
            Called when [event].
            </summary>
            <param name="message">The message.</param>
            <param name="msgType">The message type.</param>
        </member>
        <member name="E:Mediachase.MetaDataPlus.Configurator.MetaInstaller.ImportExportProgressMessage">
            <summary>
            Occurs when [import export progress message].
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.ObjectType.CatalogEntry">
            <summary>
            The catalog entry
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.Configurator.ObjectType.CatalogNode">
            <summary>
            The catalog node
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaObjectDB">
            <summary>
            This class is used to manage all DB access of catalog meta object (meta object of Catalog, CatalogNode, CatalogEntry). 
            All user-defined fields data are now stored in CatalogContentProperty table, instead of MataDataPlus table
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaObjectDB.UpdateMetaObject(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.MetaObject,System.Collections.Generic.Dictionary{Mediachase.MetaDataPlus.Configurator.MetaField,Mediachase.Data.Provider.DataParameter},System.Boolean)">
            <summary>
            Updates a meta object. It updates all user-defined fields of the meta object in CatalogContentProperty and extra info on CatalogContentEx table.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="metaObject">The meta object.</param>
            <param name="metaParams">The dictionary (metafield, dataparameter).</param>
            <param name="disableSync">Sync with versions.</param>
            <returns>meta object id</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaObjectDB.CreateBatchOfContentPropertyTable(Mediachase.MetaDataPlus.MetaDataContext,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,Mediachase.MetaDataPlus.MetaObject}},System.Collections.Generic.Dictionary{System.Int32,Mediachase.MetaDataPlus.MetaObject}@)">
            <summary>
            Create parameter of type udttCatalogContentProperty. This parameter will be passed in a stored procedure
            </summary>
            <param name="context">The meta data context</param>
            <param name="metaObjectsList">The dictionary of MetaData objects.</param>
            <param name="idObjectMapping">The mapping between object id and meta object.</param>
            <returns>the paramerter</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaObjectDB.UpdateBatchOfMetaObject(Mediachase.MetaDataPlus.MetaDataContext,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,Mediachase.MetaDataPlus.MetaObject}})">
            <summary>
            Updates batch of meta object. It updates all user-defined fields of the meta object in CatalogContentProperty and extra info on CatalogContentEx table.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="metaObjectsList">The dictionary of MetaData objects.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaObjectDB.LoadMetaObjectData(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,Mediachase.MetaDataPlus.Configurator.MetaClass,System.String)">
            <summary>
            Load meta object data. It loads all user-defined fields of the meta object from CatalogContentProperty table and extra info from CatalogContentEx table.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="metaObjectId">The meta object id.</param>
            <param name="metaClass">The meta class.</param>
            <param name="fallbackLanguage">The fallback language in case there is no record available for the language of <paramref name="context"/>.</param>
            <returns>Dictionary of meta fields and their values</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaObjectDB.DeleteMetaObject(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.MetaObject)">
            <summary>
            Delete a meta object. It deletes all fields in CatalogContentPropery and all drafts of this content
            </summary>
            <param name="context">the meta data context</param>
            <param name="metaObject">the meta object</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaObjectDB.CreateContentPropertyTable(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.MetaObject,System.Collections.Generic.Dictionary{Mediachase.MetaDataPlus.Configurator.MetaField,Mediachase.Data.Provider.DataParameter},System.Int32)">
            <summary>
            Create parameter of type udttCatalogContentProperty. This parameter will be passed in a stored procedure
            </summary>
            <param name="context">The meta data context</param>
            <param name="metaObject">the meta object</param>
            <param name="metaParams">The dictionary of (metafield, dataparameter)</param>
            <param name="objectTypeId">The type Id of the meta object.</param>
            <returns>the paramerter</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaObjectDB.CreateContentExTable(Mediachase.MetaDataPlus.MetaDataContext,System.Collections.Generic.Dictionary{System.Int32,Mediachase.MetaDataPlus.MetaObject})">
            <summary>
            Create table parameter of type udttCatalogContentEx.
            </summary>
            <param name="context">The meta data context</param>
            <param name="idObjectMapping">The mapping between object id and meta object.</param>
            <returns>The data table paramerter</returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaType">
            <summary>
            Summary description for MetaType.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaType.Load(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.Configurator.MetaDataType)">
            <summary>
            Loads the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaType.GetSqlMetaTypes(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the SQL meta types.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaType.GetMetaDataMetaTypes(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Gets the meta data meta types.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaTypeCollection">
            <summary>
            Summary description for MetaTypeCollection.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Extensions.DateTimeExtensions">
            <summary>
            Extension methods for <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Extensions.DateTimeExtensions.TruncateToSqlDateTimeRange(System.DateTime)">
            <summary>
            Truncates a datetime instance so it fits inside the range representable by
            <see cref="T:System.Data.SqlTypes.SqlDateTime"/>
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>The truncated date time.</returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaDataTypeExtensions">
            <summary>
            Contains extension methods for <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDataType"/>.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataTypeExtensions.IsDateTimeType(Mediachase.MetaDataPlus.Configurator.MetaDataType)">
            <summary>
            Determines whether <see cref="T:Mediachase.MetaDataPlus.Configurator.MetaDataType"/> represents a DateTime.
            </summary>
            <param name="dataType">The meta data type.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Extensions.SerializationEntryExtensions">
            <summary>
            Extension methods deailing with SerializationInfoEntry
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Extensions.SerializationEntryExtensions.GetValue(System.Runtime.Serialization.SerializationEntry,Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Gets the value.
            </summary>
            <param name="serializationEntry">The serialization entry.</param>
            <param name="metaField">The meta field.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Extensions.StringExtensions">
            <summary>
            Common string extension methods
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Extensions.StringExtensions.TryParseDecimalExactCulture(System.String,System.Globalization.CultureInfo,System.Decimal@)">
            <summary>
            Tries to parse the string into a decimal for the specified culture with exact thousand and decimal seperators.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Extensions.StringExtensions.TryParseDoubleExactCulture(System.String,System.Globalization.CultureInfo,System.Double@)">
            <summary>
            Tries to parse the string into a double for the specified culture with exact thousand and decimal seperators.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Extensions.StringExtensions.TryParseIntegerExactCulture(System.String,System.Globalization.CultureInfo,System.Int32@)">
            <summary>
            Tries to parse the string into a integer for the specified culture with exact thousand seperator.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture.</param>
            <param name="result">The result.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Extensions.StringExtensions.GetSerializedMetaFieldValue(System.String,Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Gets the meta field value from serialization format.
            </summary>
            <param name="value">The value.</param>
            <param name="metaField">The meta field.</param>
            <returns>The parsed meta field value</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Helpers.MetaObjectHelper.UpdateBatchOfMetaObject(Mediachase.MetaDataPlus.MetaDataContext,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,Mediachase.MetaDataPlus.MetaObject}})">
            <summary>
            Updates batch of meta object. It updates all user-defined fields of the meta object in CatalogContentProperty and extra info on CatalogContentEx table.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="metaObjectsList">The dictionary of MetaData objects.</param>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaDictionaryItemUsages">
            <summary>
            Class used to get id of entries and nodes which are using a specific dictionary item. 
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDictionaryItemUsages.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.MetaDictionaryItemUsages"/> class.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDictionaryItemUsages.IsDictionaryItemInUse(System.Int32,System.Int32)">
            <summary>
            Checks if any entry or node is using the specified item.
            </summary>
            <param name="metaFieldId">The if of meta field of type dictionary.</param>
            <param name="itemId">The item id.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaDataEventBroadcaster">
            <summary>
            Represents the event broadcaster for MetaData events. The purpose is to broadcast events to other sites, for example front-end site, to synchronize models.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataEventBroadcaster.MetaFieldLinked(System.Object,Mediachase.MetaDataPlus.MetaDataEventArgs)">
            <summary>
            Metafield linked to metaclass.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataEventBroadcaster.MetaFieldUnlinked(System.Object,Mediachase.MetaDataPlus.MetaDataEventArgs)">
            <summary>
            Metafiled unlinked from metaclass.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataEventBroadcaster.MetaFieldUpdated(System.Object,Mediachase.MetaDataPlus.MetaDataEventArgs)">
            <summary>
            A meta field has been updated.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The meta data event arguments.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataEventBroadcaster.Serialize(Mediachase.MetaDataPlus.MetaDataChangeEventArgs)">
            <summary>
            Serialize commerce update event arguments
            </summary>
            <param name="e"> Event arguments</param>
            <returns></returns>           
        </member>
        <member name="T:Mediachase.MetaDataPlus.IMetaDataEventListener">
            <summary>
            Provides the methods necessary for the meta data event listener.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.IMetaDataEventListener.MetaFieldLinked(System.Object,Mediachase.MetaDataPlus.MetaDataEventArgs)">
            <summary>
            Metafield linked to metaclass.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.IMetaDataEventListener.MetaFieldUnlinked(System.Object,Mediachase.MetaDataPlus.MetaDataEventArgs)">
            <summary>
            Metafiled unlinked from metaclass.
            </summary>
            <param name="source">The source.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.ColumnInfo">
            <summary>
            Summary description for ColumnInfo.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.ImportValidator">
            <summary>
            Validate files that is about to be imported.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Import.ImportValidator.ValidateMappingRule(System.Collections.Generic.IEnumerable{System.String},Mediachase.MetaDataPlus.Import.Rule,System.String@)">
            <summary>
            Validates the mapping rule.
            </summary>
            <param name="supportedLanguages">The supported languages.</param>
            <param name="mappingRule">The mapping rule.</param>
            <param name="errorMessage">An error message that will be returned if the mapping rules has validation errors.</param>
            <returns><c>True</c> if the mapping rule is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.RowAction">
            <summary>
            Summary description for RowAction.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.FillDataMode">
            <summary>
            Summary description for FillDataMode.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.MDPImportWarning">
            <summary>
            Summary description for FillResult.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.IIncomingDataParser">
            <summary>
            Summary description for IIncomingDataParser.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.MDPImportException">
            <summary>
            Summary description for ImportExceptions.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Import.MappingMetaClass.RaiseObjectUpdatedEvent(System.Int32)">
            <summary>
            Raise updated event when metaobject updated successfully.
            </summary>
            <param name="objectId">The object id.</param>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.Parser.CsvIncomingDataParser">
            <summary>
            Summary description for CsvIncomingDataParser.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.Parser.OleDbIncomingDataParser">
            <summary>
            Summary description for OleDbIncomingDataParser.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.Parser.XmlIncomingDataParser">
            <summary>
            Summary description for XmlIncomingDataParser.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.Rule">
            <summary>
            Summary description for Rule.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Import.RuleItem">
            <summary>
            Summary description for RuleItem.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaDataEventArgs">
            <summary>
            Provides data for MetaData events.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataEventArgs.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Initializes a new instance of the <see cref="T:MetaDataEventArgs"/> class.
            </summary>
            <param name="mc">The meta class.</param>
            <param name="mf">The meta field.</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaDataEventArgs.MetaClass">
            <summary>
            Gets the meta class.
            </summary>
            <value>The meta class.</value>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaDataEventArgs.MetaField">
            <summary>
            Gets the meta field.
            </summary>
            <value>The meta field.</value>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaDataContext">
            <summary>
            Summary description for MetaDataContext.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataContext.OnMetaFieldUpdated(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            When a meta field was updated.
            </summary>
            <param name="mf">Updated meta field.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataContext.RaiseMetaFieldUpdated(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Raises the meta field updated event.
            </summary>
            <param name="mf">Updated meta field.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaDataContext.RegisterEventListenersFromContainer">
            <summary>
            Loads interface implementations from service locator and binds them to appropriate delegates
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaDataContext.Instance">
            <summary>
            Returns an instance of meta data context class
            </summary>
            <value>The instance.</value>
        </member>
        <member name="T:Mediachase.MetaDataPlus.Configurator.MetaDataPlusDatabase">
            <summary>
            Encapsulates database calls for the metadata system.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.Configurator.MetaDataPlusDatabase.GenerateMetaClassView(Mediachase.MetaDataPlus.MetaDataContext,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            Generates view, a replacement for meta data tables.
            </summary>
            <param name="context">The MetaDataContext to execute query.</param>
            <param name="viewName">The view name, or table name of the meta class.</param>
            <param name="columnMappings">The mapping between meta field name and the appropriated column name of Property table.</param>
            <param name="metaClassId">The meta class id.</param>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaDataChangeEventArgs">
            <summary>
            Events for metadata update
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaDataChangeEventArgs.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaDataChangeEventArgs.MetaClassName">
            <summary>
            Metaclass name
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaDataChangeEventArgs.MetaFieldName">
            <summary>
            Metafield name
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaDataChangeEventArgs.ForceSyncModel">
            <summary>
            This type/member supports the EPiServer infrastructure and is not intended to be
            used directly from your code.
            
            Flag to indicate whether the Model repository should be updated/synchronized to reflect changes.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaException">
            <summary>
            Summary description for MetaException.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaFile">
            <summary>
            Summary description for MetaFile.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaNamespace">
            <summary>
            Summary description for MetaNamespaceConstants.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaObject">
            <summary>
            Stores the user meta fields of an instance of a meta class, for a single language.
            </summary>
            <remarks>
            Though the object is marked as serializable, the custom serialization handlers do not properly
            save all data.  Only the meta class, object state, and field storage are saved.  Any use of a
            meta object that has gone through the custom serialization is likely to cause issues.
            </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.ConstructCacheKey(System.Int32,Mediachase.MetaDataPlus.Configurator.MetaClass,System.String)">
            <summary>
            Constructs cache key for a MetaObject from object Id, Meta Class and the optional language code. 
            If the language code is null or empty, returns the root cache key. When cleaning this root cached item, all cached item for every language will be cleared.
            </summary>
            <param name="objectId">Object id to construct cache key.</param>
            <param name="metaClass">MetaClass to construct cache key.</param>
            <param name="language">Optional language code.</param>
            <returns>Cache key as string.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.SetMetaField(System.String,System.Object,System.Boolean)">
            <summary>
            Sets the named metafield to the value.  If validation is enabled, the type of the value is checked and the state of the object is updated.
            </summary>
            <param name="fieldName">The name of the meta field to set.</param>
            <param name="value">The value to set in the field.</param>
            <param name="validate">If <c>true</c>, the value type is checked and the object state is updated.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Creates a new meta object of the specified class.
            </summary>
            <param name="metaClass">The type of meta object to create.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Int32)">
            <summary>
            Creates a new meta object of the specified class, with the specified identifier.
            </summary>
            <param name="metaClass">The type of meta object to create.</param>
            <param name="objectId">The unique identifier for the object.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            This constructor builds a meta object by using metaclass, object id and a dictionary of fields which is loaded from CatalogContentProperty table
            </summary>
            <param name="metaClass">the meta class</param>
            <param name="objectId">the object id</param>
            <param name="fieldStorage">dictionary of fields</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.#ctor(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Int32,System.DateTime,System.DateTime,System.String,System.String,Mediachase.MetaDataPlus.MetaObjectState,System.Collections.Hashtable)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.MetaObject"/> class.  This is intended to be used in unit testing the MetaObject
            </summary>
            <param name="metaClass">The meta class.</param>
            <param name="objectId">The object identifier.</param>
            <param name="created">The created.</param>
            <param name="modified">The modified.</param>
            <param name="creatorId">The creator identifier.</param>
            <param name="modifierId">The modifier identifier.</param>
            <param name="metaObjectState">State of the meta object.</param>
            <param name="metaFields">The meta fields.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetValues">
            <summary>
            Creates and returns a copy of the entire field values hashtable.
            </summary>
            <returns>The cloned hashtable.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetComplexFieldValues">
            <summary>
            Creates and returns a copy of the field values hashtable, with only fields of complex types.
            </summary>
            <returns>The filtered, cloned hashtable.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetElementaryFieldValues">
            <summary>
            Creates and returns a copy of the field values hashtable, with only fields of elementary types.
            </summary>
            <returns>The filtered, cloned hashtable.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Delete">
            <summary>
            Marks this meta object for deletion.
            </summary>
            <remarks>
            The actual delete is not performed until AcceptChanges is called.
            Static delete methods call overrides of this method.
            </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.AcceptChanges(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Commits in memory changes to the database.
            </summary>
            <param name="context">The meta data context.</param>
            <remarks>
            The meta object already has a meta data context nested into MetaClass.Context. While the multi-language
            values in this object will be for language MetaClass.Context.Language,  all saves through AcceptChanges
            will use the supplied context, possible saving fields to a different langauge than they were loaded from.
            While this is known behavior, it is not necessarily a feature.
            </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.RejectChanges(Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Rejects any changes, restoring the object to its original state.
            </summary>
            <param name="context">The meta data context.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Data.IDataReader)">
            <summary>
            Loads a meta object of the specified type from in-memory data.
            </summary>
            <param name="type">The type of the meta object to load.</param>
            <param name="reader">Data describing the meta object.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Data.DataRowView)">
            <summary>
            Loads a meta object of the specified type from in-memory data.
            </summary>
            <param name="type">he type of the meta object to load.</param>
            <param name="row">Data describing the meta object.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.Configurator.MetaClass,System.Data.DataRow)">
            <summary>
            Loads a meta object of the specified type from in-memory data.
            </summary>
            <param name="type">he type of the meta object to load.</param>
            <param name="row">Data describing the meta object.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.ValidateMetaField(System.String,System.Object)">
            <summary>
            Ensures that the specified value is appropriate to be stored in the specified meta field.
            If the value is not valid, an exception will be thrown.
            </summary>
            <param name="metaFieldName">The name of the meta field.</param>
            <param name="value">The value to check.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.ChangeState">
            <summary>
            Sets the object to a modified state.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetOrAllocateMetaKey(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.Configurator.MetaField,System.Nullable{System.Int32})">
            <summary>
            Gets a Meta Key, create one if it does not exist.
            </summary>
            <param name="context">The Meta data context.</param>
            <param name="metaField">The Meta field.</param>
            <param name="workId">The content workid. This param can be null. It should be used in case of getting Meta key for a property which belong to a content draft.</param>
            <returns>The Meta key.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.CloneFrom(Mediachase.MetaDataPlus.MetaObject,System.Boolean)">
            <summary>
            Clones the specified meta object.
            If stealFieldStorage is <c>true</c>, the field storage object will be taken from the source object, rather than copied.
            StealFieldStorage should be <c>false</c> if the source object may be observed outside the caller's scope.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetMetaObjectUpdateParameters(Mediachase.MetaDataPlus.MetaDataContext,System.Boolean)">
            <summary>
            Get parameters for updating a meta object
            </summary>
            <param name="context">the meta data context</param>
            <param name="isCatalogMetaClass">The indicator of catalog meta class</param>
            <returns>dictionary (metafield, parameter)</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetMetaObjectUpdateParameters(Mediachase.MetaDataPlus.MetaDataContext,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Collections.Generic.IEnumerable{Mediachase.MetaDataPlus.Configurator.MetaField})">
            <summary>
            Get parameters for updating a meta object
            </summary>
            <param name="context">the meta data context</param>
            <param name="parameterIndexes">dictionary of parameters and their indexes</param>
            <param name="metaFieldList">list of meta fields</param>
            <returns>dictionary (metafield, parameter)</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetList(Mediachase.MetaDataPlus.MetaDataContext,Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Loads all instance of the specified meta class into an array.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="type">The type of meta objects to load.</param>
            <returns>The array of loaded objects.</returns>
            <remarks>This is extremely inefficient, and probably should not be used in production code.</remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.String)">
            <summary>
            Loads the specified meta object.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to delete.</param>
            <param name="metaClassName">The name of the meta class to load.</param>
            <returns>The loaded meta object, or null if it was not found.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32)">
            <summary>
            Loads the specified meta object.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to load.</param>
            <param name="metaClassId">The unique identifier of the meta class to load.</param>
            <returns>The loaded meta object, or null if it was not found.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Loads the specified meta object.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to load.</param>
            <param name="type">The meta class to load.</param>
            <returns>The loaded meta object, or null if it was not found.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.String,System.String,System.DateTime)">
            <summary>
            Loads the specified meta object and sets modification information.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to load.</param>
            <param name="metaClassName">The name of the meta class to load.</param>
            <param name="modifierId">A key representing the user about to modify the object.</param>
            <param name="modified">The date and time to use as a timestamp for the pending modification.</param>
            <returns>The loaded meta object, or null if it was not found.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32,System.String,System.DateTime)">
            <summary>
            Loads the specified meta object and sets modification information.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to load.</param>
            <param name="metaClassId">The unique identifier of the meta class to load.</param>
            <param name="modifierId">A key representing the user about to modify the object.</param>
            <param name="modified">The date and time to use as a timestamp for the pending modification.</param>
            <returns>The loaded meta object, or null if it was not found.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Load(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,Mediachase.MetaDataPlus.Configurator.MetaClass,System.String,System.DateTime)">
            <summary>
            Loads the specified meta object and sets modification information.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to load.</param>
            <param name="type">The meta class to load.</param>
            <param name="modifierId">A key representing the user about to modify the object.</param>
            <param name="modified">The date and time to use as a timestamp for the pending modification.</param>
            <returns>The loaded meta object, or null if it was not found.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Delete(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.String)">
            <summary>
            Deletes the specified meta object.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to delete.</param>
            <param name="metaClassName">The name of the meta class that the object is an instance of.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Delete(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,System.Int32)">
            <summary>
            Deletes the specified meta object.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to delete.</param>
            <param name="metaClassId">The id of the meta class that the object is an instance of.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Delete(Mediachase.MetaDataPlus.MetaDataContext,System.Int32,Mediachase.MetaDataPlus.Configurator.MetaClass)">
            <summary>
            Deletes the specified meta object.
            </summary>
            <param name="context">The meta data context.</param>
            <param name="objectId">The unique identifier of the object to delete.</param>
            <param name="type">The meta class of the object to load.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.Clone(Mediachase.MetaDataPlus.MetaObject)">
            <summary>
            Clones the specified meta object, copies its field storage object.
            </summary>
            <param name="metaObject">The meta object to clone.</param>
            <returns>The cloned meta object, or null if the <paramref name="metaObject"/> is null.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization.</param>
            <exception cref="T:System.ArgumentNullException">info</exception>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetSchema">
            <summary>
            Gets the schema. Should always return null.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized</param>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetChildElements(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Gets the child elements.
            </summary>
            <param name="document">The document.</param>
            <param name="elementName">Name of the element.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaObject.GetXDocument(System.Xml.XmlReader)">
            <summary>
            Gets the x document.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.Id">
            <summary>
            The unique identifier of the meta object.
            </summary>
            <remarks>
            Identifiers less than or equal to zero are considered placeholders.
            If such an identifier is assigned, the object state will be automatically set to Added.
            </remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.CreatorId">
            <summary>
            A key to the user who created this meta object.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.ModifierId">
            <summary>
            A key to the user who last modified this meta object.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.Created">
            <summary>
            The date and time this meta object was created.
            </summary>
            <remarks>
            The value should be stored in UTC.
            </remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.Modified">
            <summary>
            The date and time this meta object was last modified.
            </summary>
            <remarks>
            The value should be stored in UTC.
            </remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.DisableSync">
            <summary>
            Disable sync with content versions.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.ObjectState">
            <summary>
            The state of this meta object.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.MetaClass">
            <summary>
            The meta class that this meta object is an instance of.
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.Item(Mediachase.MetaDataPlus.Configurator.MetaField)">
            <summary>
            Indexes user meta field values by MetaField.
            </summary>
            <remarks>
            NOTE: Indexing the meta object by the MetaField instance will NOT validate the value and set the object state to modified.
            If this is desired, use the indexer for strings with field.Name.
            This is only to maintain the same behavior as previous versions, and should not be interpreted as a feature.
            </remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.Item(System.String)">
            <summary>
            Indexes user meta field values by name.
            </summary>
            <remarks>
            NOTE: Indexing the meta object by the meta field name instance will validate the value and set the object state to modified.
            If this is desired, use the indexer for MetaFields with a proper MetaField instance.
            This is only to maintain the same behavior as previous versions, and should not be interpreted as a feature.
            </remarks>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaObject.FieldStorage">
            <summary>
            A hashtable containing the meta fields of this meta object, keyed by name.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaDataPlusException">
            <summary>
            Summary description for MetaDataPlusException.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.DeletedObjectInaccessibleException">
            <summary>
            Summary description for DeletedObjectInaccessibleException.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.IncorrectValueTypeException">
            <summary>
            Summary description for IncorectValueTypeException.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.IncorrectDictionaryItemException">
            <summary>
            Summary description for IncorectDictionaryItemException.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaObjectState">
            <summary>
            Summary description for MetaObjectState.
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.MetaObjectState.Added">
            <summary>
            The object has been added, and AcceptChanges has not been called.
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.MetaObjectState.Deleted">
            <summary>
            The object was deleted using the Delete method of the MetaObject.
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.MetaObjectState.Modified">
            <summary>
            The object has been modified and AcceptChanges has not been called.
            </summary>
        </member>
        <member name="F:Mediachase.MetaDataPlus.MetaObjectState.Unchanged">
            <summary>
            The object has not changed since AcceptChanges was last called.
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaStringDictionary">
            <summary>
            Summary description for MetaStringDictionary.
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaStringDictionary.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <remarks>
                Instances are considered Equal if both Dictionaries contain the same keys with the same values, regardless of order.
            </remarks>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaStringDictionary.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaUriSegment">
            <summary>
            Handles Uri segment specific calls to the database
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaUriSegment.ListMatchingSegments(System.Int32,System.String,Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Lists all children directly under <paramref name="parentNodeId"/> that matches the <paramref name="uriSegment"/>
            </summary>
            <param name="parentNodeId">Id of the parent node to search under, or 0 for searching on the catalog level.</param>
            <param name="uriSegment">The url segment to find</param>
            <param name="context">The meta data context</param>
            <returns>List of children</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaUriSegment.ListMatchingSegments(System.Int32,System.Int32,System.String,Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Lists all children directly under <paramref name="parentNodeId"/> that matches the <paramref name="uriSegment"/>
            </summary>
            <param name="parentNodeId">Id of the parent node to search under, or 0 for searching on the catalog level.</param>
            <param name="catalogId">The catalogId, or 0 to not filter by catalog.</param>
            <param name="uriSegment">The url segment to find</param>
            <param name="context">The meta data context</param>
            <returns>List of children</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaUriSegment.ValidateUniqueSegment(System.Int32,System.String,Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Validates there is no child directly under <paramref name="parentNodeId"/> with the <paramref name="uriSegment"/>
            </summary>
            <param name="parentNodeId">Id of the parent node to search under, or 0 for searching on the catalog level.</param>
            <param name="uriSegment">The url segment to find</param>
            <param name="context">The meta data context</param>
            <returns><c>True</c> if no children was found, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaUriSegment.ValidateUniqueSegment(System.Int32,System.Int32,System.String,Mediachase.MetaDataPlus.MetaDataContext)">
            <summary>
            Validates there is no child directly under <paramref name="parentNodeId"/> with the <paramref name="uriSegment"/>
            </summary>
            <param name="parentNodeId">Id of the parent node to search under, or 0 for searching on the catalog level.</param>
            <param name="catalogId">The catalogId, or 0 to not filter by catalog.</param>
            <param name="uriSegment">The url segment to find</param>
            <param name="context">The meta data context</param>
            <returns><c>True</c> if no children was found, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Mediachase.MetaDataPlus.MetaUriSegmentResult">
            <summary>
            Result object for MetaUriSegment
            </summary>
        </member>
        <member name="M:Mediachase.MetaDataPlus.MetaUriSegmentResult.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.MetaDataPlus.MetaUriSegmentResult"/> class.
            </summary>
            <param name="id">Id of the found item</param>
            <param name="languageCode">The language of the found item</param>
            <param name="contentType">Content type of the found item</param>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaUriSegmentResult.Id">
            <summary>
            Id of the found item
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaUriSegmentResult.LanguageCode">
            <summary>
            The language of the found item
            </summary>
        </member>
        <member name="P:Mediachase.MetaDataPlus.MetaUriSegmentResult.ContentTypeId">
            <summary>
            Content type of the found item
            </summary>
        </member>
        <member name="T:Mediachase.MetaDataPlus.NoRequiredMetaFields">
            <summary>
            IRequiredMetaFieldCollection implementation defining no required meta fields.
            </summary>
        </member>
    </members>
</doc>
