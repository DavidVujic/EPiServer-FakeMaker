<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EPiServer.Configuration</name>
    </assembly>
    <members>
        <member name="T:EPiServer.Configuration.BasicAuthenticationSection">
            <summary>
            Contains the configuration for the <see cref="T:EPiServer.Security.BasicAuthentication"/> module.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.BasicAuthenticationSection.SendBasicChallenge">
            <summary>
            Gets a value indicating whether the <see cref="T:EPiServer.Security.BasicAuthentication"/> module 
            should send basic challenge to the client.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.BasicAuthenticationSection.BasicRealm">
            <summary>
            Gets the basic realm used when sending a basic authentication challenge to the client.
            </summary>
            <value>The basic realm.</value>
        </member>
        <member name="P:EPiServer.Configuration.BasicAuthenticationSection.CurrentSection">
            <summary>
            Gets the <see cref="T:EPiServer.Configuration.BasicAuthenticationSection"/> configuration for the current location.
            </summary>
            <value>The current section.</value>
        </member>
        <member name="M:EPiServer.Configuration.BoolValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliany with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.BoolValidator.Validate(System.Object)">
            <summary>
            Valudate the value from the configuration. Treats the value as string
            and if NOT parseable as boolean, throws Exception.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.BoolValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around boolean properties.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.ColorValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliant with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.ColorValidator.Validate(System.Object)">
            <summary>
            Validate the value from the configuration. Treats the value as string
            and if NOT parseable as a Uri, throws an exception
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.ColorValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around Uri properties.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.ConfigurationElementBase">
            <summary>
            Base class for configuration elements that should be able to put in GenericElementCollection
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.ConfigurationElementBase.#ctor">
            <summary>
            Default constructor should not be used
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.ConfigurationElementBase.#ctor(System.String)">
            <summary>
            constructor
            </summary>
            <param name="elementName">name of element</param>
        </member>
        <member name="P:EPiServer.Configuration.ConfigurationElementBase.ElementName">
            <summary>
            Element name
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.CustomRegexStringValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliany with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.CustomRegexStringValidator.Validate(System.Object)">
            <summary>
            Valudate the value from the configuration. Treats the value as string
            and if NOT parseable as boolean, throws Exception.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.CustomRegexStringValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around boolean properties.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.DynamicContentElement.Controls">
            <summary>
            Defines the Dynamic Content controls that are allowed to be used on the web site.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.EncodingValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliant with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.EncodingValidator.Validate(System.Object)">
            <summary>
            Validate the value from the configuration. Treats the value as string
            and if NOT parseable as a Uri, throws an exception
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.EncodingValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around Uri properties.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.ConfigurationInstance">
            <summary>
            Gets and sets the current configuration to use
            </summary>
            <exclude/>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.Sites">
            <summary>
            reference collection
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.ApplicationSettings">
            <summary>
            Gets the application settings.
            </summary>
            <value>
            The application settings.
            </value>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.VirtualPathSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.UrlRewriteSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.DynamicContentSettings">
            <summary>
            Holds settings related to Dynamic content.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.VirtualPathMappings">
            <summary>
            
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.ImageEditorSettings">
            <summary>
            Gets the settings for the EPiServer Image Editor.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.LinkValidator">
            <summary>
            Gets the settings for the link validator.
            </summary>
            <value>The link validator.</value>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.VisitorGroup">
            <summary>
            Gets the settings for the visitor group.
            </summary>
            <value>The visitor group.</value>
        </member>
        <member name="P:EPiServer.Configuration.EPiServerSection.XmlNamespace">
            <summary>
            XmlNamespace property is required to allow the xmlns declaration on the EPiServer configuration element. 
            xmlns value is not used by the configuration but is needed since the configuration can contain the namespace information 
            in order for VS intellisense to work.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.GenericConfigurationElementCollection`1">
            <summary>
            Collection of configuration elements
            </summary>
            <typeparam name="T">configuration element type</typeparam>
        </member>
        <member name="P:EPiServer.Configuration.GenericConfigurationElementCollection`1.Item(System.Int32)">
            <summary>
            indexer
            </summary>
            <param name="index">index</param>
            <returns>configuration element</returns>
        </member>
        <member name="M:EPiServer.Configuration.GenericConfigurationElementCollection`1.IsElementName(System.String)">
            <summary>
            Checks if a name mathces the element type
            </summary>
            <param name="elementName">the name to check</param>
            <returns>if matches element type</returns>
        </member>
        <member name="P:EPiServer.Configuration.GenericConfigurationElementCollection`1.CollectionType">
            <summary>
            returns the collection type
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.GenericConfigurationElementCollection`1.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            returns the element key for the configuration 
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:EPiServer.Configuration.GenericConfigurationElementCollection`1.CreateNewElement">
            <summary>
            Creates a new configuration element of the generic type
            </summary>
            <returns></returns>
        </member>
        <member name="M:EPiServer.Configuration.MailAddressValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliant with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.MailAddressValidator.Validate(System.Object)">
            <summary>
            Validate the value from the configuration. Treats the value as string
            and if NOT parseable as a Uri, throws an exception
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.MailAddressValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around Uri properties.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.CustomMailAddressConverter">
            <summary>
            Class for converting between string and MailAddress
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.CustomMailAddressConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the conversion is allowed.
            </summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversion.</param>
            <param name="type">The type to convert to.</param>
            <returns>
            true if the conversion is allowed; otherwise, false.
            </returns>
        </member>
        <member name="M:EPiServer.Configuration.CustomMailAddressConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the conversion is allowed.
            </summary>
            <param name="ctx">The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object used for type conversions.</param>
            <param name="type">The <see cref="T:System.Type"></see> to convert from.</param>
            <returns>
            true if the conversion is allowed; otherwise, false.
            </returns>
        </member>
        <member name="M:EPiServer.Configuration.CustomMailAddressConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts MailAdress to string
            </summary>
            <param name="ctx">The context</param>
            <param name="ci">The cultureinfo</param>
            <param name="value">The value to convert</param>
            <param name="type">The type to convert to</param>
            <returns>string representation</returns>
            <remarks>Only supports conversion to string</remarks>
        </member>
        <member name="M:EPiServer.Configuration.CustomMailAddressConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts string to MailAdress
            </summary>
            <param name="ctx">The context</param>
            <param name="ci">The cultureinfo</param>
            <param name="data">The data to convert</param>
            <returns>MailAdress</returns>
            <remarks>Supports only conversion from string</remarks>
        </member>
        <member name="T:EPiServer.Configuration.Settings">
            <summary>
            Holds the instances of all Site Settings configurations which are in the WebConfig file.
            </summary>
            <remarks>
            	<para>
            The <b>Settings</b> class contains information about site settings configuration. This includes the
            current instance of site settings configuration via (<b>Instance</b>) and all sites settings configuration via (<b>ALL</b>).
            </para>
            	<para>
            		The <b>Settings</b> class has the fallback host, which is indicates with "*" in the web.config file for an enterprise solution.
            </para>
            </remarks>
        </member>
        <member name="F:EPiServer.Configuration.Settings._indexingTextRegExpDefaultValue">
            <summary>
            The default regular expression to index words in pages
            </summary>
            <remarks>
            Short description for Unicode character categories \p{x} below: 
            L=letters, N=numbers, S=symbols
            Check out http://www.unicode.org/Public/UNIDATA/UnicodeData.html for more info.
            Each word must contain at least 2 chars.
            </remarks>
        </member>
        <member name="M:EPiServer.Configuration.Settings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Configuration.Settings"/> class.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.Version">
            <summary>
            Gets the version of this configuration.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.Settings.Save(EPiServer.Framework.Configuration.RestartMode)">
            <summary>
            Saves the configuration file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EPiServer.Configuration.Settings.Save">
            <summary>
            Save method for the web.config file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EPiServer.Configuration.Settings.CopyValues(EPiServer.Configuration.Settings,EPiServer.Configuration.Settings)">
            <summary>
            Copies all values from one Settings instance to another instance.iisreset.
            </summary>
            <returns></returns>
        </member>
        <member name="P:EPiServer.Configuration.Settings.Instance">
            <summary>
            Get the current configuration settings.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.All">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IDictionary{TKey, TValue}"/> containing all Settings instances
            in the application's configuration file. The Dictionary uses the site tags' applicationId attribute as keys.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.Settings.MapHostToSettings(System.String,System.Boolean)">
            <summary>
            Maps a host name to a <see cref="T:EPiServer.Configuration.Settings"/> instance.
            </summary>
            <param name="hostName">The host name.</param>
            <param name="fallback">Specifies whether to use a fallback settings instance or not.</param>
            <returns>A Settings instance with configuration information to handle this request.</returns>
            <remarks>
            This is used for enterprise solutions where you have multiple &lt;settings&gt; sections in the
            same web.config file.
            </remarks>
        </member>
        <member name="M:EPiServer.Configuration.Settings.MapUrlToSettings(System.Uri)">
            <summary>
            Maps URL to a <see cref="T:EPiServer.Configuration.Settings"/> instance.
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
            <remarks>
            This is used for enterprise solutions where you have multiple &lt;settings&gt; sections in the
            same web.config file. If the host name that is safe to use for DNS resolution does <b><i>not</i></b> exist, 
            then it maps to fallback host which is indicates with "*".
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Thrown ArgumentNullException if the URI is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            Thrown ArgumentException if the URI is <b><i>not</i></b> absolute.
            </exception>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
            If the URI absolute path is <b><i>not</i></b> equal with the site settings absolute path.
            Hits when the URI has a path that is outside of the application root.
            </exception>
        </member>
        <member name="M:EPiServer.Configuration.Settings.InitializeAllSettings">
            <summary>
            Sets up all static variables of the Settings class based on the web.config file in the applications root directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EPiServer.Configuration.Settings.InitializeAllSettings(System.Configuration.Configuration)">
            <summary>
            Sets up all static variables of the Settings class based on System.Configuration.Configuration object passed as a parameter.
            </summary>
            <param name="config">The System.Configuration.Configuration object that contains the EPiServer settings.</param>
            <returns></returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
            If there is an enterprise solution and the siteHosts section is missing with the value "*". 
            </exception>
        </member>
        <member name="P:EPiServer.Configuration.Settings.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.BackgroundCopyThreshold">
            <summary>
            Gets or sets the background copy threshold. If a copy operation is requested with
            a larger number of pages than threshold then the copy is performed in a background thread.
            </summary>
            <value>The background copy threshold.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.EnableScheduler">
            <summary>
            Set to false to disable EPiServer's connection with the scheduler. Default value (if the tag does not exist) is true.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.StringCompressionThreshold">
            <summary>
            Set to the number of characters when compression should be activated.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.StringDelayedLoadThreshold">
            <summary>
            Set to the number of characters when delayed loading should be activated for large strings in properties deriving from Long String.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.RemoteWebServiceCulture">
            <summary>
            Set the System.Threading.Thread.CurrentThread.CurrentCulture if handling pages remote.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.GlobalErrorHandling">
            <summary>
            Set whether you want to use EPiServer's error handling.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UISafeHtmlTags">
            <summary>
            Set which tags should not be encoded.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIOptimizeTreeForSpeed">
            <summary>
            Sets if page tree controls should evaluate if tree nodes have children.
            </summary>
            <remarks>
            Default value is <b>false</b>. If set to <b>true</b>, tree controls will not evaluate if a node has children when it becomes visible.
            Only nodes that have children will display an expand icon ([+]), which means [+]NodeName. 
            If set to <b>true</b>, tree controls will not evaluate if a node has children when it becomes visible. Thus all nodes will display
            an expand icon, regardless if it has children or not. This behavior will increase performance when displaying large tree structures.
            </remarks>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIDefaultValueForSetChangedOnPublish">
            <summary>
            Defines what the default state the "Update modified date" check box should be in when editing a page.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.SgmlParserDecodeCharEntities">
            <summary>
            Defines whether SgmlParser should decode character entities (like "&#32;") or not.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.EnableXmlRpcHeader">
            <summary>
            Defines whether xmlrpc headers should be added to page output. 
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.DisableVersionDeletion">
            <summary>
            Defines if the user interface should disable tools to increase traceability.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.EnablePerformanceCounters">
            <summary>
            Defines if performance counter data should be collected.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.HttpCacheVaryByCustom">
            <summary>
            Specifies a custom text string to vary cached output responses by. Passed to Response.Cache.SetVaryByCustom.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.HttpCacheVaryByParams">
            <summary>
            The parameters to the page (i.e. querystring) that the cache should vary by. Forwarded to Response.Cache.SetVaryByParams.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.HttpCacheExpiration">
            <summary>
            Value to set the number of seconds a page should be cached.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.HttpCacheability">
            <summary>
            Value to set the HttpCacheability enumeration for the cach.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageCacheSlidingExpiration">
            <summary>
            The page cache interval (in hours) for the local database. Set to "0" to disable.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.ContentVersionCacheSlidingExpiration">
            <summary>
            The sliding cache for how long a content version is cached. Set to "0:0:0" to disable.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.RemoteInvalidateVersionChanges">
            <summary>
            Set to true to force remote invalidation of cache of specific versions. This is can be used
            when there are load balanced editor servers and changes to a specific version should be immediately 
            seen. Otherwise it is controlled by <see cref="P:EPiServer.Configuration.Settings.ContentVersionCacheSlidingExpiration"/>.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.RemotePageCacheSlidingExpiration">
            <summary>
            The page cache intervals (in hours) for remote sites. Set to "0" to disable.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIEditorCssPaths">
            <summary>
            Defines which css file to use when rendering the editor. Reg exp pattern
            for validation is "^/[\w/\.-]{1,256}".
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UrlRewriteExtension">
            <summary>
            Defines an extension that is mapped to ASP.NET for the URL
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UrlPreventRewriteAttrebute">
            <summary>
            For internal use, do not use.
            Defines the HTML attribute name that is used by the CMS 5 legacy editor when writing / parsing content
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UrlRebaseKind">
            <summary>
            Defines the type of rebasing to do for links when using Friendly URLs
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.IISHiddenSegments">
            <summary>
            Defines IIS' hidden segments in comma separated format.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageUseBrowserLanguagePreferences">
            <summary>
            Determines if the browser language should define which language is used
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIShowGlobalizationUserInterface">
            <summary>
            Defines if the globalization module should be used
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.StrictLanguageRouting">
            <summary>
            Defines if strict language determination should be used during routing.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.SubscriptionHandler">
            <summary>
            Defines which class should handle mail
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.EnableSavingOfConfigurationToDatabase">
            <summary>
            Gets or sets a value indicating whether the configuration should be saved to database.
            </summary>
            <remarks>
            The mirroring service requires that the configruation is saved to database and therefore if
            the site is to be mirrored to or from the setting must be set to true.
            </remarks>
            <value>
            	<c>true</c> if the configuration should be saved to database; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIMaxVersions">
            <summary>
            The maximum number of page versions that EPiServer will retain.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageValidateTemplate">
            <summary>
            Sets if the current template has to match the page type template
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIKeepUserLoggedOn">
            <summary>
            Sets if the current windows authenticated user must reauthenticate after
            session timeout.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.Settings.ValidateRuntimeSettings">
            <summary>
            Validates all settings consistency and with the runtime.
            </summary>
            <remarks>
            It's ok to call frequently. It will only validate when there's a valid HtppContext and a Control
            handling the request, and it will only validate once.
            </remarks>
        </member>
        <member name="M:EPiServer.Configuration.Settings.ValidateUriAgainstAppRoot(System.Uri,System.String)">
            <summary>
            Validates the URI against app root.
            </summary>
            <param name="uri">The URI.</param>
            <param name="appRoot">The app root.</param>
            <returns></returns>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UITheme">
            <summary>
            Setting for what graphical theme should be used.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.OperationCompatibility">
            <summary>
            Gets or sets the operation compatibility. Default value is None. 
            </summary>
            <remarks>
            See <see cref="T:EPiServer.Configuration.EPiServerCompatibility"/> for details on the individual values.
            </remarks>
            <value>The operation compatibility.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.MirroringSource">
            <summary>
            The endpoint to use when communicating with mirroring server
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.GoogleMapsApiV3Url">
            <summary>
            Gets or sets the URL for Google Maps API v3
            </summary>
            <value>The URL for Google Maps API v3, possibly site-specific.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UseLegacyShortcutRouting">
            <summary>
            Gets or sets the useLegacyShortcutRouting that determines how request for pages with a shortcut should be handled.
            If value is true then the request will be redirected to the page it shorcuts to. If setting is false
            no redirection is done while data is fetched from shortcut page.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageFolderVirtualPathProviderName">
            <summary>
            Name for the VirtualPathProvider that is responsible for handling of page folders 
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UtilUrl">
            <summary>
            Gets or sets the URL to the relocateable Util folder. It must be a Web URL, and may include scheme and port.
            It must be a Web URL, and include the path to the site root. It is only to be used
            to generate direct references to the site in external locations. For references from a page, use root-relative
            URLs and ResolveUrl etc as appropriate.
            </summary>
            <value>The "Util" URL. Guaranteed to end with a '/'.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIUrl">
            <summary>
            Gets or sets the URL to the relocateable UI folder. It must be a Web URL, and may include scheme and port.
            It must be a Web URL, and include the path to the site root. It is only to be used
            to generate direct references to the site in external locations. For references from a page, use root-relative
            URLs and ResolveUrl etc as appropriate.
            </summary>
            <value>The "UI" URL. Guaranteed to end with a '/'.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PermanentEditRetainPeriod">
            <summary>
            Gets or sets the retain period for the page's "permanent edit" status.
            </summary>
            <value>The retain period.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.MaxContentsPerDatabaseRequest">
            <summary>
            Gets or sets the number of contents when contents requested from database.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.EnableModelSyncCommit">
            <summary>
            Set to false to disable the commit phase when synchronizing typed models. Block types and page types will not be updated automatically.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.DefaultNotificationEmailAddress">
            <summary>
            System default email address for no reply emails
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.DefaultNotificationEmailDisplayName">
            <summary>
            System default sender name for no reply emails
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.ExpirationNotificationPeriod">
            <summary>
            The amount of time before a contents expiration date that the expiration warning should become visible.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.MonitoredTaskTruncateLimit">
            <summary>
            NOTE: This is a pre-release API that is UNSTABLE and might not satisfy the compatibility requirements as denoted by its associated normal version.
            The amount of time before a monitored task will be removed.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UseStartPublishForDelayedPublishUntil">
            <summary>
            Set to false to disable the use of the start publish field to store the date the publishing of a content item should be delayed until.
            </summary>
            <remarks>
            This member supports the EPiServer infrastructure and is not intended to be used directly from your code.
            </remarks>
        </member>
        <member name="P:EPiServer.Configuration.Settings.IndexingDelayAfterPublish">
            <summary>
            Delay time between publish and indexing.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.IndexingTextEnabled">
            <summary>
            If indexing of text into keywords should be enabled.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIDefaultPanelTab">
            <summary>
            The index of the EditPanel tab that is to be shown by default when clicking a page in the edit mode page tree.
            </summary>
            <remarks>
            The value of this property is used as an zero-based index in an array of EditPanel tabs.
            For example, all pages in a default installation of the example will have the following tabs:
            
            Tab name        Index
            View            0
            Edit            1
            Version list    2
            </remarks>
        </member>
        <member name="P:EPiServer.Configuration.Settings.IndexingTextRegExp">
            <summary>
            The regular expression to index words in pages.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIImageTransparencyReplacement">
            <summary>
            The color that should replace the transparent color in a picture compression.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.RemoteCacheListenerShortNames">
            <summary>
            A list of remote sites that will recieve notifications when a change is made
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIEditorColors">
            <summary>
            Defines what colors should be available for the editors
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UIEditorUnformattingPersistedTags">
            <summary>
            Controls which html tags that should not be preserved in "Remove format" action in editor.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.GlobalErrorMail">
            <summary>
            E-mail address that error messages should be sent to
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.RootPageResolver">
            <summary>
            Gets or sets the root page resolver.
            </summary>
            <value>
            The root page resolver.
            </value>
            <remarks>This should not be used it is used to keep backward compability for <see cref="P:EPiServer.Configuration.Settings.PageRootId"/>.</remarks>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageRootId">
            <summary>
            ID of the root folder
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.StartPageResolver">
            <summary>
            Gets or sets the start page resolver.
            </summary>
            <value>
            The start page resolver.
            </value>
            <remarks>This should not be used it is used to keep backward compability for <see cref="P:EPiServer.Configuration.Settings.PageStartId"/>.</remarks>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageStartId">
            <summary>
            ID of the Web page that serves as the start page for the site.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageWastebasketId">
            <summary>
            ID of the Recycle Bin.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.PageOfficeStartId">
            <summary>
            Defines from where the Office plug-in should display the site tree
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.SiteUrlResolver">
            <summary>
            Gets or sets the SiteUrl resolver.
            </summary>
            <value>
            The SiteUrl resolver.
            </value>
            <remarks>This should not be used it is used to keep backward compability for <see cref="P:EPiServer.Configuration.Settings.SiteUrl"/>.</remarks>
        </member>
        <member name="P:EPiServer.Configuration.Settings.SiteUrl">
            <summary>
            Gets or sets the site URL. It must be a Web URL, and include the path to the site root. It is only to be used
            to generate direct references to the site in external locations. For references from a page, use root-relative
            URLs and ResolveUrl etc as appropriate.
            </summary>
            <value>The site URL. Guaranteed to end with a '/'.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.SiteDisplayName">
            <summary>
            The name of the site. RegExp Pattern for validation: "^([\x20\w0-9\.-]{0,256})$".
            </summary>
            <value>The display name of the site.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.ConnectionStringName">
            <summary>
            Gets or sets the name of the connection string.
            </summary>
            <value>The name of the connection string.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.ErrorMailHandler">
            <summary>
            Gets or sets the error mail handler.
            </summary>
            <value>The error mail handler.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.AutoSaveInterval">
            <summary>
            Gets or sets the auto save interval. If the value is less than 10 seconds, the auto save feature will be turned off.
            </summary>
            <value>The auto save interval.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.UseLegacyEditMode">
            <summary>
            Gets or sets the useLegacyEditMode for determining which edit mode is set to run
            </summary>
            <value>The value of useLegacyEditMode key.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.DeadlockRetries">
            <summary>
            Gets or sets the number of retry attempts when a database deadlock occurs.
            </summary>
            <value>The number of retries retries.</value>
            <remarks>
            Deadlocks will usually not occur, but during special circumstances you may experience deadlocks. This could for example happen if pages are
            created and published very frequently (>10 pages per second).
            </remarks>
        </member>
        <member name="P:EPiServer.Configuration.Settings.DeadlockRetryDelay">
            <summary>
            Gets or sets the deadlock retry delay.
            </summary>
            <value>The data access retry delay.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.DraftRetainPeriod">
            <summary>
            Gets or sets the retain period for the draft created by the autosave functionality.
            </summary>
            <value>The draft retain period.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.DatabaseQueryTimeout">
            <summary>
            Gets or sets the database query timeout.
            </summary>
            <value>The timeout value.</value>
        </member>
        <member name="P:EPiServer.Configuration.Settings.GlobalBlockFolderId">
            <summary>
            ID of the global block folder that is shared between sites.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Settings.SiteBlockFolderId">
            <summary>
            ID of the site block folder that holds site specific blocks.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.EPiServerCompatibility">
            <summary>
            Operation Compatibility
            </summary>
        </member>
        <member name="F:EPiServer.Configuration.EPiServerCompatibility.None">
            <summary>
            There is no compatibility enabled at all.
            </summary>
        </member>
        <member name="F:EPiServer.Configuration.EPiServerCompatibility.LegacyPropertyValueType">
            <summary>
            The Value property of the following property types returns the same Type as in the
            old version instead of the new Type aligned with the property's PropertyDataType:
            
            Property Type | Old Value Type | New Value Type
            PropertyXhtmlString | string | EPiServer.Core.XhtmlString
            PropertyXForm | string | EPiServer.XForms.XForm
            PropertyUrl | string | EPiServer.Url
            PropertyDocumentUrl | string | EPiServer.Url
            PropertyImageUrl | string | EPiServer.Url
            </summary>
            <remarks>This setting is not compatible with strongly typed content models.</remarks>
        </member>
        <member name="F:EPiServer.Configuration.EPiServerCompatibility.LongStringLegacyControl">
            <summary>
            The CreatePropertyControl method on the PropertyLongString property creates PropertyLongStringControl otherwise a PropertyStringControl be created.
            </summary>
        </member>
        <member name="F:EPiServer.Configuration.EPiServerCompatibility.DynamicProperties">
            <summary>
            Enables dynamic properties
            </summary>
        </member>
        <member name="F:EPiServer.Configuration.EPiServerCompatibility.Full">
            <summary>
            Enable all compatibility flags.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.ManagerTab">
            <summary>
            The tabs that will be displayed in the Manager.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.TimeSpanValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliant with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.TimeSpanValidator.Validate(System.Object)">
            <summary>
            Valudate the value from the configuration. Treats the value as string
            and if NOT parseable, throws Exception.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.TimeSpanValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around Uri properties.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.UriValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliant with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.UriValidator.Validate(System.Object)">
            <summary>
            Validate the value from the configuration. Treats the value as string
            and if NOT parseable as a Uri, throws an exception
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.UriValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around Uri properties.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.UrlRewriteElement.Providers">
            <summary>
            
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.UrlValidator.CanValidate(System.Type)">
            <summary>
            Determines whether an object can be validated based on type.
            </summary>
            <param name="type">The object type.</param>
            <returns>
            true if the <paramref name="type"/> parameter value matches the expected type; otherwise, false.
            </returns>
        </member>
        <member name="M:EPiServer.Configuration.UrlValidator.Validate(System.Object)">
            <summary>
            Validate the value from the configuration. Treats the value as string
            and if NOT parseable as a Uri, throws an exception
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.VirtualPathElement">
            <summary>
            Handles the configuration inder XPath node //EPiServer/virtualPath 
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.VirtualPathElement.IllegalCharactersRegEx">
            <summary>
            Gets the characters that are illegal in a file or directory name.
            The value should be a regular expression, e.g. "%|\+"
            </summary>
            <value>The illegal characters reg ex.</value>
        </member>
        <member name="P:EPiServer.Configuration.VirtualPathElement.IllegalCharactersDisplayString">
            <summary>
            Gets the characters that are illegal in a file or directory name.
            The value are used to inform users which characters that are not allowed in file or directory names.
            The value should be a readable string, e.g. '%', '+'
            </summary>
            <value>The illegal characters reg ex.</value>
        </member>
        <member name="P:EPiServer.Configuration.VirtualPathElement.Providers">
            <summary>
            
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.WebUrlValidator.CanValidate(System.Type)">
            <summary>
            Checks if this Validator is compliant with the property type.
            </summary>
            <param name="type">Type to check of compliance.</param>
            <returns>If Type is bool, true otherwise false.</returns>
        </member>
        <member name="M:EPiServer.Configuration.WebUrlValidator.Validate(System.Object)">
            <summary>
            Valudate the value from the configuration. Treats the value as string
            and if NOT parseable as a 'WebUrl', throws Exception.
            </summary>
            <param name="value"></param>
        </member>
        <member name="T:EPiServer.Configuration.WebUrlValidatorAttribute">
            <summary>
            Class for returning an instance of the Validator implementation
            around Uri properties.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.ContentProviderElement">
            <summary>
            ContentProviderElement is an element in site which defines content providers. 
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.ContentProviderElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Configuration.ContentProviderElement"/> class.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.ImageEditor.ImageEditorElement">
            <summary>
            Base configuration element for the EPiServer Image Editor.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.ImageEditorElement.Enabled">
            <summary>
            Gets a value indicating whether the image editor is enabled in configuration.
            </summary>
            <value><c>true</c> if the image editor is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.ImageEditorElement.WindowWidth">
            <summary>
            Gets the preferred width of the image editor from configuration.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.ImageEditorElement.WindowHeight">
            <summary>
            Gets the preferred height of the image editor from configuration.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.ImageEditorElement.ZoomImageToFitInWindow">
            <summary>
            Determines if the zoom level of the image should be calculated so the whole image is visible when opening images.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.ImageEditorElement.ModifiedImagesTargetVirtualPath">
            <summary>
            Returns the virtual path to a location where images modified in the editor are saved.
            If this property is not set the Page folder for the active page is used.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.ImageEditorElement.SizePresets">
            <summary>
            Gets the configured presets used for crop rectangle or resize operations.
            </summary>
            <value>A collection of size presets.</value>
        </member>
        <member name="T:EPiServer.Configuration.ImageEditor.PresetElement">
            <summary>
            Size preset information for the EPiServer Image Editor
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.ImageEditor.PresetElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Configuration.ImageEditor.PresetElement"/> class.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.PresetElement.Width">
            <summary>
            Gets the preset width in pixels.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.PresetElement.Height">
            <summary>
            Gets the preset height in pixels.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.PresetElement.LanguageKey">
            <summary>
            Gets a language key to a localized description of the preset.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.PresetElement.Name">
            <summary>
            Gets a name of the preset to show in the preset list.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.ImageEditor.PresetElementCollection">
            <summary>
            Represents a collection of resizing/cropping size presets for the EPiServer Image Editor
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.ImageEditor.PresetElementCollection.ElementName">
            <summary>
            Gets the name used to identify this collection of elements in the configuration file.
            </summary>
            <returns>The name of the collection.</returns>
        </member>
        <member name="T:EPiServer.Configuration.LinkValidator.ExcludePattern">
            <summary>
            A pattern that will be ignored by the link validator.
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.LinkValidator.ExcludePattern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Configuration.LinkValidator.ExcludePattern"/> class.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.ExcludePattern.RegexString">
            <summary>
            A string used to create regex to identify links that should be ignored.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.ExcludePattern.Regex">
            <summary>
            A regex used to identify links that should be ignored.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.ExternalLinkErrorThreshold">
            <summary>
            If a consecutive number of errors on external links exceeds the threshold, the job will stop.
            </summary>
            <value>The threshold where the job will stop.</value>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.MaximumRunTime">
            <summary>
            The maximum time the job will run at one time.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.RecheckInterval">
            <summary>
            The time that must elaps before a link is rechecked.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.UserAgent">
            <summary>
            The user agent string to use when checking validity of links.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.ProxyAddress">
            <summary>
            Optional web proxy address for the link checker to use when validating links.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.ProxyUser">
            <summary>
            Optional web proxy user for to authenticate proxy connection.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.ProxyPassword">
            <summary>
            Optional web proxy password to authenticate the proxy connection.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.ProxyDomain">
            <summary>
            Optional web proxy domain to authenticate the proxy connection.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.ExcludePatterns">
            <summary>
            A list of patterns that for links that will be ignored by the link validator
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.InternalLinkValidation">
            <summary>
            How the link validator will validate internal links.
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.LinkValidator.LinkValidatorElement.ExternalLinkMinimumRequestInterval">
            <summary>
            The minimum time between requests to the same external host.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.PageProvider">
            <summary>
            PageProvider is an element in site which defines page providers. 
            </summary>
        </member>
        <member name="M:EPiServer.Configuration.PageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Configuration.PageProvider"/> class.
            </summary>
        </member>
        <member name="T:EPiServer.Configuration.Personalization.SearchKeyWordCriterionElement">
            <summary>
            Configuration element for search key word criterion
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Personalization.SearchKeyWordCriterionElement.Pattern">
            <summary>
            Gets or sets the regular expression pattern for finding search words in referrer url.
            </summary>
            <value>The pattern.</value>
        </member>
        <member name="T:EPiServer.Configuration.Personalization.VisitorGroupElement">
            <summary>
            Configuration element for visitor groups
            </summary>
        </member>
        <member name="P:EPiServer.Configuration.Personalization.VisitorGroupElement.SearchKeyWordCriteria">
            <summary>
            Gets or sets settings for the search key word criteria.
            </summary>
            <value>The search key word criteria.</value>
        </member>
        <member name="P:EPiServer.Configuration.TinyMCE.TinyMCEElement.MergedConfigurationProperties">
            <summary>
            Properties that will be mergable for plugins in tiny mce
            </summary>
        </member>
        <member name="T:EPiServer.Web.ConfigSourceReplacer">
            <summary>
            Class that includes configSource-Files into the webConfig in the memory
            </summary>
            <exclude/>
        </member>
        <member name="E:EPiServer.Web.ConfigSourceReplacer.ConfigSourceIncluded">
            <summary>
            Event gets trigged when a configSource-file is found in webConfig
            </summary>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.#ctor(System.String)">
            <summary>
            Constructor that takes the path to web.config
            </summary>
            <param name="WebConfigPath">Path to web.config</param>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.#ctor(System.String,System.String)">
            <summary>
            Constructor that takes the path to web.config and a document containing the web.config content
            </summary>
            <param name="WebConfigPath">Path to web.config</param>
            <param name="WebConfigContent">The web.config document</param>
            <remarks>This constructor can be used when the web.config has been configurated in memory before calling this class</remarks>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.LoadConfigSourceFiles">
            <summary>
            Load all configSource-files into the webconfig file in the memory
            </summary>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.RemoveConfigSourceAttributes">
            <summary>
            Removes the ConfigSource attributes from the configuration file.
            </summary>
            <remarks>If this method has been run, the SaveConfigSourceFiles method will save one big config file on disc and all configSource files will be removed.</remarks>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.SaveConfigSourceFiles">
            <summary>
            Saves all external configuration files (refered from web.config) and set web.config to point at these files
            </summary>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.ReplaceConfigSourceElementsFromFile(System.String,System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Replace a node with content from a xml-file
            </summary>
            <param name="configSourceFile">The file to be get content from</param>
            <param name="WebConfig">XmlDocument to replace nodes in</param>
            <param name="hostNode">The orginal webConfig element for the configSource-node</param>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.ReplaceAndSaveConfigSourceDocuments(System.String,System.Xml.XmlNode)">
            <summary>
            Replaces content in a configurationfile and saves it back 
            </summary>
            <param name="configSourceFile">The configSource-file</param>
            <param name="hostNode">The external configCource element with the same name as the webconfig sourceCode-node</param>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.RestoreConfigSourceElementsInWebConfig(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Replace content in web.config with content from a node
            </summary>
            <param name="webConfig">The XmlDocument to replace nodes in</param>
            <param name="hostNode">The orginal webConfig element for the configSource-node</param>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.ImportAttributeToXmlDocument(System.Xml.XmlDocument,System.Xml.XmlAttribute)">
            <summary>
            Import a XmlAttribute to a XmlDocument
            </summary>
            <param name="xmlDoc">The XmlDocument to import the attribute to</param>
            <param name="attribute">The XmlAttribute to be imported</param>
            <returns>The attribute imported to the XmlDocument</returns>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceReplacer.ReplaceChildNode(System.Xml.XmlDocument,System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Replace a node with another node in a XmlDocument
            </summary>
            <param name="xmlDoc">The XmlDocument to replace nodes in</param>
            <param name="nodeSource">The new node to be inserted</param>
            <param name="nodeTarget">The old node that will be replaced</param>
            <returns></returns>
        </member>
        <member name="T:EPiServer.Web.ConfigSourceIncludedEventArgs">
            <summary>
            EventArg that can be used when configSource-files is included into the web.config
            </summary>
        </member>
        <member name="M:EPiServer.Web.ConfigSourceIncludedEventArgs.#ctor(System.IO.FileInfo)">
            <summary>
            Constructor
            </summary>
            <param name="configSource">configuration file that is linked in web.config</param>
        </member>
        <member name="P:EPiServer.Web.ConfigSourceIncludedEventArgs.ConfigSource">
            <summary>
            FileInfo object to the configuration file
            </summary>
        </member>
    </members>
</doc>
