<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mediachase.Search.LuceneSearchProvider</name>
    </assembly>
    <members>
        <member name="M:Mediachase.Search.Providers.Lucene.BaseSearchQueryBuilder.AddQuery(System.String,Lucene.Net.Search.BooleanQuery,System.Collections.Specialized.StringCollection)">
            <summary>
            Adds the query.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <param name="query">The query.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.BaseSearchQueryBuilder.BuildQuery(Mediachase.Search.ISearchCriteria)">
            <summary>
            Build Lucense query base on ECF Search Criteria
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Search.Providers.Lucene.IndexSearcherPool">
            <summary>
            Provides a pool of IndesSearcher instances.
            </summary>
            <remarks>
            Creating a new IndexSearcher is expensive. This class provides a safe way to re-use IndexSearcher instances
            by using a pool and handing out instances in a thread-safe manner.
            </remarks>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.IndexSearcherPool.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Search.Providers.Lucene.IndexSearcherPool"/> class.
            </summary>
            <param name="cacheTimeout">The cache timeout which specifies how long an IndexSearcher will be re-usable.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.IndexSearcherPool.Get(System.String)">
            <summary>
            Gets an IndexSearcher instance that uses the specified directory path.
            </summary>
            <param name="dirPath">The directory path of the search index.</param>
            <returns>A cachedIndexSearcher, which is an IndexSearcher with a few additional properties to 
            support caching.</returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.IndexSearcherPool.Get(Lucene.Net.Store.Directory)">
            <summary>
            Gets an IndexSearcher instance that uses the specified directory path.
            </summary>
            <param name="storeDirectory">The cloud store directory path of the search index.</param>
            <returns>A cachedIndexSearcher, which is an IndexSearcher with a few additional properties to
            support caching.</returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.IndexSearcherPool.Put(Mediachase.Search.Providers.Lucene.CachedIndexSearcher)">
            <summary>
            Puts the specified IndexSearcher into the pool.
            </summary>
            <param name="searcher">The index searcher.</param>
            <remarks>
            If the searcher has already expired when calling this method, it will be disposed and not put into the pool.
            </remarks>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.IndexSearcherPool.Clear">
            <summary>
            Clears all pooled IndexSearcher instances.
            </summary>
            <remarks>
            Any IndexSearchers that are in the pool will be disposed and removed from the pool.
            </remarks>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneQueryHelper.CreateQuery(System.String,Mediachase.Search.ISearchFilterValue)">
            <summary>
            Creates the query.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneQueryHelper.CreateQuery(System.String,Mediachase.Search.RangeValue)">
            <summary>
            Creates the query.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneQueryHelper.CreateQuery(System.String,Mediachase.Search.PriceRangeValue)">
            <summary>
            Creates the query.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneQueryHelper.ConvertToSearchable(System.String)">
            <summary>
            Converts string representation of a number to Lucene searchable.
            </summary>
            <param name="value">string representation of a number. E.g.: "2.00"</param>
            <returns>a string which Lucene can index</returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneQueryHelper.CreateQuery(System.String,Mediachase.Search.SimpleValue)">
            <summary>
            Creates the query.
            </summary>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Mediachase.Search.Providers.Lucene.LuceneSearchProvider">
            <summary>
            A search provider implementation for Lucene Search.
            </summary>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">
            The name of the provider is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The name of the provider has a length of zero.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"/> for a provider after the provider has already been initialized.
            </exception>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.Search(System.String,Mediachase.Search.ISearchCriteria)">
            <summary>
            Searches the datasource using the specified criteria. Criteria is parsed by the query builder specified by <see cref="P:LuceneSearchProvider.QueryBuilderType"/>.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.Index(System.String,System.String,Mediachase.Search.ISearchDocument)">
            <summary>
            Adds the document to the index. Depending on the provider, the document will be commited only after commit is called.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="scope">The scope.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.Remove(System.String,System.String,System.String,System.String)">
            <summary>
            Removes the document by specifying scope (core in SOLR), key (a field that can be used to lookup for a document) and
            value of the key.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="scope">The scope.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>Always returns one.  The number of documents removed may not be immediately available.</returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.RemoveAll(System.String,System.String)">
            <summary>
            Removes all documents in the specified scope.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="scope">The scope.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.Commit(System.String)">
            <summary>
            Commits changes made to this instance.
            </summary>
            <param name="applicationName">Name of the application.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.Close(System.String,System.String)">
            <summary>
            Closes the specified provider.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="scope">The scope.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.GetWriter(System.String,System.String)">
            <summary>
            Get index writer.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="scope">The scope.</param>
            <returns>Return the writer.</returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.GetSearcher(System.String,System.String)">
            <summary>
            Get index searcher.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="scope">The scope.</param>
            <returns>Return the searcher.</returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.ConvertDocument(Mediachase.Search.ISearchDocument)">
            <summary>
            Converts to Lucene's Document.
            </summary>
            <param name="document">The ISearchDocument document.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.AddFieldToDocument(Lucene.Net.Documents.Document,Mediachase.Search.ISearchField)">
            <summary>
            Adds the field to document.
            </summary>
            <param name="doc">The doc.</param>
            <param name="field">The field.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.GetCoreName(System.String,System.String)">
            <summary>
            Gets the name of the core.
            </summary>
            <param name="applicationName">Name of the application.</param>
            <param name="scope">The scope.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.GetCoreDirectoryPath(System.String)">
            <summary>
            Gets the core directory path.
            </summary>
            <param name="core">The core.</param>
            <returns>Physical path inside _Storage</returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.ConvertStringToSortable(System.String)">
            <summary>
            Converts the string to sortable.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.ConvertStringToSortable(System.Decimal)">
            <summary>
            Converts the string to sortable.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="P:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.SimulateFaceting">
            <summary>
            Gets a value indicating whether or not to simulate faceting.
            </summary>
        </member>
        <member name="P:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.AutoCommit">
            <summary>
            Gets a value indicating whether to [auto commit].
            </summary>
            <value><c>true</c> if [auto commit]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.AutoCommitCount">
            <summary>
            Gets the auto commit count.
            </summary>
            <value>The auto commit count.</value>
        </member>
        <member name="P:Mediachase.Search.Providers.Lucene.LuceneSearchProvider.QueryBuilderType">
            <summary>
            Gets the class type of the query builder. This class will be used to dynamically convert SearchCriteria to a query
            that Search Provider can understand.
            </summary>
            <value>The type of the query builder.</value>
            <example>
            // The following type will build a query for the SOLR server
            "Mediachase.Search.Providers.Solr.SolrSearchQueryBuilder, Mediachase.Search.SolrSearchProvider"
            </example>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchQueryBuilder.BuildQuery(Mediachase.Search.ISearchCriteria)">
            <summary>
            Builds the query.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchQueryBuilder.AddSelectedFilters(Mediachase.Search.Extensions.AbstractSearchCriteria,Lucene.Net.Search.BooleanQuery,System.String)">
            <summary>
            Adds the selected filters.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="query">The query.</param>
            <param name="skipFieldName">Name of the skip field.</param>
            <returns></returns>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchResults.#ctor(Lucene.Net.Index.IndexReader,Lucene.Net.Search.TopDocs,Mediachase.Search.ISearchCriteria,Lucene.Net.Search.Query,Mediachase.Search.ISearchQueryBuilder,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Search.Providers.Lucene.LuceneSearchResults"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="topDocs">The top docs.</param>
            <param name="criteria">The criteria.</param>
            <param name="query">The query.</param>
            <param name="searchQueryBuilder">The search query builder.</param>
            <param name="simulateFaceting">if set to <c>true</c> [simulate faceting].</param>
            <param name="multiFacetCapable">if set to <c>true</c> [multi facet capable].</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchResults.#ctor(Lucene.Net.Index.IndexReader,Lucene.Net.Search.TopDocs,Mediachase.Search.ISearchCriteria,Lucene.Net.Search.Query,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Search.Extensions.SearchResults"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="topDocs">The topDocs.</param>
            <param name="criteria">The criteria.</param>
            <param name="query">The query.</param>
            <param name="simulateFaceting">A flag to enable/disable simulated faceting.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchResults.#ctor(Lucene.Net.Index.IndexReader,Lucene.Net.Search.TopDocs,Mediachase.Search.ISearchCriteria,Lucene.Net.Search.Query)">
            <summary>
            Initializes a new instance of the <see cref="T:Mediachase.Search.Extensions.SearchResults"/> class.
            </summary>
            <param name="reader">The reader.</param>
            <param name="topDocs">The topDocs.</param>
            <param name="criteria">The criteria.</param>
            <param name="query">The query.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchResults.PopulateDocuments(Lucene.Net.Index.IndexReader,Lucene.Net.Search.TopDocs)">
            <summary>
            Populates the documents.
            </summary>
            <param name="reader">The <see cref="T:Lucene.Net.Index.IndexReader"/> object</param>
            <param name="topDocs">The topDocs.</param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneSearchResults.PopulateFacets(Lucene.Net.Index.IndexReader,Lucene.Net.Search.Query)">
            <summary>
            Populates the facets.
            </summary>
        </member>
        <member name="P:Mediachase.Search.Providers.Lucene.LuceneSearchResults.FacetGroups">
            <summary>
            Gets the facet groups.
            </summary>
            <value>The facet groups.</value>
        </member>
        <member name="T:Mediachase.Search.Providers.Lucene.LuceneIndexWriter">
            <summary>
            Wrapper class for the Lucene index writer that queues write requests, ensures all file 
            system resources are disposed as soon as possible, and wraps any file system concurrency 
            exceptions in <see cref="T:Mediachase.Search.RetryableIndexingException"/> exceptions.
            </summary>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneIndexWriter.#ctor(System.IO.DirectoryInfo,System.Int32)">
            <summary>
            Contructor LuceneIndexWriter using System.IO.DirectoryInfo
            </summary>
            <param name="directory"></param>
            <param name="commitCount"></param>
        </member>
        <member name="M:Mediachase.Search.Providers.Lucene.LuceneIndexWriter.#ctor(Lucene.Net.Store.Directory,System.Int32)">
            <summary>
            Contructor LuceneIndexWriter using Lucene Store Directory base
            </summary>
            <param name="storeDirectory"></param>
            <param name="commitCount"></param>
        </member>
        <member name="T:Mediachase.Search.Providers.Lucene.LuceneIndexWriter.QueuedAction">
            <summary>
            Encapsulates write actions so that a single list can be maintained with all operations
            in the original order.
            </summary>
        </member>
    </members>
</doc>
