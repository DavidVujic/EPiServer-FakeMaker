<?xml version="1.0"?>
<doc>
  <assembly>
    <name>EPiServer.Web.WebControls</name>
  </assembly>
  <members>
    <member name="T:EPiServer.Web.WebControls.Calendar">
      <summary>
            Displays a template based calendar where the calendar events are pages in EPiServer.
            </summary>
      <remarks>Pages that will serve as events must at least have properties "EventStartDate" and "EventStopDate"
            <example>
            Example usage of Calendar.
            <code source="../CodeSamples/EPiServer/WebControls/CalendarSamples.aspx" region="CalendarExample" lang="aspnet" /></example></remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:EPiServer.Web.WebControls.Calendar" /></summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.CreateDayPrefix(System.DateTime)">
      <summary>
            Create day prefix template for date
            </summary>
      <param name="nowDate">The date to created template for</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.CreateDaySuffix(System.DateTime)">
      <summary>
            Created day suffix template for day
            </summary>
      <param name="nowDate">The date to create template for</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.CreateEventTemplate(EPiServer.Core.PageData,System.DateTime)">
      <summary>
            Create template for a calendar event
            </summary>
      <param name="page">The page to created a event template for</param>
      <param name="currentDate">Current date that page should be visibly on</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.SetCalendarInterval">
      <summary>
            Set begin and stop dates. Called when Calendar is about to create child controls.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.IsEventRecurring(EPiServer.Core.PageData,EPiServer.Web.WebControls.Calendar.Days)">
      <summary>
            Check if event is recurring
            </summary>
      <param name="pageData">The page to check</param>
      <param name="day">The day to check</param>
      <returns>If event was recurring the specified day</returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.DateIsActive(System.DateTime)">
      <summary>
            Is this method to check if a date has active events in it.
            </summary>
      <param name="activeDate">The date to compare with the event.</param>
      <returns>
        <b>True</b> if there is an event on the date.</returns>
      <remarks>The date must be set to be rendered by the control.</remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.Calendar.ValidatePages(EPiServer.Core.PageDataCollection)">
      <summary>
            Method that validates that all pages are valid calendar pages.
            </summary>
      <param name="pages">The pages to validate.</param>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.ActiveSelectedDates">
      <summary>
            A collection of the dates with events on for the selected period.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.SelectedDates">
      <summary>
            A collection of dates to be rendered. The control will render all dates from the first date
            in the collection to the last date.
            </summary>
      <remarks>The Collection should be sorted by Date.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.IgnoreInvalidPages">
      <summary>
            If pages that does not qualify as calendar pages should be ignored.
            </summary>
      <value>Default value is false.</value>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.NumberOfDaysToRender">
      <summary>
            Number of days to display at a time in the Calender.
            </summary>
      <remarks>Default value is 7</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.PageTypeID">
      <summary>
            Restrict events to the following PageTypeID.
            </summary>
      <remarks>By default no page type restriction is applied</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.ExpandAllDays">
      <summary>
            Shows all days even if there are no events on this day.
            </summary>
      <remarks>Default value is true.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.ReverseDateSortOrder">
      <summary>
            If the dates for the calendar should be shown in reverse order. Default value is false.
            </summary>
      <remarks>The events for each day will still be sorted normally.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.MaxCount">
      <summary>
            Set value to limit the amount of events that are rendered.
            </summary>
      <remarks>Default value is -1</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.BeginDate">
      <summary>
            Date of first day displayed in Calender. Is not used if SelectedDates is specified.
            </summary>
      <remarks>Default value is set to <see cref="P:System.DateTime.Today" />.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.DayPrefixTemplate">
      <summary>
            Template for day prefix.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.EventTemplate">
      <summary>
            Template for events in the calendar.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.DaySuffixTemplate">
      <summary>
            Template for day suffix.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Calendar.EnableVisibleInMenu">
      <summary>
            Gets or sets whether the calendar should filter page based on the "Visible in menu" property.
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.CalendarEventTemplateContainer">
      <summary>
            Template for a Calender Event.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.CalendarEventTemplateContainer.#ctor(EPiServer.Core.PageData,System.DateTime,System.DateTime,System.DateTime)">
      <summary>
            Initializes a new instance of <see cref="T:EPiServer.Web.WebControls.CalendarEventTemplateContainer" /></summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CalendarEventTemplateContainer.CurrentDate">
      <summary>
            Current date for the event.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CalendarEventTemplateContainer.CurrentEventStartTime">
      <summary>
            The time the current event begins.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CalendarEventTemplateContainer.CurrentEventStopTime">
      <summary>
            The time the current event ends.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CalendarEventTemplateContainer.StartDate">
      <summary>
            First date for the event.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CalendarEventTemplateContainer.StartTime">
      <summary>
            Start time for event.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CalendarEventTemplateContainer.StopDate">
      <summary>
            Stop date for the event.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CalendarEventTemplateContainer.StopTime">
      <summary>
            Stop time for the event.
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.CategoryDataSource">
      <summary>
            Provides Category data to DataBoundControl implementations.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.CategoryDataSource.IncludeRootCategory">
      <summary>
            Gets or sets a value indicating whether to include the root category in the listing of categories. Default is to not include the root category.
            </summary>
    </member>
    <member name="E:EPiServer.Web.WebControls.CategoryDataSource.System#Web#UI#IHierarchicalDataSource#DataSourceChanged">
      <summary>
            Occurs when the data source has changed. 
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.CategoryDataSource.OnDataSourceChanged(System.EventArgs)">
      <summary>
            Signals that the state of the DataSourceControl has changed so that bound controls can rebind.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:EPiServer.Web.WebControls.CategoryDataSource.HierarchicalSelect(System.String)">
      <summary>
            Returns a category collection for the provided viewpath. If viewpath is null or an empty string the specified root category is selected.
            </summary>
      <param name="ViewPath">a string representation of the category id</param>
      <returns>a collection of categories</returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.CategoryDataSource.GetCategoriesRecursive(EPiServer.DataAbstraction.Category,System.Collections.Generic.List{EPiServer.DataAbstraction.Category})">
      <summary>
            Get categories from all levels below the parent level
            </summary>
      <param name="parent">The parent category</param>
      <param name="categories">The list of categories to be built</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.CategoryDataSource.GetSelectedOrRootCategory(System.Collections.IDictionary,System.String)">
      <summary>
            Gets a selected category or the root category.
            </summary>
      <param name="key">the key which points to the selected category in values</param>
      <param name="values">a dictionary of parameter entries</param>
      <returns>The category</returns>
      <remarks>If the selectParameters collection contains a value for "ID" its corresponding value will be used to load the category. If "ID" is not present this method will return the root category.</remarks>
    </member>
    <member name="T:EPiServer.Web.WebControls.FullRefreshPropertiesMetaData">
      <summary>
                Renders a hidden input element with a data-epi-full-refresh-property-names attribute containing a comma separated 
                list of names of properties that requires a full page refresh when edited.
            </summary>
      <remarks>
                Make sure that this control is used somewhere in the markup if you have registered any properties for full refresh.
                The list of property names is collected from <see cref="P:EPiServer.PageBase.EditHints" />.
            </remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.FullRefreshPropertiesMetaData.Render(System.Web.UI.HtmlTextWriter)">
      <summary>
                Renders a hidden input element with a data-epi-full-refresh-property-names attribute containing a comma separated 
                list of names of properties that requires a full page refresh when edited.
            </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content.</param>
      <remarks>
                Make sure that this control is used somewhere in the markup if you have registered any properties for full refresh.
                The list of property names is collected from <see cref="P:EPiServer.PageBase.EditHints" />.
            </remarks>
    </member>
    <member name="T:EPiServer.Web.WebControls.LanguageDataSource">
      <summary>
            Provides LanguageBranch data to DataBoundControl implementations.
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.MenuList">
      <summary>
            Renders a menu list of top level items, useful for navigations that contain a top level menu
            displaying subtree's as clicked.
            </summary>
      <remarks>Use this control as a datasource to get child pages to currently selected subtree</remarks>
      <example>
            Example usage of MenuList using a <see cref="T:EPiServer.Web.WebControls.PageTree" /> to display subtree's through data binding.
            <code source="../CodeSamples/EPiServer/WebControls/MenuListSamples.aspx" region="MenuList" lang="aspnet" /></example>
    </member>
    <member name="M:EPiServer.Web.WebControls.MenuList.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Web.WebControls.MenuList" /> class.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.MenuList.ExpandNodeIfStartPage">
      <summary>
            Set this property to automatically select a page when on start page
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.MenuList.HeaderTemplate">
      <summary>
            The default template for heading
            </summary>
      <remarks>Contained page will be the root page for the tree</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.MenuList.SeparatorTemplate">
      <summary>
            The template used between pages
            </summary>
      <remarks>No contained data</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.MenuList.FooterTemplate">
      <summary>
            The default template for footer
            </summary>
      <remarks>Contained page will be the root page for the tree</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.MenuList.ItemTemplate">
      <summary>
            Template used for displaying items in the navigation bar
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.MenuList.SelectedTemplate">
      <summary>
            Template used for displaying selected items in the navigation bar
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.MenuList.Render(System.Web.UI.HtmlTextWriter)">
      <summary> 
            Render this control to the output parameter specified.
            </summary>
      <param name="output"> The HTML writer to write out to </param>
    </member>
    <member name="M:EPiServer.Web.WebControls.MenuList.CreateChildControls">
      <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.NewsList">
      <summary>
            Control for rendering news list with specialized template for top level news.
            </summary>
      <remarks>
        <para>
            NewsList has special templates for the first four news and a default <see cref="P:EPiServer.Web.WebControls.NewsList.NewsTemplate" />,
            if you specify <see cref="P:EPiServer.Web.WebControls.NewsList.NewsTemplate" /> it will be used as fallback for the first four templates that
            have not been set.
            </para>
        <para>
            If you have defined all templates except NewsTemplate, you will never see more than four news (you
            only have definitions for the first four news). If you have defined four templates, but only have two news
            to display, then only two news will be displayed.
            </para>
        <para>
            NewsList sets <see cref="P:EPiServer.Web.WebControls.PageListData.SortBy" /> to "PageStartPublish" 
            and <see cref="P:EPiServer.Web.WebControls.PageListData.SortDirection" /> to 
            <see cref="F:EPiServer.Filters.FilterSortDirection.Descending" /> by default.
            </para>
      </remarks>
      <example>
            Example usage of NewsList with special design for the first news.
            <code source="../CodeSamples/EPiserver/WebControls/NewsListSamples.aspx" region="NewsList" lang="aspnet" /></example>
    </member>
    <member name="P:EPiServer.Web.WebControls.NewsList.NewsTemplate">
      <summary>
            Default template for pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.NewsList.HeaderTemplate">
      <summary>
            Default template for pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.NewsList.FooterTemplate">
      <summary>
            Default template for pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.NewsList.FirstNewsTemplate">
      <summary>
            The template for the first item
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.NewsList.SecondNewsTemplate">
      <summary>
            The template for the second item
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.NewsList.ThirdNewsTemplate">
      <summary>
            The template for the third item
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.NewsList.FourthNewsTemplate">
      <summary>
            The template for the fourth item
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.PageDataSource">
      <summary>
            Provides PageData data to DataBoundControl and HierarchicalDataBoundControl implementations.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.AccessLevel">
      <summary>
            Gets or sets the required access to the pages.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.PublishedStatus">
      <summary>
            Gets or sets the publish status of the pages.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.FilterPagesWithoutTemplate">
      <summary>
            Gets or sets whether pages that does not have a template should be removed.
            </summary>
      <remarks>Default value is true.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.PageTypeID">
      <summary>
            Gets or sets a PageTypeID value limiting the data to only containing pages with the specified page type.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.PageLink">
      <summary>
            Gets or sets the root page for a hierarchical view or the parent page for the listed pages in a tabular view.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.PageLinkProperty">
      <summary>
            The property that contains the root page to read data from if different from current
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.PageSource">
      <summary>
            Return the IPageSource implementation that this property control uses to read page data. 
            </summary>
      <value>An IPageSource implementation.</value>
      <remarks>
            The returned instance will usually be the base class for the aspx-page. 
            </remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.IncludeRootPage">
      <summary>
            Gets or sets whether to include the root page in a hierarchical view.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.EvaluateHasChildren">
      <summary>
            Gets or sets whether the hierarchical view should preevaluate the existens of child pages or always return true to let the HierarchicalDataBoundControl evaluate it as needed.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.EnableVisibleInMenu">
      <summary>
            Gets or sets whether to recognize the "visible in menu" setting for pages.
            If set to true, only pages where PageVisibleInMenu is true will be returned in the result.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.SortOrder">
      <summary>
            Predefined sort orders instead of using custom sorting by setting <see cref="P:EPiServer.Web.WebControls.PageDataSource.SortBy" /></summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.SortBy">
      <summary>
            Custom sorting on a property instead of using predefined sorting by setting <see cref="P:EPiServer.Web.WebControls.PageDataSource.SortOrder" /></summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.SortDirection">
      <summary>
            Direction for sorting listings specified by <see cref="P:EPiServer.Web.WebControls.PageDataSource.SortBy" /></summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.SkipCount">
      <summary>
            Skip the first x pages in listings
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.MaxCount">
      <summary>
            Restrict listing to a maximum number of pages.
            </summary>
      <remarks>
            Default value is -1 which means "Show all pages".
            Note that 0 menas no pages.
            </remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.Pages">
      <summary>
            Gets the list representing the partially loaded child pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.SessionId">
      <summary>
            Gets the session id used as key for caching the list of partially loaded child pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.View">
      <summary>
            Gets the view for tabular controls.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.SelectValues">
      <summary>
            Gets a dictionary containing entries defined by SelectParameters
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.UseFallbackLanguage">
      <summary>
            Gets or sets wether fallback to master language should be used when fetching pages.
            </summary>
      <value>
        <c>true</c> if fallback language should be used; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.PropertyResolver">
      <summary>
            Gets or sets the <see cref="P:EPiServer.Web.WebControls.PageDataSource.PropertyResolver" /> that should be used by the current control instance.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDataSource.SelectParameters">
      <summary>
            Gets the parameters collection that contains the parameters that are used when selecting pages.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.#ctor">
      <summary>
            Default constructor
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.OnLoad(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event and invalidates the SessionId in the cache.
            </summary>
      <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.OnInit(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"></see> event and attaches an event handler for the <see cref="E:System.Web.UI.Page.LoadComplete" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.OnDataSourceChanged(System.EventArgs)">
      <summary>
            Raises the DataSourceChanged event.
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.GetChildren(EPiServer.Core.PageReference,System.Int32,System.Int32,System.Int32@)">
      <summary>
            Gets the paged and filtered children of a specified page 
            Used when retreiving data for a paging data bound control.
            </summary>
      <param name="pageLink">The page for which the children should be loaded</param>
      <param name="startIndex">
      </param>
      <param name="maxRows">
      </param>
      <param name="loaded">
      </param>
      <returns>A filtered PageDataCollection</returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.GetChildrenCallback(System.Int32,System.Int32)">
      <summary>
            Callback method used by the PartialList of Pages to fill non populated ranges
            </summary>
      <param name="startIndex">
      </param>
      <param name="maxRows">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.FilterPageCallback(System.Int32)">
      <summary>
            Callback method used for filtering pages retreived through the PartialList
            </summary>
      <param name="pageId">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>
            Returns the actual data of the data source.
            </summary>
      <returns>an enumeration of PageData objects</returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.Delete(System.Collections.IDictionary)">
      <summary>
            Deletes a Page (and any children of the page) as specified by the PageLink entry in the keys collection or the DeleteParameters collection.
            </summary>
      <param name="values">The values passed to delete. Should include a param PageLink of type PageReference</param>
      <returns>a value</returns>
    </member>
    <member name="E:EPiServer.Web.WebControls.PageDataSource.Filter">
      <summary>
            Exposes the Filter event of the underlying HierarchicalPageLoader.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.CreateFilters">
      <summary>
            Attaches a filter to remove pages marked to be invisible in menus.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.CreatePreSortFilters">
      <summary>
            Called once when the control needs access to pre sort filters used for modifying a <see cref="T:EPiServer.Core.PageDataCollection" />.
            </summary>
      <remarks>
        <para>Override this method to customize the population of filters to run before sorting occurs.</para>
        <para>Typical use is to add pages to create a combined list from two or more folders, or to remove pages based that should not appear in listing. For example by using <see cref="T:EPiServer.Filters.FilterCompareTo" /></para>
      </remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.CreateSortFilters">
      <summary>
            Called once when the control needs access to sort filters used for modifying a <see cref="T:EPiServer.Core.PageDataCollection" />.
            </summary>
      <remarks>
        <para>Override this method to customize the population of sorting filters.</para>
        <para>Typically used to change the order between pages, for example with <see cref="T:EPiServer.Filters.FilterPropertySort" />.</para>
      </remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.CreatePostSortFilters">
      <summary>
            Called once when the control needs access to post sort filters used for modifying a <see cref="T:EPiServer.Core.PageDataCollection" />.
            </summary>
      <remarks>
        <para>Override this method to customize the population of filters to run after sorting occurs.</para>
        <para>Typical use is to limit the number of pages, for example by using <see cref="T:EPiServer.Filters.FilterCount" /> or <see cref="T:EPiServer.Filters.FilterSkipCount" /></para>
      </remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.HierarchicalSelect(System.String)">
      <summary>
            Performs the selection of pages based on the viewPath parameter.
            </summary>
      <remarks>Override this method to implement custom hierarchical behavior.</remarks>
      <param name="viewPath">The hierarchical path of the node to enumerate.</param>
      <returns>An IHierarchicalEnumerable representing the child structure of the specified path.</returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.InitializePageLoader(EPiServer.Web.WebControls.HierarchicalPageLoader)">
      <summary>
            Initialize the PageLoader with callbacks and filters. Can be overloaded to change the GetPageCallback, InitializeCallback, and InitializeCallback on the HierarchicalPageLoader object
            </summary>
      <param name="pageLoader">object to set the callbacks on</param>
      <remarks>Sets the pageLoader.GetChildrenCallback to get the children with AutoDetect and filters pages with selected access level. 
            Sets the pageLoader.GetPageCallback to get the PageData with AutoDetect.
            Sets the pageLoader.InitializeCallback to set the loader properties (calls SetLoaderProperties)
            It also creates presort filters, sort filters, and postsort filters.</remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.SetLoaderProperties">
      <summary>
            Sets the loader properties. This method must be called prior to handing out the loader to the Hierarchical object model (PageHierarchicalEnumerable, PageHierarchicalView etc.)
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.GetPageLink">
      <summary>
            Gets the current PageLink based on the settings of the PageLink and PageLinkProperty properties.
            </summary>
      <returns>A PageReference.</returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.SetupPageSource">
      <summary>
            Initializes the PageSource property if necessary.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageDataSource.LoadCompleteEventHandler(System.Object,System.EventArgs)">
      <summary>
            Event handler for the Page.LoadComplete event that forces the select parameters to be updated so that a subsequent ExecuteSelect on the DataSourceView is called.
            </summary>
      <param name="sender">The page object.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:EPiServer.Web.WebControls.PageDefinitionDataSource">
      <summary>
            DataSource control that handles Property definitions
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDefinitionDataSource.Dynamic">
      <summary>
            Gets or sets a value indicating whether the data source should operate on PageDefinition instances that represent dynamic properties in EPiSErver or PageDefinition instances bound to PageTypes.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDefinitionDataSource.PageTypeID">
      <summary>
            Gets or sets PageTypeID used to scope the PageDefinitions the DataSource operates on.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageDefinitionDataSource.DefaultPageDefinitionTypeID">
      <summary>
            Gets or sets a value used as the default value for the PageDefinitionType upon PageDefinition instance creation.
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.PageDefinitionTypeDataSource">
      <summary>
            Provides PageDefinitionType data to DataBoundControl implementations.
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.PageList">
      <summary>
            Control for rendering page list, extends <see cref="T:EPiServer.Web.WebControls.PageListData" /> with templates.
            Supports paging.
            </summary>
      <example>
            Example usage of PageList rendering a simple list of links to pages
            <code source="../CodeSamples/EPiServer/WebControls/PageListSamples.aspx" region="PageListRendering" lang="aspnet" /></example>
      <seealso cref="T:EPiServer.Web.WebControls.PageListData" />
      <seealso cref="T:EPiServer.Web.WebControls.PageControlBase" />
    </member>
    <member name="P:EPiServer.Web.WebControls.PageList.ItemTemplate">
      <summary>
            The default template for pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageList.HeaderTemplate">
      <summary>
            Template for listing header
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageList.FooterTemplate">
      <summary>
            Template for listing footer
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.PageTree">
      <summary>
            Control for rendering page tree's, extends <see cref="T:EPiServer.Web.WebControls.PageTreeData" /> with templates.<br />
            See also <seealso cref="T:EPiServer.Web.WebControls.PageTreeData" />, <seealso cref="T:EPiServer.Web.WebControls.PageControlBase" /></summary>
      <remarks>
            Specify at least <see cref="P:EPiServer.Web.WebControls.PageTree.ItemTemplate" /> to enable rendering, other templates not set 
            will fallback on the most likely substitute If the <see cref="P:EPiServer.Web.WebControls.PageTree.TopTemplate" /> is set other 
            TopTemplates will fallback to this template insted of the corresponding ItemTemplate.
            <note>
            Keep in mind while inherriting that the template fallback behavior can be modified by overriding any of the virtual 
            InstantiateXXXTemplate methods. 
            If you just want to change in which order the different templates will be used you simply call the InstantiateTemplate 
            method providing the template order you want for your rendering as arguments.
            </note></remarks>
      <example>
            Example usage of PageTree rendering a simple tree of pages.
            <code source="../CodeSamples/EPiServer/WebControls/PageTreeSamples.aspx" region="PageTreeRendering" /></example>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Web.WebControls.PageTree" /> class.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.Render(System.Web.UI.HtmlTextWriter)">
      <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.CreateChildControls">
      <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.CreateItemTemplateControl(EPiServer.Core.PageData,System.Int32,System.Boolean,EPiServer.Core.PageReference)">
      <summary>
            Creates the item template control.
            </summary>
      <param name="page">The page.</param>
      <param name="level">The level.</param>
      <param name="hasChildren">if set to <c>true</c> [has children].</param>
      <param name="currentPageLink">The current page link.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateItemTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the item template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateSelectedItemTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the selected item template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateExpandedItemTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the expanded item template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateSelectedExpandedItemTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the selected expanded item template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateTopTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the top template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateSelectedTopTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the selected top template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateExpandedTopTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the expanded top template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.PageTree.InstantiateSelectedExpandedTopTemplate(EPiServer.Web.WebControls.PageTemplateContainer)">
      <summary>
            Instantiates the selected expanded top template.
            </summary>
      <param name="template">The template.</param>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.HeaderTemplate">
      <summary>
            The default template for heading
            </summary>
      <remarks>Contained page will be the root page for the tree</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.FooterTemplate">
      <summary>
            The default template for footer
            </summary>
      <remarks>Contained page will be the root page for the tree</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.ItemTemplate">
      <summary>
            The default template for pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.IndentTemplate">
      <summary>
            The template for indent rendering
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.UnindentTemplate">
      <summary>
            The template for unindent rendering
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.SelectedItemTemplate">
      <summary>
            The default template for selected pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.ExpandedItemTemplate">
      <summary>
            The default template for expanded pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.SelectedExpandedItemTemplate">
      <summary>
            The default template for selected and expanded pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.TopTemplate">
      <summary>
            The default template for top level pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.SelectedTopTemplate">
      <summary>
            The default template for selected top level pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.ExpandedTopTemplate">
      <summary>
            The default template for expanded top level pages
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.PageTree.SelectedExpandedTopTemplate">
      <summary>
            The default template for selected and expanded top level pages
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.Property">
      <summary>
            WebControl for rendering page properties.
            </summary>
      <remarks>
            The Property control is used on web forms and user controls and renders the value 
            of built-in or custom properties to the HTML stream.
            </remarks>
      <example>
            The following example shows how to print the name of the page to HTML:
            <code source="../CodeSamples/EPiServerNET/WebControls/PropertySamples.aspx" region="PrintHTML" lang="aspnet" /><note>
            The PropertyName attribute is not case sensitive.
            </note><para>
            For the Property control to be able to read the properties from the page, it needs to 
            be hosted on a web form or a control that implements the IPageSource interface. The 
            control will iterate through the control hierarchy looking for this interface, and when 
            it finds one it will use the CurrentPage property to read the information about the 
            specific built-in or custom property. 
            </para><para>
            If you put a Property control inside a templated control like the PageList control, that 
            implements IPageSource, the Property control will use the CurrentPage property of the 
            template control instead. The PageList then points the Property control to the current 
            PageData object in its internal PageDataCollection. This is why the two following PageList 
            examples will print the same:
            </para><code source="../CodeSamples/EPiServerNET/WebControls/PropertySamples.aspx" region="PageListSamples" lang="aspnet" />
            You can also access the inner PropertyData object through the InnerProperty property, if 
            you need access to the raw value.
            </example>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Web.WebControls.Property" /> class.
            </summary>
      <remarks>
            This control requires that either the <see cref="P:EPiServer.Web.WebControls.Property.PropertyName" /> or the <see cref="P:EPiServer.Web.WebControls.Property.InnerProperty" /> 
            property is set for it to work properly.
            </remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.#ctor(EPiServer.Core.PropertyData)">
      <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Web.WebControls.Property" /> class with the given <see cref="T:EPiServer.Core.PropertyData" /> instance.
            </summary>
      <param name="propertyData">The inner property data object.</param>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.ObjectSerializerFactory">
      <summary>
            Gets or sets the object serializer to use when serializing to Json.
            </summary>
      <value>The object serializer.</value>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.DisplayMissingMessage">
      <summary>
            Gets or sets a value indicating if an error message should be displayed if 
            no property with the name provided by <see cref="P:EPiServer.Web.WebControls.Property.PropertyName" /> could be found.
            </summary>
      <remarks>
            If the property pointed to by PropertyName does not exist, an error message will be 
            printed instead. If you want to suppress this error message, set this property to false.
            <code><![CDATA[<episerver:property propertyname="MyProperty" runat="server" DisplayMissingMessage='false' />]]></code></remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.PropertyName">
      <summary>
            Gets or sets the name of the property that should be displayed by this control.
            </summary>
      <remarks>
                Please note that the PropertyName attribute is not case sensitive.
            </remarks>
      <example>
            The following example shows how to print the name of the page to HTML:
            <code><![CDATA[<episerver:property propertyname="PageName" runat="server" />]]></code></example>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.EditMode">
      <summary>
            Controls if the property should render it's edit mode.
            </summary>
      <remarks>
            By setting the EditMode property to true the property will be rendered in "edit view", 
            just like it is when viewed through the Editors View.
            <note><b>Note:</b>  Any changes to the edit control will be saved if you enter DOPE mode on 
            the page and save it, or call the OnDopeSave() client side method from client side script.
            </note><code><![CDATA[<episerver:property editmode="True" runat="server" propertyname="MainBody" /> 
            <button onclick="OnDopeSave()">Save</button>]]></code></remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.Editable">
      <summary>
            Controls if the property is editable with DOPE
            </summary>
      <remarks>
            The Property control will give you DOPE (Direct On Page Editing) support if the 
            underlaying template page supports it (any web form that inherits directly or 
            indirectly from TemplatePage. If you do not want DOPE support you can either inherit 
            from SimplePage, or set the Editable property to false, like this:
            <code><![CDATA[<episerver:property propertyname="PageName" runat="server" Editable='false' />]]></code></remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.ValidationGroup">
      <summary>
            Gets or sets the validation group.
            </summary>
      <value>The validation group.</value>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.RenderSettings">
      <summary>
            Gets or sets any render settings for the property.
            </summary>
      <value>The render settings for the property.</value>
      <remarks>These settings can vary from property to property, consult the documentation for each property for more details on custom properties.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.EditorSettings">
      <summary>
            Gets or sets any editor settings for the property.
            </summary>
      <value>The editor settings for the property.</value>
      <remarks>These settings can vary from property to property, consult the documentation for each property for more details on custom properties.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.OverlaySettings">
      <summary>
            Gets or sets any overlay settings for the property.
            </summary>
      <value>The overlay settings for the property.</value>
      <remarks>These settings can vary from property to property, consult the documentation for each property for more details on custom properties.</remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.CustomTagName">
      <summary>
            Gets or sets the tag name. If not set a span-tag will be used.
            </summary>
      <example>
                Set to "h1" to create a h1-tag around the content.
            </example>
      <value>
            	The custom tag name.
            </value>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.PageLink">
      <summary>
            The root page to read data from if different from current
            </summary>
      <remarks>
            If you do not want the Property web control to retrieve the property value from 
            the currently loaded page (or the current page in a PageDataCollection when inside 
            a templated web control) you can set the PageLink to point to another page.
            <para>
            The PageLink property is a PageReference, but you can also assign an int (the ID of the page.)
            </para><para><code><![CDATA[<episerver:property runat="server" propertyname="MainBody" PageLink="30" />]]></code></para><para>
            or: 
            </para><para><code><![CDATA[<episerver:property runat="server" propertyname="MainBody" PageLink='<%# EPiServer.Global.EPConfig.StartPage%>' />]]></code></para></remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.PageLinkProperty">
      <summary>
            The property that contains the root page to read data from if different from current
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.PropertyScopeSeparator">
      <summary>
            Gets or sets the scope name separator.
            </summary>
      <remarks>
            The default value is '.'.
            </remarks>
      <value>The scope name separator.</value>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.InnerProperty">
      <summary>
            Set or get the inner property used by this control
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.PageSource">
      <summary>
            Return the IPageSource implementation that this property control uses to read page data. 
            </summary>
      <value>An IPageSource implementation.</value>
      <remarks>
            The returned instance will usually be the base class for the aspx-page. 
            </remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.BoundPageID">
      <summary>
            Gets the ID of the <see cref="T:EPiServer.Core.PageData" /> instance bound to 
            the current template container.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.CurrentContext">
      <summary>
            Gets the current render context of this control instance.
            This will not be available until the control has been added to the control tree.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.PropertyResolver">
      <summary>
            Gets or sets the <see cref="P:EPiServer.Web.WebControls.Property.PropertyResolver" /> that should be used by the current control instance.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.ContextBuilder">
      <summary>
            Gets or sets the <see cref="T:EPiServer.Web.ControlRenderContextBuilder" /> that should be used by the current control instance.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.CreateChildControls">
      <summary>
            Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.DataBind">
      <summary>
            Binds a data source to the invoked server control and all its child controls.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.OnPreRender(System.EventArgs)">
      <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.
            </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.Render(System.Web.UI.HtmlTextWriter)">
      <summary>
            Renders the control to the specified HTML writer.
            </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content.</param>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.RenderErrorMessage(System.Web.UI.HtmlTextWriter)">
      <summary>
            Renders an error message to the specified HTML writer.
            </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content.</param>
      <remarks>
            This method is responsible for figuring out and render an error message. 
            It will look at the <see cref="P:EPiServer.Web.WebControls.Property.DisplayMissingMessage" /> to decide if it should render certain errors.
            </remarks>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.IsContainedInTemplate">
      <summary>
            Checks if this property control is contained somewhere inside a templated control that fetches a <see cref="T:EPiServer.Core.PageData" />.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.PropertyValue">
      <summary>
            The value of the loaded property
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.EnsurePropertyControlsCreated">
      <summary>
            Triggers EnsureChildControls for the Property. Mainly used be control developers.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.GetContentSource">
      <summary>
            Gets the content source.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.ContentSource">
      <summary>
            Gets or sets the content source.
            </summary>
      <value>
            The content source.
            </value>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.Get``1(EPiServer.Core.ContentReference)">
      <summary>
            Gets the specified content link.
            </summary>
      <typeparam name="T">
      </typeparam>
      <param name="contentLink">The content link.</param>
      <returns>
      </returns>
    </member>
    <member name="M:EPiServer.Web.WebControls.Property.GetChildren``1(EPiServer.Core.ContentReference)">
      <summary>
            Gets the children.
            </summary>
      <typeparam name="T">
      </typeparam>
      <param name="contentLink">The content link.</param>
      <returns>
      </returns>
    </member>
    <member name="P:EPiServer.Web.WebControls.Property.CurrentContent">
      <summary>
            Gets the currently loaded <see cref="T:EPiServer.Core.IContent">content</see>.
            </summary>
      <value>
            Returns information about the currently loaded content, or a content in
            a collection when used inside a control.
            </value>
    </member>
    <member name="T:EPiServer.Web.WebControls.SearchDataSource">
      <summary>
            Provides PageData data to DataBoundControl implementations through search based on various criteria.
            </summary>
      <example>
        <para>
            Refer to "Using Data Source Controls" under "Navigations and Listings" in the Developer Guide for more information and examples.
            </para>
      </example>
    </member>
    <member name="M:EPiServer.Web.WebControls.SearchDataSource.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Web.WebControls.SearchDataSource" /> class.
            </summary>
    </member>
    <member name="M:EPiServer.Web.WebControls.SearchDataSource.#ctor(EPiServer.Core.SearchIndexConfig)">
      <summary>
            Initializes a new instance of the <see cref="T:EPiServer.Web.WebControls.SearchDataSource" /> class.
            </summary>
      <param name="searchIndexConfig">The search index config.</param>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.SearchQuery">
      <summary>
            Search query string.
            </summary>
      <remarks>
            If SearchQuery is empty and the Criterias collection contains at 
            least one PropertyCriteria, the search will be performed using <see cref="M:EPiServer.DataFactory.FindPagesWithCriteria(EPiServer.Core.PageReference,EPiServer.PropertyCriteriaCollection)" />. 
            Default you will only get hits on pages where PageVisibleInMenu is true. If you want to get hits on pages where PageVisibleInMenu is false
            you need to set the property <see cref="P:EPiServer.Web.WebControls.PageDataSource.EnableVisibleInMenu" /> to false.
            </remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.SearchFiles">
      <summary>
            A flag to tell whether files should be included in the search or not.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.SearchLocations">
      <summary>
            A comma separated string of file system locations used as starting locations when searching for files.
            </summary>
      <value>Default value in String.Empty</value>
      <remarks>
        <para>If empty, will search in all unified directories.</para>
        <para>You can set more than one location by building a comma-separated list of paths.</para>
      </remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.MaxAllowHits">
      <summary>
            By default no more than 100 hits can be returned for performance reasons
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.Criteria">
      <summary>
            The search criterias that limit the search
            </summary>
      <remarks>
            The <see cref="T:EPiServer.PropertyCriteria" /> in the Criterias collection may be used in two different ways
            <list type="number"><item>
            If <see cref="P:EPiServer.Web.WebControls.SearchDataSource.SearchQuery" /> is not empty, the criteria in the collection will be converted to filters and 
            applied to the result of the text search. 
            </item><item>
            If <see cref="P:EPiServer.Web.WebControls.SearchDataSource.SearchQuery" /> is empty, there will be no text search. Instead the search will be 
            resolved using <see cref="M:EPiServer.DataFactory.FindPagesWithCriteria(EPiServer.Core.PageReference,EPiServer.PropertyCriteriaCollection)" /> based on the Criterias collection.
            </item></list></remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.LanguageBranches">
      <summary>
            Gets or sets a comma separated list of the language branches to be searched in.
            </summary>
      <value>The language branches.</value>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.PageCriteriaSearchService">
      <summary>
            Gets or sets the <see cref="T:EPiServer.Core.IPageCriteriaQueryService" /> that is used internally in this instance.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.OnlyWholeWords">
      <summary>
            A flag to control if the search will match only whole words.
            If False, the search will match all words that begin with the words in the query (word* match).
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.MainCatalog">
      <summary>
            The index server catalog to search in.
            </summary>
    </member>
    <member name="P:EPiServer.Web.WebControls.SearchDataSource.MainScope">
      <summary>
            The scope parameter for index server searches. The default is deep traversal under the catalog root.
            </summary>
    </member>
    <member name="T:EPiServer.Web.WebControls.Translate">
      <summary>
            WebControl for retrieving language specific strings.
            </summary>
      <remarks>
        <para>
            Use the Translate control to translate your own strings or one of the built in strings 
            in the /lang directory of you site. The text shown will vary by the current users chosen 
            language (if chosen) or the system default.
            </para>
        <para>
            The control uses the <b>LocalizationService</b> to translate the text. You can access 
            the LocalizationService through code using the <b>Current</b> static property.
            </para>
      </remarks>
      <example>
        <b>Using the Translate Control</b>
        <para>
            This will show the translated value for the /button/search language resource.
            <code><![CDATA[<episerver:translate text="/button/search" runat="server"/>]]></code></para>
        <para>
          <b>Translating ASP Intrinsic controls</b>
        </para>
        <para>
            EPiServer can also translate ASP Controls like the Label web control. In the 
            PreRender event EPiServer will search all known controls in the control hierarchy 
            with an attribute called translate (case insensitive) and retrieve the translated textual 
            value of the control.
            </para>
        <code><![CDATA[<asp:button id="QuicksearchButton" runat="server" translate="/button/search" />]]></code>
        <note>
          <b>Note:</b>  If you do not want automatic retrieval of translated values you can turn this off by setting 
            the <see cref="P:EPiServer.Web.PageExtensions.PageTranslation.TranslateType" /> property in the code behind of your template to <see cref="F:EPiServer.TranslateType.None" />. See <see cref="T:EPiServer.PageBase" /> where this property is defined.
            </note>
      </example>
    </member>
    <member name="P:EPiServer.Web.WebControls.Translate.Text">
      <summary>
            The property that holds the text to be translated.
            </summary>
      <remarks>
            See <see cref="M:EPiServer.Framework.Localization.LocalizationService.GetStringByCulture(System.String,System.Globalization.CultureInfo)" /> for more details.
            </remarks>
    </member>
    <member name="P:EPiServer.Web.WebControls.Translate.Language">
      <summary>
            Gets or sets the language code for the target language.
            </summary>
      <value>The language code.</value>
    </member>
    <member name="M:EPiServer.Web.WebControls.Translate.Render(System.Web.UI.HtmlTextWriter)">
      <summary> 
            Render this control to the output parameter specified.
            </summary>
      <param name="output"> The HTML writer to write out to </param>
    </member>
  </members>
</doc>